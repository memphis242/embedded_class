

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 13 21:53:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  00021E                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _green_light_time
    62  00021E  1388               	dw	5000
    63                           
    64                           ;initializer for _current_light
    65  000220  02                 	db	2
    66  0000                     _ADRES	set	4035
    67  0000                     _CCPR2	set	4027
    68  0000                     _CCPR1	set	4030
    69  0000                     _PR2	set	4043
    70  0000                     _T2CON	set	4042
    71  0000                     _T2CONbits	set	4042
    72  0000                     _INTCONbits	set	4082
    73  0000                     _PORTC	set	3970
    74  0000                     _TRISD	set	3989
    75  0000                     _TRISC	set	3988
    76  0000                     _PORTD	set	3971
    77  0000                     _LATCbits	set	3979
    78  0000                     _T1CON	set	4045
    79  0000                     _PIE2bits	set	4000
    80  0000                     _CCP2CON	set	4026
    81  0000                     _T3CON	set	4017
    82  0000                     _CCP1CON	set	4029
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _ADCON2bits	set	4032
    86  0000                     _TRISAbits	set	3986
    87  0000                     _ADCON0bits	set	4034
    88  0000                     _ADCON1bits	set	4033
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  000184                     __pcinit:
    94                           	callstack 0
    95  000184                     start_initialization:
    96                           	callstack 0
    97  000184                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (3 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102  000184  0E1E               	movlw	low __pidataCOMRAM
   103  000186  6EF6               	movwf	tblptrl,c
   104  000188  0E02               	movlw	high __pidataCOMRAM
   105  00018A  6EF7               	movwf	tblptrh,c
   106  00018C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107  00018E  6EF8               	movwf	tblptru,c
   108  000190  0009               	tblrd		*+	;fetch initializer
   109  000192  CFF5 F00D          	movff	tablat,__pdataCOMRAM
   110  000196  0009               	tblrd		*+	;fetch initializer
   111  000198  CFF5 F00E          	movff	tablat,__pdataCOMRAM+1
   112  00019C  0009               	tblrd		*+	;fetch initializer
   113  00019E  CFF5 F00F          	movff	tablat,__pdataCOMRAM+2
   114                           
   115                           ; Clear objects allocated to COMRAM (2 bytes)
   116  0001A2  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
   117  0001A4  6A10               	clrf	__pbssCOMRAM& (0+255),c
   118  0001A6                     end_of_initialization:
   119                           	callstack 0
   120  0001A6                     __end_of__initialization:
   121                           	callstack 0
   122  0001A6  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123  0001A8  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124  0001AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   125  0001AC  6EF8               	movwf	tblptru,c
   126  0001AE  0100               	movlb	0
   127  0001B0  EFA3  F000         	goto	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMRAM
   130  000010                     __pbssCOMRAM:
   131                           	callstack 0
   132  000010                     _tmr2_interrupt_flag_count:
   133                           	callstack 0
   134  000010                     	ds	2
   135                           
   136                           	psect	dataCOMRAM
   137  00000D                     __pdataCOMRAM:
   138                           	callstack 0
   139  00000D                     _green_light_time:
   140                           	callstack 0
   141  00000D                     	ds	2
   142  00000F                     _current_light:
   143                           	callstack 0
   144  00000F                     	ds	1
   145                           
   146                           	psect	cstackCOMRAM
   147  000001                     __pcstackCOMRAM:
   148                           	callstack 0
   149  000001                     ?___wmul:
   150                           	callstack 0
   151  000001                     ___wmul@multiplier:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x0
   155  000001                     	ds	2
   156  000003                     ___wmul@multiplicand:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x2
   160  000003                     	ds	2
   161  000005                     ___wmul@product:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x4
   165  000005                     	ds	2
   166  000007                     ??_isr:
   167                           
   168                           ; 1 bytes @ 0x6
   169  000007                     	ds	4
   170  00000B                     ??_main:
   171                           
   172                           ; 1 bytes @ 0xA
   173  00000B                     	ds	2
   174                           
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 210 in file "question1.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0, cstack
   189 ;; Tracked objects:
   190 ;;		On entry : 0/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;Total ram usage:        2 bytes
   199 ;; Hardware stack levels required when called:    3
   200 ;; This function calls:
   201 ;;		_adc_init_default
   202 ;;		_tmr2_init_default
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text0
   209  000146                     __ptext0:
   210                           	callstack 0
   211  000146                     _main:
   212                           	callstack 28
   213  000146                     
   214                           ;question1.c: 213:     (TRISC &= ~(0x07u));
   215  000146  0EF8               	movlw	248
   216  000148  1694               	andwf	148,f,c	;volatile
   217  00014A                     
   218                           ;question1.c: 214:     TRISD = 0u;
   219  00014A  0E00               	movlw	0
   220  00014C  6E95               	movwf	149,c	;volatile
   221  00014E                     
   222                           ;question1.c: 215:     PORTC = 0u;
   223  00014E  0E00               	movlw	0
   224  000150  6E82               	movwf	130,c	;volatile
   225  000152                     
   226                           ;question1.c: 216:     PORTD = 0u;
   227  000152  0E00               	movlw	0
   228  000154  6E83               	movwf	131,c	;volatile
   229  000156                     
   230                           ;question1.c: 218:     tmr2_init_default();
   231  000156  EC03  F001         	call	_tmr2_init_default	;wreg free
   232                           
   233                           ;question1.c: 220:     adc_init_default();
   234  00015A  ECDA  F000         	call	_adc_init_default	;wreg free
   235  00015E                     
   236                           ;question1.c: 223:     (INTCONbits.PEIE = 1u);
   237  00015E  8CF2               	bsf	242,6,c	;volatile
   238  000160                     
   239                           ;question1.c: 224:     (INTCONbits.GIE = 1);
   240  000160  8EF2               	bsf	242,7,c	;volatile
   241  000162                     l930:
   242                           
   243                           ;question1.c: 228:         _delay((unsigned long)((500u)*(40000000U/4000.0)));
   244  000162  0E1A               	movlw	26
   245  000164  6E0C               	movwf	(??_main+1)^0,c
   246  000166  0E5E               	movlw	94
   247  000168  6E0B               	movwf	??_main^0,c
   248  00016A  0E6E               	movlw	110
   249  00016C                     u157:
   250  00016C  2EE8               	decfsz	wreg,f,c
   251  00016E  D7FE               	bra	u157
   252  000170  2E0B               	decfsz	??_main^0,f,c
   253  000172  D7FC               	bra	u157
   254  000174  2E0C               	decfsz	(??_main+1)^0,f,c
   255  000176  D7FA               	bra	u157
   256  000178  D000               	nop2	
   257  00017A                     
   258                           ;question1.c: 229:         (ADCON0bits.GODONE = 1u);
   259  00017A  82C2               	bsf	194,1,c	;volatile
   260  00017C  EFB1  F000         	goto	l930
   261  000180  EF07  F000         	goto	start
   262  000184                     __end_of_main:
   263                           	callstack 0
   264                           
   265 ;; *************** function _tmr2_init_default *****************
   266 ;; Defined at:
   267 ;;		line 238 in file "question1.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2, status,0
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; Hardware stack levels required when called:    2
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text1
   296  000206                     __ptext1:
   297                           	callstack 0
   298  000206                     _tmr2_init_default:
   299                           	callstack 28
   300  000206                     
   301                           ;question1.c: 241:     (T2CONbits.T2CKPS = (PRESCALE_4));
   302  000206  50CA               	movf	202,w,c	;volatile
   303  000208  0BFC               	andlw	-4
   304  00020A  0901               	iorlw	1
   305  00020C  6ECA               	movwf	202,c	;volatile
   306  00020E                     
   307                           ;question1.c: 242:     (T2CON |= 9u << 3u);
   308  00020E  0E48               	movlw	72
   309  000210  12CA               	iorwf	202,f,c	;volatile
   310  000212                     
   311                           ;question1.c: 243:     (PR2 = (249u));
   312  000212  0EF9               	movlw	249
   313  000214  6ECB               	movwf	203,c	;volatile
   314  000216                     
   315                           ;question1.c: 246:     (PIR1bits.TMR2IF = 0u);
   316  000216  929E               	bcf	158,1,c	;volatile
   317  000218                     
   318                           ;question1.c: 247:     (PIE1bits.TMR2IE = 1u);
   319  000218  829D               	bsf	157,1,c	;volatile
   320  00021A                     
   321                           ;question1.c: 250:     (T2CONbits.TMR2ON = 1u);
   322  00021A  84CA               	bsf	202,2,c	;volatile
   323  00021C  0012               	return		;funcret
   324  00021E                     __end_of_tmr2_init_default:
   325                           	callstack 0
   326                           
   327 ;; *************** function _adc_init_default *****************
   328 ;; Defined at:
   329 ;;		line 37 in file "src/adc.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; Hardware stack levels required when called:    2
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358  0001B4                     __ptext2:
   359                           	callstack 0
   360  0001B4                     _adc_init_default:
   361                           	callstack 28
   362  0001B4                     
   363                           ;src/adc.c: 40:     (ADCON1bits.PCFG = 0xA);
   364  0001B4  50C1               	movf	193,w,c	;volatile
   365  0001B6  0BF0               	andlw	-16
   366  0001B8  090A               	iorlw	10
   367  0001BA  6EC1               	movwf	193,c	;volatile
   368                           
   369                           ;src/adc.c: 41:     (ADCON0bits.CHS = 0x0u);
   370  0001BC  0EC3               	movlw	-61
   371  0001BE  16C2               	andwf	194,f,c	;volatile
   372  0001C0                     
   373                           ;src/adc.c: 42:     (TRISAbits.RA0 = 1u);
   374  0001C0  8092               	bsf	146,0,c	;volatile
   375                           
   376                           ;src/adc.c: 43:     (ADCON1bits.VCFG = 0x0);
   377  0001C2  0ECF               	movlw	-49
   378  0001C4  16C1               	andwf	193,f,c	;volatile
   379  0001C6                     
   380                           ;src/adc.c: 44:     (ADCON2bits.ADFM = 1u);
   381  0001C6  8EC0               	bsf	192,7,c	;volatile
   382                           
   383                           ;src/adc.c: 47:     (ADCON2bits.ACQT = ADC_ACQT_4TAD);
   384  0001C8  50C0               	movf	192,w,c	;volatile
   385  0001CA  0BC7               	andlw	-57
   386  0001CC  0910               	iorlw	16
   387  0001CE  6EC0               	movwf	192,c	;volatile
   388                           
   389                           ;src/adc.c: 48:     (ADCON2bits.ADCS = (ADC_CLK_FOSC64));
   390  0001D0  50C0               	movf	192,w,c	;volatile
   391  0001D2  0BF8               	andlw	-8
   392  0001D4  0906               	iorlw	6
   393  0001D6  6EC0               	movwf	192,c	;volatile
   394  0001D8                     
   395                           ;src/adc.c: 51:     (PIR1bits.ADIF = 0u);
   396  0001D8  9C9E               	bcf	158,6,c	;volatile
   397  0001DA                     
   398                           ;src/adc.c: 52:     (PIE1bits.ADIE = 1u);
   399  0001DA  8C9D               	bsf	157,6,c	;volatile
   400  0001DC                     
   401                           ;src/adc.c: 55:     (ADCON0bits.ADON = 1u);
   402  0001DC  80C2               	bsf	194,0,c	;volatile
   403  0001DE  0012               	return		;funcret
   404  0001E0                     __end_of_adc_init_default:
   405                           	callstack 0
   406                           
   407 ;; *************** function _isr *****************
   408 ;; Defined at:
   409 ;;		line 141 in file "question1.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;Total ram usage:        4 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    1
   430 ;; This function calls:
   431 ;;		___wmul
   432 ;; This function is called by:
   433 ;;		Interrupt level 2
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	intcode
   438  000008                     __pintcode:
   439                           	callstack 0
   440  000008                     _isr:
   441                           	callstack 28
   442                           
   443                           ;incstack = 0
   444  000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   445  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   446                           
   447                           	psect	intcode_body
   448  000012                     __pintcode_body:
   449                           	callstack 28
   450  000012                     int_func:
   451                           	callstack 28
   452  000012  0006               	pop		; remove dummy address from shadow register refresh
   453  000014  CFF3 F009          	movff	prodl,??_isr+2
   454  000018  CFF4 F00A          	movff	prodh,??_isr+3
   455  00001C                     
   456                           ;question1.c: 144:     if((PIR1bits.TMR2IF) && (PIE1bits.TMR2IE)) {
   457  00001C  A29E               	btfss	158,1,c	;volatile
   458  00001E  EF13  F000         	goto	i2u8_41
   459  000022  EF15  F000         	goto	i2u8_40
   460  000026                     i2u8_41:
   461  000026  EF7C  F000         	goto	i2l97
   462  00002A                     i2u8_40:
   463  00002A  A29D               	btfss	157,1,c	;volatile
   464  00002C  EF1A  F000         	goto	i2u9_41
   465  000030  EF1C  F000         	goto	i2u9_40
   466  000034                     i2u9_41:
   467  000034  EF7C  F000         	goto	i2l97
   468  000038                     i2u9_40:
   469  000038                     
   470                           ;question1.c: 146:         tmr2_interrupt_flag_count++;
   471  000038  4A10               	infsnz	_tmr2_interrupt_flag_count^0,f,c	;volatile
   472  00003A  2A11               	incf	(_tmr2_interrupt_flag_count+1)^0,f,c	;volatile
   473                           
   474                           ;question1.c: 148:         switch(current_light) {
   475  00003C  EF62  F000         	goto	i2l982
   476  000040                     i2l950:
   477                           
   478                           ;question1.c: 151:                 if(tmr2_interrupt_flag_count >= 5000u) {
   479  000040  0E88               	movlw	136
   480  000042  5C10               	subwf	_tmr2_interrupt_flag_count^0,w,c	;volatile
   481  000044  0E13               	movlw	19
   482  000046  5811               	subwfb	(_tmr2_interrupt_flag_count+1)^0,w,c	;volatile
   483  000048  A0D8               	btfss	status,0,c
   484  00004A  EF29  F000         	goto	i2u10_41
   485  00004E  EF2B  F000         	goto	i2u10_40
   486  000052                     i2u10_41:
   487  000052  EF7B  F000         	goto	i2l101
   488  000056                     i2u10_40:
   489  000056                     
   490                           ;question1.c: 153:                     current_light = YELLOW;
   491  000056  0E01               	movlw	1
   492  000058  6E0F               	movwf	_current_light^0,c	;volatile
   493  00005A                     
   494                           ;question1.c: 154:                     (LATCbits.LATC2 = 0u);
   495  00005A  948B               	bcf	139,2,c	;volatile
   496  00005C                     
   497                           ;question1.c: 155:                     (LATCbits.LATC0 = 0u);
   498  00005C  908B               	bcf	139,0,c	;volatile
   499  00005E                     
   500                           ;question1.c: 156:                     (LATCbits.LATC1 = 1u);
   501  00005E  828B               	bsf	139,1,c	;volatile
   502                           
   503                           ;question1.c: 159:                     tmr2_interrupt_flag_count = 0x0000u;
   504  000060  0E00               	movlw	0
   505  000062  6E11               	movwf	(_tmr2_interrupt_flag_count+1)^0,c	;volatile
   506  000064  0E00               	movlw	0
   507  000066  6E10               	movwf	_tmr2_interrupt_flag_count^0,c	;volatile
   508  000068  EF7B  F000         	goto	i2l101
   509  00006C                     i2l960:
   510                           
   511                           ;question1.c: 164:                  if(tmr2_interrupt_flag_count >= 1000u) {
   512  00006C  0EE8               	movlw	232
   513  00006E  5C10               	subwf	_tmr2_interrupt_flag_count^0,w,c	;volatile
   514  000070  0E03               	movlw	3
   515  000072  5811               	subwfb	(_tmr2_interrupt_flag_count+1)^0,w,c	;volatile
   516  000074  A0D8               	btfss	status,0,c
   517  000076  EF3F  F000         	goto	i2u11_41
   518  00007A  EF41  F000         	goto	i2u11_40
   519  00007E                     i2u11_41:
   520  00007E  EF7B  F000         	goto	i2l101
   521  000082                     i2u11_40:
   522  000082                     
   523                           ;question1.c: 166:                     current_light = GREEN;
   524  000082  0E00               	movlw	0
   525  000084  6E0F               	movwf	_current_light^0,c	;volatile
   526  000086                     
   527                           ;question1.c: 167:                     (LATCbits.LATC1 = 0u);
   528  000086  928B               	bcf	139,1,c	;volatile
   529  000088                     
   530                           ;question1.c: 168:                     (LATCbits.LATC2 = 0u);
   531  000088  948B               	bcf	139,2,c	;volatile
   532  00008A                     
   533                           ;question1.c: 169:                     (LATCbits.LATC0 = 1u);
   534  00008A  808B               	bsf	139,0,c	;volatile
   535                           
   536                           ;question1.c: 172:                     tmr2_interrupt_flag_count = 0x0000u;
   537  00008C  0E00               	movlw	0
   538  00008E  6E11               	movwf	(_tmr2_interrupt_flag_count+1)^0,c	;volatile
   539  000090  0E00               	movlw	0
   540  000092  6E10               	movwf	_tmr2_interrupt_flag_count^0,c	;volatile
   541  000094  EF7B  F000         	goto	i2l101
   542  000098                     i2l970:
   543                           
   544                           ;question1.c: 177:                 if(tmr2_interrupt_flag_count >= green_light_time) {
   545  000098  500D               	movf	_green_light_time^0,w,c	;volatile
   546  00009A  5C10               	subwf	_tmr2_interrupt_flag_count^0,w,c	;volatile
   547  00009C  500E               	movf	(_green_light_time+1)^0,w,c	;volatile
   548  00009E  5811               	subwfb	(_tmr2_interrupt_flag_count+1)^0,w,c	;volatile
   549  0000A0  A0D8               	btfss	status,0,c
   550  0000A2  EF55  F000         	goto	i2u12_41
   551  0000A6  EF57  F000         	goto	i2u12_40
   552  0000AA                     i2u12_41:
   553  0000AA  EF7B  F000         	goto	i2l101
   554  0000AE                     i2u12_40:
   555  0000AE                     
   556                           ;question1.c: 179:                     current_light = RED;
   557  0000AE  0E02               	movlw	2
   558  0000B0  6E0F               	movwf	_current_light^0,c	;volatile
   559  0000B2                     
   560                           ;question1.c: 180:                     (LATCbits.LATC0 = 0u);
   561  0000B2  908B               	bcf	139,0,c	;volatile
   562  0000B4                     
   563                           ;question1.c: 181:                     (LATCbits.LATC1 = 0u);
   564  0000B4  928B               	bcf	139,1,c	;volatile
   565  0000B6                     
   566                           ;question1.c: 182:                     (LATCbits.LATC2 = 1u);
   567  0000B6  848B               	bsf	139,2,c	;volatile
   568                           
   569                           ;question1.c: 185:                     tmr2_interrupt_flag_count = 0x0000u;
   570  0000B8  0E00               	movlw	0
   571  0000BA  6E11               	movwf	(_tmr2_interrupt_flag_count+1)^0,c	;volatile
   572  0000BC  0E00               	movlw	0
   573  0000BE  6E10               	movwf	_tmr2_interrupt_flag_count^0,c	;volatile
   574  0000C0  EF7B  F000         	goto	i2l101
   575  0000C4                     i2l982:
   576  0000C4  500F               	movf	_current_light^0,w,c	;volatile
   577  0000C6  6E07               	movwf	??_isr^0,c
   578  0000C8  6A08               	clrf	(??_isr+1)^0,c
   579                           
   580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   581                           ; Switch size 1, requested type "simple"
   582                           ; Number of cases is 1, Range of values is 0 to 0
   583                           ; switch strategies available:
   584                           ; Name         Instructions Cycles
   585                           ; simple_byte            4     3 (average)
   586                           ;	Chosen strategy is simple_byte
   587  0000CA  5008               	movf	(??_isr+1)^0,w,c
   588  0000CC  0A00               	xorlw	0	; case 0
   589  0000CE  B4D8               	btfsc	status,2,c
   590  0000D0  EF6C  F000         	goto	i2l1000
   591  0000D4  EF7B  F000         	goto	i2l101
   592  0000D8                     i2l1000:
   593                           
   594                           ; Switch size 1, requested type "simple"
   595                           ; Number of cases is 3, Range of values is 0 to 2
   596                           ; switch strategies available:
   597                           ; Name         Instructions Cycles
   598                           ; simple_byte           10     6 (average)
   599                           ;	Chosen strategy is simple_byte
   600  0000D8  5007               	movf	??_isr^0,w,c
   601  0000DA  0A00               	xorlw	0	; case 0
   602  0000DC  B4D8               	btfsc	status,2,c
   603  0000DE  EF4C  F000         	goto	i2l970
   604  0000E2  0A01               	xorlw	1	; case 1
   605  0000E4  B4D8               	btfsc	status,2,c
   606  0000E6  EF36  F000         	goto	i2l960
   607  0000EA  0A03               	xorlw	3	; case 2
   608  0000EC  B4D8               	btfsc	status,2,c
   609  0000EE  EF20  F000         	goto	i2l950
   610  0000F2  EF7B  F000         	goto	i2l101
   611  0000F6                     i2l101:
   612                           
   613                           ;question1.c: 191:         (PIR1bits.TMR2IF = 0u);
   614  0000F6  929E               	bcf	158,1,c	;volatile
   615  0000F8                     i2l97:
   616                           
   617                           ;question1.c: 195:     if((PIR1bits.ADIF) && (PIE1bits.ADIE)) {
   618  0000F8  AC9E               	btfss	158,6,c	;volatile
   619  0000FA  EF81  F000         	goto	i2u13_41
   620  0000FE  EF83  F000         	goto	i2u13_40
   621  000102                     i2u13_41:
   622  000102  EF9D  F000         	goto	i2l107
   623  000106                     i2u13_40:
   624  000106  AC9D               	btfss	157,6,c	;volatile
   625  000108  EF88  F000         	goto	i2u14_41
   626  00010C  EF8A  F000         	goto	i2u14_40
   627  000110                     i2u14_41:
   628  000110  EF9D  F000         	goto	i2l107
   629  000114                     i2u14_40:
   630  000114                     
   631                           ;question1.c: 197:          green_light_time = 5000u + (ADRES * 10u);
   632  000114  CFC3 F001          	movff	4035,___wmul@multiplier	;volatile
   633  000118  CFC4 F002          	movff	4036,___wmul@multiplier+1	;volatile
   634  00011C  0E00               	movlw	0
   635  00011E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   636  000120  0E0A               	movlw	10
   637  000122  6E03               	movwf	___wmul@multiplicand^0,c
   638  000124  ECF0  F000         	call	___wmul	;wreg free
   639  000128  0E88               	movlw	136
   640  00012A  2401               	addwf	?___wmul^0,w,c
   641  00012C  6E0D               	movwf	_green_light_time^0,c	;volatile
   642  00012E  0E13               	movlw	19
   643  000130  2002               	addwfc	(?___wmul+1)^0,w,c
   644  000132  6E0E               	movwf	(_green_light_time+1)^0,c	;volatile
   645  000134                     
   646                           ;question1.c: 201:          PORTD = (uint8_t) (ADRES & 0x0FF);
   647  000134  CFC3 FF83          	movff	4035,3971	;volatile
   648  000138                     
   649                           ;question1.c: 203:         (PIR1bits.ADIF = 0u);
   650  000138  9C9E               	bcf	158,6,c	;volatile
   651  00013A                     i2l107:
   652  00013A  C00A  FFF4         	movff	??_isr+3,prodh
   653  00013E  C009  FFF3         	movff	??_isr+2,prodl
   654  000142  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   655  000144  0011               	retfie		f
   656  000146                     __end_of_isr:
   657                           	callstack 0
   658                           
   659 ;; *************** function ___wmul *****************
   660 ;; Defined at:
   661 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  multiplier      2    0[COMRAM] unsigned int 
   664 ;;  multiplicand    2    2[COMRAM] unsigned int 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  product         2    4[COMRAM] unsigned int 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  2    0[COMRAM] unsigned int 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, prodl, prodh
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;Total ram usage:        6 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_isr
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text4
   690  0001E0                     __ptext4:
   691                           	callstack 0
   692  0001E0                     ___wmul:
   693                           	callstack 28
   694  0001E0  5001               	movf	___wmul@multiplier^0,w,c
   695  0001E2  0203               	mulwf	___wmul@multiplicand^0,c
   696  0001E4  CFF3 F005          	movff	prodl,___wmul@product
   697  0001E8  CFF4 F006          	movff	prodh,___wmul@product+1
   698  0001EC  5001               	movf	___wmul@multiplier^0,w,c
   699  0001EE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   700  0001F0  50F3               	movf	243,w,c
   701  0001F2  2606               	addwf	(___wmul@product+1)^0,f,c
   702  0001F4  5002               	movf	(___wmul@multiplier+1)^0,w,c
   703  0001F6  0203               	mulwf	___wmul@multiplicand^0,c
   704  0001F8  50F3               	movf	243,w,c
   705  0001FA  2606               	addwf	(___wmul@product+1)^0,f,c
   706  0001FC  C005  F001         	movff	___wmul@product,?___wmul
   707  000200  C006  F002         	movff	___wmul@product+1,?___wmul+1
   708  000204  0012               	return		;funcret
   709  000206                     __end_of___wmul:
   710                           	callstack 0
   711  0000                     
   712                           	psect	rparam
   713  0000                     
   714                           	psect	temp
   715  000012                     btemp:
   716                           	callstack 0
   717  000012                     	ds	1
   718  0000                     int$flags	set	btemp
   719  0000                     wtemp8	set	btemp+1
   720  0000                     ttemp5	set	btemp+1
   721  0000                     ttemp6	set	btemp+4
   722  0000                     ttemp7	set	btemp+8
   723                           
   724                           	psect	idloc
   725                           
   726                           ;Config register IDLOC0 @ 0x200000
   727                           ;	unspecified, using default values
   728  200000                     	org	2097152
   729  200000  FF                 	db	255
   730                           
   731                           ;Config register IDLOC1 @ 0x200001
   732                           ;	unspecified, using default values
   733  200001                     	org	2097153
   734  200001  FF                 	db	255
   735                           
   736                           ;Config register IDLOC2 @ 0x200002
   737                           ;	unspecified, using default values
   738  200002                     	org	2097154
   739  200002  FF                 	db	255
   740                           
   741                           ;Config register IDLOC3 @ 0x200003
   742                           ;	unspecified, using default values
   743  200003                     	org	2097155
   744  200003  FF                 	db	255
   745                           
   746                           ;Config register IDLOC4 @ 0x200004
   747                           ;	unspecified, using default values
   748  200004                     	org	2097156
   749  200004  FF                 	db	255
   750                           
   751                           ;Config register IDLOC5 @ 0x200005
   752                           ;	unspecified, using default values
   753  200005                     	org	2097157
   754  200005  FF                 	db	255
   755                           
   756                           ;Config register IDLOC6 @ 0x200006
   757                           ;	unspecified, using default values
   758  200006                     	org	2097158
   759  200006  FF                 	db	255
   760                           
   761                           ;Config register IDLOC7 @ 0x200007
   762                           ;	unspecified, using default values
   763  200007                     	org	2097159
   764  200007  FF                 	db	255
   765                           
   766                           	psect	config
   767                           
   768                           ; Padding undefined space
   769  300000                     	org	3145728
   770  300000  FF                 	db	255
   771                           
   772                           ;Config register CONFIG1H @ 0x300001
   773                           ;	Oscillator Selection bits
   774                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
   775                           ;	Fail-Safe Clock Monitor Enable bit
   776                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   777                           ;	Internal/External Oscillator Switchover bit
   778                           ;	IESO = OFF, Oscillator Switchover mode disabled
   779  300001                     	org	3145729
   780  300001  06                 	db	6
   781                           
   782                           ;Config register CONFIG2L @ 0x300002
   783                           ;	Power-up Timer Enable bit
   784                           ;	PWRT = OFF, PWRT disabled
   785                           ;	Brown-out Reset Enable bits
   786                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   787                           ;	Brown Out Reset Voltage bits
   788                           ;	BORV = 3, Minimum setting
   789  300002                     	org	3145730
   790  300002  1F                 	db	31
   791                           
   792                           ;Config register CONFIG2H @ 0x300003
   793                           ;	Watchdog Timer Enable bit
   794                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   795                           ;	Watchdog Timer Postscale Select bits
   796                           ;	WDTPS = 32768, 1:32768
   797  300003                     	org	3145731
   798  300003  1E                 	db	30
   799                           
   800                           ; Padding undefined space
   801  300004                     	org	3145732
   802  300004  FF                 	db	255
   803                           
   804                           ;Config register CONFIG3H @ 0x300005
   805                           ;	CCP2 MUX bit
   806                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
   807                           ;	PORTB A/D Enable bit
   808                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   809                           ;	Low-Power Timer1 Oscillator Enable bit
   810                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   811                           ;	MCLR Pin Enable bit
   812                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   813  300005                     	org	3145733
   814  300005  80                 	db	128
   815                           
   816                           ;Config register CONFIG4L @ 0x300006
   817                           ;	Stack Full/Underflow Reset Enable bit
   818                           ;	STVREN = ON, Stack full/underflow will cause Reset
   819                           ;	Single-Supply ICSP Enable bit
   820                           ;	LVP = OFF, Single-Supply ICSP disabled
   821                           ;	Extended Instruction Set Enable bit
   822                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   823                           ;	Background Debugger Enable bit
   824                           ;	DEBUG = 0x1, unprogrammed default
   825  300006                     	org	3145734
   826  300006  81                 	db	129
   827                           
   828                           ; Padding undefined space
   829  300007                     	org	3145735
   830  300007  FF                 	db	255
   831                           
   832                           ;Config register CONFIG5L @ 0x300008
   833                           ;	Code Protection bit
   834                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   835                           ;	Code Protection bit
   836                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   837                           ;	Code Protection bit
   838                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   839                           ;	Code Protection bit
   840                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   841  300008                     	org	3145736
   842  300008  0F                 	db	15
   843                           
   844                           ;Config register CONFIG5H @ 0x300009
   845                           ;	Boot Block Code Protection bit
   846                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   847                           ;	Data EEPROM Code Protection bit
   848                           ;	CPD = OFF, Data EEPROM not code-protected
   849  300009                     	org	3145737
   850  300009  C0                 	db	192
   851                           
   852                           ;Config register CONFIG6L @ 0x30000A
   853                           ;	Write Protection bit
   854                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   855                           ;	Write Protection bit
   856                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   857                           ;	Write Protection bit
   858                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   859                           ;	Write Protection bit
   860                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   861  30000A                     	org	3145738
   862  30000A  0F                 	db	15
   863                           
   864                           ;Config register CONFIG6H @ 0x30000B
   865                           ;	Configuration Register Write Protection bit
   866                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   867                           ;	Boot Block Write Protection bit
   868                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   869                           ;	Data EEPROM Write Protection bit
   870                           ;	WRTD = OFF, Data EEPROM not write-protected
   871  30000B                     	org	3145739
   872  30000B  E0                 	db	224
   873                           
   874                           ;Config register CONFIG7L @ 0x30000C
   875                           ;	Table Read Protection bit
   876                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   877                           ;	Table Read Protection bit
   878                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   879                           ;	Table Read Protection bit
   880                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   881                           ;	Table Read Protection bit
   882                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   883  30000C                     	org	3145740
   884  30000C  0F                 	db	15
   885                           
   886                           ;Config register CONFIG7H @ 0x30000D
   887                           ;	Boot Block Table Read Protection bit
   888                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   889  30000D                     	org	3145741
   890  30000D  40                 	db	64
   891                           tosu	equ	0xFFF
   892                           tosh	equ	0xFFE
   893                           tosl	equ	0xFFD
   894                           stkptr	equ	0xFFC
   895                           pclatu	equ	0xFFB
   896                           pclath	equ	0xFFA
   897                           pcl	equ	0xFF9
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           prodh	equ	0xFF4
   903                           prodl	equ	0xFF3
   904                           indf0	equ	0xFEF
   905                           postinc0	equ	0xFEE
   906                           postdec0	equ	0xFED
   907                           preinc0	equ	0xFEC
   908                           plusw0	equ	0xFEB
   909                           fsr0h	equ	0xFEA
   910                           fsr0l	equ	0xFE9
   911                           wreg	equ	0xFE8
   912                           indf1	equ	0xFE7
   913                           postinc1	equ	0xFE6
   914                           postdec1	equ	0xFE5
   915                           preinc1	equ	0xFE4
   916                           plusw1	equ	0xFE3
   917                           fsr1h	equ	0xFE2
   918                           fsr1l	equ	0xFE1
   919                           bsr	equ	0xFE0
   920                           indf2	equ	0xFDF
   921                           postinc2	equ	0xFDE
   922                           postdec2	equ	0xFDD
   923                           preinc2	equ	0xFDC
   924                           plusw2	equ	0xFDB
   925                           fsr2h	equ	0xFDA
   926                           fsr2l	equ	0xFD9
   927                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     12      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             10 COMRAM     2     2      0
                   _adc_init_default
                  _tmr2_init_default
 ---------------------------------------------------------------------------------
 (1) _tmr2_init_default                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init_default                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     311
                                              6 COMRAM     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init_default
   _tmr2_init_default

 _isr (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      C      11       1       13.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      34        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 13 21:53:05 2021

                        l15 01DE         ___wmul@multiplicand 0003                         l118 021C  
                       l800 01D8                         l802 01DA                         l810 0212  
                       l804 01DC                         l812 0216                         l814 0218  
                       l806 0206                         l816 021A                         l808 020E  
                       l920 014E                         l930 0162                         l922 0152  
                       l932 017A                         l924 0156                         l916 0146  
                       l926 015E                         l918 014A                         l928 0160  
                       l794 01B4                         l796 01C0                         l798 01C6  
                       u157 016C                         _PR2 000FCB                         _isr 0008  
                       wreg 000FE8  __size_of_tmr2_init_default 0018                        ?_isr 0001  
                      i2l97 00F8                        _main 0146                        btemp 0012  
                      prodh 000FF4                        prodl 000FF3                        start 000E  
              ___param_bank 000000                       ??_isr 0007                       ?_main 0001  
                     _ADRES 000FC3                       _CCPR1 000FBE                       _CCPR2 000FBB  
                     _T1CON 000FCD                       _T2CON 000FCA                       _T3CON 000FB1  
                     i2l101 00F6                       i2l121 0204                       i2l107 013A  
                     i2l940 01FC                       i2l950 0040                       i2l960 006C  
                     i2l952 0056                       i2l944 001C                       i2l938 01E0  
                     i2l970 0098                       i2l962 0082                       i2l954 005A  
                     i2l946 002A                       i2l972 00AE                       i2l964 0086  
                     i2l956 005C                       i2l948 0038                       i2l990 0138  
                     i2l974 00B2                       i2l966 0088                       i2l958 005E  
                     i2l982 00C4                       i2l984 0106                       i2l976 00B4  
                     i2l968 008A                       i2l986 0114                       i2l978 00B6  
                     i2l988 0134                       _PORTC 000F82                       _PORTD 000F83  
                     _TRISC 000F94                       _TRISD 000F95           ?_adc_init_default 0001  
        ??_adc_init_default 000B                       tablat 000FF5                       ttemp5 0013  
                     ttemp6 0016                       ttemp7 001A                       status 000FD8  
                     wtemp8 0013             __initialization 0184                __end_of_main 0184  
                    ??_main 000B               __activetblptr 000002                      i2l1000 00D8  
                    i2u8_40 002A                      i2u8_41 0026                      i2u9_40 0038  
                    i2u9_41 0034                      ___wmul 01E0                __pdataCOMRAM 000D  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
          _green_light_time 000D                  __accesstop 0080     __end_of__initialization 01A6  
             ___rparam_used 000001              __pcstackCOMRAM 0001   _tmr2_interrupt_flag_count 0010  
             _current_light 000F                     ?___wmul 0001                     _CCP1CON 000FBD  
                   _CCP2CON 000FBA                     i2u10_40 0056                     i2u10_41 0052  
                   i2u11_40 0082                     i2u11_41 007E                     i2u12_40 00AE  
                   i2u12_41 00AA                     i2u13_40 0106                     i2u13_41 0102  
                   i2u14_40 0114                     i2u14_41 0110                     __Hparam 0000  
 __size_of_adc_init_default 002C                     __Lparam 0000             __size_of___wmul 0026  
                   __pcinit 0184                     __ramtop 1000                     __ptext0 0146  
                   __ptext1 0206                     __ptext2 01B4                     __ptext4 01E0  
                 _T2CONbits 000FCA                __size_of_isr 013E              __pintcode_body 0012  
      end_of_initialization 01A6               __Lmediumconst 0000                     int_func 0012  
                 _TRISAbits 000F92              __end_of___wmul 0206               __pidataCOMRAM 021E  
       start_initialization 0184                 __end_of_isr 0146            _adc_init_default 01B4  
                  ??___wmul 0005                 __pbssCOMRAM 0010                   __pintcode 0008  
            ___wmul@product 0005                    _LATCbits 000F8B                    _PIE1bits 000F9D  
                  _PIE2bits 000FA0                    _PIR1bits 000F9E                  _ADCON0bits 000FC2  
                _ADCON1bits 000FC1                  _ADCON2bits 000FC0           ___wmul@multiplier 0001  
                  __Hrparam 0000                    __Lrparam 0000    __end_of_adc_init_default 01E0  
         _tmr2_init_default 0206          ?_tmr2_init_default 0001               __size_of_main 003E  
       ??_tmr2_init_default 000B                    int$flags 0012                  _INTCONbits 000FF2  
 __end_of_tmr2_init_default 021E                    intlevel2 0000  
