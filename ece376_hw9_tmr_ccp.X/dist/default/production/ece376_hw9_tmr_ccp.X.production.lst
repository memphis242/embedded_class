

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 10 21:19:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4620 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  00274E                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for _current_func_set
    97  00274E  30                 	db	48
    98                           
    99                           ;initializer for _current_entry_mode
   100  00274F  06                 	db	6
   101                           
   102                           ;initializer for _disp_16x2
   103  002750  01                 	db	1
   104                           
   105                           ;initializer for _current_disp_ctrl
   106  002751  08                 	db	8
   107                           
   108                           	psect	idataBANK0
   109  00271C                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for main@F3016
   113  00271C  53                 	db	83
   114  00271D  54                 	db	84
   115  00271E  4B                 	db	75
   116  00271F  50                 	db	80
   117  002720  54                 	db	84
   118  002721  52                 	db	82
   119  002722  3A                 	db	58
   120  002723  20                 	db	32
   121  002724  00                 	db	0
   122  002725  00                 	db	0
   123  002726  00                 	db	0
   124  002727  00                 	db	0
   125  002728  00                 	db	0
   126  002729  00                 	db	0
   127  00272A  00                 	db	0
   128  00272B  00                 	db	0
   129                           
   130                           ;initializer for main@F3014
   131  00272C  52                 	db	82
   132  00272D  43                 	db	67
   133  00272E  4F                 	db	79
   134  00272F  4E                 	db	78
   135  002730  3A                 	db	58
   136  002731  20                 	db	32
   137  002732  00                 	db	0
   138  002733  00                 	db	0
   139  002734  00                 	db	0
   140  002735  00                 	db	0
   141  002736  00                 	db	0
   142  002737  00                 	db	0
   143  002738  00                 	db	0
   144  002739  00                 	db	0
   145  00273A  00                 	db	0
   146  00273B  00                 	db	0
   147                           
   148                           	psect	smallconst
   149  001000                     __psmallconst:
   150                           	callstack 0
   151  001000  00                 	db	0
   152  001001                     _init_msg:
   153                           	callstack 0
   154  001001  49                 	db	73
   155  001002  6E                 	db	110
   156  001003  69                 	db	105
   157  001004  74                 	db	116
   158  001005  20                 	db	32
   159  001006  73                 	db	115
   160  001007  75                 	db	117
   161  001008  63                 	db	99
   162  001009  63                 	db	99
   163  00100A  65                 	db	101
   164  00100B  73                 	db	115
   165  00100C  73                 	db	115
   166  00100D  21                 	db	33
   167  00100E  00                 	db	0
   168  00100F                     __end_of_init_msg:
   169                           	callstack 0
   170  00100F                     _start_game_msg:
   171                           	callstack 0
   172  00100F  47                 	db	71
   173  001010  61                 	db	97
   174  001011  6D                 	db	109
   175  001012  65                 	db	101
   176  001013  20                 	db	32
   177  001014  62                 	db	98
   178  001015  65                 	db	101
   179  001016  67                 	db	103
   180  001017  75                 	db	117
   181  001018  6E                 	db	110
   182  001019  21                 	db	33
   183  00101A  00                 	db	0
   184  00101B                     __end_of_start_game_msg:
   185                           	callstack 0
   186  00101B                     _result_msg_title:
   187                           	callstack 0
   188  00101B  52                 	db	82
   189  00101C  65                 	db	101
   190  00101D  73                 	db	115
   191  00101E  75                 	db	117
   192  00101F  6C                 	db	108
   193  001020  74                 	db	116
   194  001021  3A                 	db	58
   195  001022  00                 	db	0
   196  001023                     __end_of_result_msg_title:
   197                           	callstack 0
   198  0000                     _CCPR2	set	4027
   199  0000                     _CCPR1	set	4030
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PORTBbits	set	3969
   202  0000                     _STKPTR	set	4092
   203  0000                     _RCON	set	4048
   204  0000                     _PORTB	set	3969
   205  0000                     _TRISB	set	3987
   206  0000                     _ADCON1	set	4033
   207  0000                     _PIR1bits	set	3998
   208  0000                     _T1CON	set	4045
   209  0000                     _PORTC	set	3970
   210  0000                     _PORTD	set	3971
   211  0000                     _TRISC	set	3988
   212  0000                     _PORTDbits	set	3971
   213  0000                     _LATCbits	set	3979
   214  0000                     _TRISD	set	3989
   215  0000                     _LATDbits	set	3980
   216  0000                     _PIE2bits	set	4000
   217  0000                     _CCP2CON	set	4026
   218  0000                     _PIE1bits	set	3997
   219  0000                     _T3CON	set	4017
   220  0000                     _CCP1CON	set	4029
   221  001023                     STR_1:
   222  001023  25                 	db	37
   223  001024  2D                 	db	45
   224  001025  33                 	db	51	;'3'
   225  001026  75                 	db	117	;'u'
   226  001027  73                 	db	115	;'s'
   227  001028  3A                 	db	58	;':'
   228  001029  25                 	db	37
   229  00102A  2D                 	db	45
   230  00102B  33                 	db	51	;'3'
   231  00102C  75                 	db	117	;'u'
   232  00102D  6D                 	db	109	;'m'
   233  00102E  73                 	db	115	;'s'
   234  00102F  3A                 	db	58	;':'
   235  001030  25                 	db	37
   236  001031  2D                 	db	45
   237  001032  33                 	db	51	;'3'
   238  001033  75                 	db	117	;'u'
   239  001034  75                 	db	117	;'u'
   240  001035  73                 	db	115	;'s'
   241  001036  00                 	db	0
   242  001037  00                 	db	0	; dummy byte at the end
   243  0000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247  00230E                     __pcinit:
   248                           	callstack 0
   249  00230E                     start_initialization:
   250                           	callstack 0
   251  00230E                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Initialize objects allocated to BANK0 (32 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256  00230E  0E1C               	movlw	low __pidataBANK0
   257  002310  6EF6               	movwf	tblptrl,c
   258  002312  0E27               	movlw	high __pidataBANK0
   259  002314  6EF7               	movwf	tblptrh,c
   260  002316  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261  002318  6EF8               	movwf	tblptru,c
   262  00231A  EE00  F0D5         	lfsr	0,__pdataBANK0
   263  00231E  EE10 F020          	lfsr	1,32
   264  002322                     copy_data0:
   265  002322  0009               	tblrd		*+
   266  002324  CFF5 FFEE          	movff	tablat,postinc0
   267  002328  50E5               	movf	postdec1,w,c
   268  00232A  50E1               	movf	fsr1l,w,c
   269  00232C  E1FA               	bnz	copy_data0
   270                           
   271                           ; Initialize objects allocated to COMRAM (4 bytes)
   272                           ; load TBLPTR registers with __pidataCOMRAM
   273  00232E  0E4E               	movlw	low __pidataCOMRAM
   274  002330  6EF6               	movwf	tblptrl,c
   275  002332  0E27               	movlw	high __pidataCOMRAM
   276  002334  6EF7               	movwf	tblptrh,c
   277  002336  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   278  002338  6EF8               	movwf	tblptru,c
   279  00233A  EE00  F07B         	lfsr	0,__pdataCOMRAM
   280  00233E  EE10 F004          	lfsr	1,4
   281  002342                     copy_data1:
   282  002342  0009               	tblrd		*+
   283  002344  CFF5 FFEE          	movff	tablat,postinc0
   284  002348  50E5               	movf	postdec1,w,c
   285  00234A  50E1               	movf	fsr1l,w,c
   286  00234C  E1FA               	bnz	copy_data1
   287                           
   288                           ; Clear objects allocated to BANK1 (32 bytes)
   289  00234E  EE01  F000         	lfsr	0,__pbssBANK1
   290  002352  0E20               	movlw	32
   291  002354                     clear_0:
   292  002354  6AEE               	clrf	postinc0,c
   293  002356  06E8               	decf	wreg,f,c
   294  002358  E1FD               	bnz	clear_0
   295                           
   296                           ; Clear objects allocated to BANK0 (37 bytes)
   297  00235A  EE00  F0B0         	lfsr	0,__pbssBANK0
   298  00235E  0E25               	movlw	37
   299  002360                     clear_1:
   300  002360  6AEE               	clrf	postinc0,c
   301  002362  06E8               	decf	wreg,f,c
   302  002364  E1FD               	bnz	clear_1
   303                           
   304                           ; Clear objects allocated to COMRAM (11 bytes)
   305  002366  EE00  F070         	lfsr	0,__pbssCOMRAM
   306  00236A  0E0B               	movlw	11
   307  00236C                     clear_2:
   308  00236C  6AEE               	clrf	postinc0,c
   309  00236E  06E8               	decf	wreg,f,c
   310  002370  E1FD               	bnz	clear_2
   311  002372                     end_of_initialization:
   312                           	callstack 0
   313  002372                     __end_of__initialization:
   314                           	callstack 0
   315  002372  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   316  002374  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   317  002376  0E00               	movlw	low (__Lmediumconst shr (0+16))
   318  002378  6EF8               	movwf	tblptru,c
   319  00237A  0100               	movlb	0
   320  00237C  EF1C  F008         	goto	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMRAM
   323  000070                     __pbssCOMRAM:
   324                           	callstack 0
   325  000070                     _width:
   326                           	callstack 0
   327  000070                     	ds	2
   328  000072                     _prec:
   329                           	callstack 0
   330  000072                     	ds	2
   331  000074                     _flags:
   332                           	callstack 0
   333  000074                     	ds	2
   334  000076                     _address_counter:
   335                           	callstack 0
   336  000076                     	ds	1
   337  000077                     	ds	1
   338  000078                     _init_complete:
   339                           	callstack 0
   340  000078                     	ds	1
   341  000079                     _DISP_BIT_MODE:
   342                           	callstack 0
   343  000079                     	ds	1
   344  00007A                     _CURRENT_DISP:
   345                           	callstack 0
   346  00007A                     	ds	1
   347                           
   348                           	psect	dataCOMRAM
   349  00007B                     __pdataCOMRAM:
   350                           	callstack 0
   351  00007B                     _current_func_set:
   352                           	callstack 0
   353  00007B                     	ds	1
   354  00007C                     _current_entry_mode:
   355                           	callstack 0
   356  00007C                     	ds	1
   357  00007D                     	ds	1
   358  00007E                     _current_disp_ctrl:
   359                           	callstack 0
   360  00007E                     	ds	1
   361                           
   362                           	psect	bssBANK0
   363  0000B0                     __pbssBANK0:
   364                           	callstack 0
   365  0000B0                     _timer1_overflow_count:
   366                           	callstack 0
   367  0000B0                     	ds	4
   368  0000B4                     _elapsed_time:
   369                           	callstack 0
   370  0000B4                     	ds	4
   371  0000B8                     _nout:
   372                           	callstack 0
   373  0000B8                     	ds	2
   374  0000BA                     _game_done_flag:
   375                           	callstack 0
   376  0000BA                     	ds	1
   377  0000BB                     _result_msg:
   378                           	callstack 0
   379  0000BB                     	ds	17
   380  0000CC                     hex_to_bit_string@bit_string:
   381                           	callstack 0
   382  0000CC                     	ds	9
   383                           
   384                           	psect	dataBANK0
   385  0000D5                     __pdataBANK0:
   386                           	callstack 0
   387  0000D5                     main@F3016:
   388                           	callstack 0
   389  0000D5                     	ds	16
   390  0000E5                     main@F3014:
   391                           	callstack 0
   392  0000E5                     	ds	16
   393                           
   394                           	psect	bssBANK1
   395  000100                     __pbssBANK1:
   396                           	callstack 0
   397  000100                     _dbuf:
   398                           	callstack 0
   399  000100                     	ds	32
   400                           
   401                           	psect	cstackBANK0
   402  000080                     __pcstackBANK0:
   403                           	callstack 0
   404  000080                     main@rcon_reg_string:
   405                           	callstack 0
   406                           
   407                           ; 16 bytes @ 0x0
   408  000080                     	ds	16
   409  000090                     main@stkptr_reg_string:
   410                           	callstack 0
   411                           
   412                           ; 16 bytes @ 0x10
   413  000090                     	ds	16
   414  0000A0                     _main$1491:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x20
   418  0000A0                     	ds	4
   419  0000A4                     main@num_of_seconds:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x24
   423  0000A4                     	ds	2
   424  0000A6                     main@num_of_ms:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x26
   428  0000A6                     	ds	2
   429  0000A8                     main@num_of_us:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x28
   433  0000A8                     	ds	2
   434  0000AA                     main@i:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x2A
   438  0000AA                     	ds	1
   439  0000AB                     main@i_597:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x2B
   443  0000AB                     	ds	1
   444  0000AC                     main@i_598:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x2C
   448  0000AC                     	ds	1
   449  0000AD                     main@i_618:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x2D
   453  0000AD                     	ds	1
   454  0000AE                     main@i_623:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x2E
   458  0000AE                     	ds	1
   459  0000AF                     main@i_624:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x2F
   463  0000AF                     	ds	1
   464                           
   465                           	psect	cstackCOMRAM
   466  000001                     __pcstackCOMRAM:
   467                           	callstack 0
   468  000001                     ??_LCD_enable_toggle:
   469  000001                     ?_hex_to_bit_string:
   470                           	callstack 0
   471  000001                     ?_strlen:
   472                           	callstack 0
   473  000001                     ?_isdigit:
   474                           	callstack 0
   475  000001                     ?_isspace:
   476                           	callstack 0
   477  000001                     ?___wmul:
   478                           	callstack 0
   479  000001                     ?___llmod:
   480                           	callstack 0
   481  000001                     ?___lodiv:
   482                           	callstack 0
   483  000001                     ?___lomod:
   484                           	callstack 0
   485  000001                     ___wmul@multiplier:
   486                           	callstack 0
   487  000001                     isdigit@c:
   488                           	callstack 0
   489  000001                     isspace@c:
   490                           	callstack 0
   491  000001                     fputc@c:
   492                           	callstack 0
   493  000001                     strlen@s:
   494                           	callstack 0
   495  000001                     ___llmod@dividend:
   496                           	callstack 0
   497  000001                     ___lodiv@dividend:
   498                           	callstack 0
   499  000001                     ___lomod@dividend:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x0
   503  000001                     	ds	2
   504  000003                     ??_hex_to_bit_string:
   505  000003                     ??_isdigit:
   506  000003                     ??_isspace:
   507  000003                     ??_LCD_write_data_byte_4bit:
   508  000003                     ??_LCD_write_instr_byte_4bit:
   509  000003                     ??_LCD_write_instr_byte_8bit:
   510  000003                     ___wmul@multiplicand:
   511                           	callstack 0
   512  000003                     fputc@fp:
   513                           	callstack 0
   514  000003                     strlen@a:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x2
   518  000003                     	ds	1
   519  000004                     LCD_write_data_byte_4bit@data:
   520                           	callstack 0
   521  000004                     LCD_write_instr_byte_4bit@instr:
   522                           	callstack 0
   523  000004                     LCD_write_instr_byte_8bit@instr:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x3
   527  000004                     	ds	1
   528  000005                     ??_LCD_clear_display:
   529  000005                     ??_fputc:
   530  000005                     ??_LCD_Init_ECE376:
   531  000005                     LCD_set_cursor_position@pos_on_line:
   532                           	callstack 0
   533  000005                     hex_to_bit_string@hex_val:
   534                           	callstack 0
   535  000005                     ___wmul@product:
   536                           	callstack 0
   537  000005                     strcpy@dest:
   538                           	callstack 0
   539  000005                     ___llmod@divisor:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x4
   543  000005                     	ds	1
   544  000006                     LCD_set_cursor_position@ddram_addr:
   545                           	callstack 0
   546  000006                     _hex_to_bit_string$630:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x5
   550  000006                     	ds	1
   551  000007                     LCD_set_cursor_position@line:
   552                           	callstack 0
   553  000007                     _isspace$1195:
   554                           	callstack 0
   555  000007                     strcpy@src:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x6
   559  000007                     	ds	1
   560  000008                     ?_atoi:
   561                           	callstack 0
   562  000008                     hex_to_bit_string@i:
   563                           	callstack 0
   564  000008                     atoi@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x7
   568  000008                     	ds	1
   569  000009                     ___llmod@counter:
   570                           	callstack 0
   571  000009                     strcpy@s:
   572                           	callstack 0
   573  000009                     ___lodiv@divisor:
   574                           	callstack 0
   575  000009                     ___lomod@divisor:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x8
   579  000009                     	ds	1
   580  00000A                     ??_atoi:
   581  00000A                     ?___lwdiv:
   582                           	callstack 0
   583  00000A                     ?___lldiv:
   584                           	callstack 0
   585  00000A                     ___lwdiv@dividend:
   586                           	callstack 0
   587  00000A                     fputs@s:
   588                           	callstack 0
   589  00000A                     ___lldiv@dividend:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x9
   593  00000A                     	ds	1
   594  00000B                     strcpy@d:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xA
   598  00000B                     	ds	1
   599  00000C                     ___lwdiv@divisor:
   600                           	callstack 0
   601  00000C                     fputs@fp:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xB
   605  00000C                     	ds	1
   606  00000D                     strcat@dest:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xC
   610  00000D                     	ds	1
   611  00000E                     fputs@c:
   612                           	callstack 0
   613  00000E                     ___lwdiv@quotient:
   614                           	callstack 0
   615  00000E                     atoi@neg:
   616                           	callstack 0
   617  00000E                     ___lldiv@divisor:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0xD
   621  00000E                     	ds	1
   622  00000F                     fputs@i:
   623                           	callstack 0
   624  00000F                     strcat@src:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xE
   628  00000F                     	ds	1
   629  000010                     ___lwdiv@counter:
   630                           	callstack 0
   631  000010                     _atoi$1177:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0xF
   635  000010                     	ds	1
   636  000011                     ?_pad:
   637                           	callstack 0
   638  000011                     ___lomod@counter:
   639                           	callstack 0
   640  000011                     pad@fp:
   641                           	callstack 0
   642  000011                     ___lodiv@quotient:
   643                           	callstack 0
   644                           
   645                           ; 8 bytes @ 0x10
   646  000011                     	ds	1
   647  000012                     _atoi$1179:
   648                           	callstack 0
   649  000012                     ___lldiv@quotient:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x11
   653  000012                     	ds	1
   654  000013                     pad@buf:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x12
   658  000013                     	ds	1
   659  000014                     _atoi$1178:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x13
   663  000014                     	ds	1
   664  000015                     pad@p:
   665                           	callstack 0
   666  000015                     atoi@n:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x14
   670  000015                     	ds	1
   671  000016                     ___lldiv@counter:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x15
   675  000016                     	ds	1
   676  000017                     ??_pad:
   677                           
   678                           ; 1 bytes @ 0x16
   679  000017                     	ds	1
   680  000018                     pad@i:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x17
   684  000018                     	ds	1
   685  000019                     ___lodiv@counter:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x18
   689  000019                     	ds	1
   690  00001A                     pad@w:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694  00001A                     	ds	2
   695  00001C                     ?_utoa:
   696                           	callstack 0
   697  00001C                     utoa@fp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x1B
   701  00001C                     	ds	2
   702  00001E                     utoa@d:
   703                           	callstack 0
   704                           
   705                           ; 8 bytes @ 0x1D
   706  00001E                     	ds	8
   707  000026                     ??_utoa:
   708                           
   709                           ; 1 bytes @ 0x25
   710  000026                     	ds	8
   711  00002E                     utoa@p:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2D
   715  00002E                     	ds	2
   716  000030                     utoa@w:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2F
   720  000030                     	ds	2
   721  000032                     utoa@n:
   722                           	callstack 0
   723                           
   724                           ; 8 bytes @ 0x31
   725  000032                     	ds	8
   726  00003A                     utoa@i:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x39
   730  00003A                     	ds	2
   731  00003C                     ?_vfpfcnvrt:
   732                           	callstack 0
   733  00003C                     vfpfcnvrt@fp:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x3B
   737  00003C                     	ds	2
   738  00003E                     vfpfcnvrt@fmt:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x3D
   742  00003E                     	ds	2
   743  000040                     vfpfcnvrt@ap:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x3F
   747  000040                     	ds	2
   748  000042                     ??_vfpfcnvrt:
   749                           
   750                           ; 1 bytes @ 0x41
   751  000042                     	ds	4
   752  000046                     vfpfcnvrt@llu:
   753                           	callstack 0
   754                           
   755                           ; 8 bytes @ 0x45
   756  000046                     	ds	8
   757  00004E                     vfpfcnvrt@done:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x4D
   761  00004E                     	ds	2
   762  000050                     _vfpfcnvrt$1159:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x4F
   766  000050                     	ds	2
   767  000052                     ?_vfprintf:
   768                           	callstack 0
   769  000052                     vfprintf@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x51
   773  000052                     	ds	2
   774  000054                     vfprintf@fmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x53
   778  000054                     	ds	2
   779  000056                     vfprintf@ap:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x55
   783  000056                     	ds	2
   784  000058                     vfprintf@cfmt:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x57
   788  000058                     	ds	2
   789  00005A                     ?_sprintf:
   790                           	callstack 0
   791  00005A                     sprintf@s:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x59
   795  00005A                     	ds	2
   796  00005C                     sprintf@fmt:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x5B
   800  00005C                     	ds	8
   801  000064                     
   802                           ; 1 bytes @ 0x63
   803  000064                     	ds	2
   804  000066                     sprintf@ap:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x65
   808  000066                     	ds	2
   809  000068                     sprintf@f:
   810                           	callstack 0
   811                           
   812                           ; 6 bytes @ 0x67
   813  000068                     	ds	6
   814  00006E                     ??_main:
   815                           
   816                           ; 1 bytes @ 0x6D
   817  00006E                     	ds	2
   818                           
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 172 in file "ece376_hw9_ccp_capt.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  i               1   47[BANK0 ] unsigned char 
   829 ;;  i               1   46[BANK0 ] unsigned char 
   830 ;;  i               1   45[BANK0 ] unsigned char 
   831 ;;  num_of_us       2   40[BANK0 ] unsigned short 
   832 ;;  num_of_ms       2   38[BANK0 ] unsigned short 
   833 ;;  num_of_secon    2   36[BANK0 ] unsigned short 
   834 ;;  i               1   44[BANK0 ] unsigned char 
   835 ;;  i               1   43[BANK0 ] unsigned char 
   836 ;;  i               1   42[BANK0 ] unsigned char 
   837 ;;  stkptr_reg_s   16   16[BANK0 ] unsigned char [16]
   838 ;;  rcon_reg_str   16    0[BANK0 ] unsigned char [16]
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Locals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Totals:         2      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;Total ram usage:       50 bytes
   853 ;; Hardware stack levels required when called:    9
   854 ;; This function calls:
   855 ;;		_CCP1_Capture_Init_Default
   856 ;;		_LCD_Init_ECE376
   857 ;;		_LCD_clear_display
   858 ;;		_LCD_set_cursor_position
   859 ;;		_LCD_write_data_byte_4bit
   860 ;;		_Timer1_Disable
   861 ;;		_Timer1_Enable
   862 ;;		_Timer1_Init_Default
   863 ;;		___lldiv
   864 ;;		___llmod
   865 ;;		___lwdiv
   866 ;;		_hex_to_bit_string
   867 ;;		_sprintf
   868 ;;		_strcat
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text0
   875  001038                     __ptext0:
   876                           	callstack 0
   877  001038                     _main:
   878                           	callstack 22
   879  001038                     
   880                           ;ece376_hw9_ccp_capt.c: 180:  TRISC |= (1u << 2);
   881  001038  8494               	bsf	148,2,c	;volatile
   882  00103A                     
   883                           ;ece376_hw9_ccp_capt.c: 181:  ADCON1 |= 0x0F;
   884  00103A  0E0F               	movlw	15
   885  00103C  12C1               	iorwf	193,f,c	;volatile
   886  00103E                     
   887                           ;ece376_hw9_ccp_capt.c: 182:  TRISB |= (1u << 0);
   888  00103E  8093               	bsf	147,0,c	;volatile
   889  001040                     
   890                           ;ece376_hw9_ccp_capt.c: 183:     TRISD &= ~(1u << 0);
   891  001040  9095               	bcf	149,0,c	;volatile
   892  001042                     
   893                           ;ece376_hw9_ccp_capt.c: 185:     PORTB = 0x00;
   894  001042  0E00               	movlw	0
   895  001044  6E81               	movwf	129,c	;volatile
   896  001046                     
   897                           ;ece376_hw9_ccp_capt.c: 186:     PORTC = 0x00;
   898  001046  0E00               	movlw	0
   899  001048  6E82               	movwf	130,c	;volatile
   900  00104A                     
   901                           ;ece376_hw9_ccp_capt.c: 187:     PORTD = 0x00;
   902  00104A  0E00               	movlw	0
   903  00104C  6E83               	movwf	131,c	;volatile
   904  00104E                     
   905                           ;ece376_hw9_ccp_capt.c: 190:  LCD_Init_ECE376();
   906  00104E  EC10  F00E         	call	_LCD_Init_ECE376	;wreg free
   907  001052                     
   908                           ;ece376_hw9_ccp_capt.c: 191:     LCD_set_cursor_position(1,1);
   909  001052  0E01               	movlw	1
   910  001054  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   911  001056  0E01               	movlw	1
   912  001058  EC50  F00F         	call	_LCD_set_cursor_position
   913  00105C                     
   914                           ;ece376_hw9_ccp_capt.c: 192:     for(uint8_t i=0; i<13; i++){
   915  00105C  0E00               	movlw	0
   916  00105E  0100               	movlb	0	; () banked
   917  001060  6FAA               	movwf	main@i& (0+255),b
   918  001062                     l3111:
   919                           
   920                           ; BSR set to: 0
   921                           ;ece376_hw9_ccp_capt.c: 193:         LCD_write_data_byte_4bit(init_msg[i]);
   922  001062  0E01               	movlw	low _init_msg
   923  001064  25AA               	addwf	main@i& (0+255),w,b
   924  001066  6EF6               	movwf	tblptrl,c
   925  001068  6AF7               	clrf	tblptrh,c
   926  00106A  0E10               	movlw	high _init_msg
   927  00106C  22F7               	addwfc	tblptrh,f,c
   928  00106E                     	if	0	;There are less than 3 active tblptr bytes
   929  00106E                     	endif
   930  00106E  0008               	tblrd		*
   931  001070  50F5               	movf	tablat,w,c
   932  001072  EC76  F012         	call	_LCD_write_data_byte_4bit
   933  001076                     
   934                           ;ece376_hw9_ccp_capt.c: 194:     }
   935  001076  0100               	movlb	0	; () banked
   936  001078  2BAA               	incf	main@i& (0+255),f,b
   937  00107A                     
   938                           ; BSR set to: 0
   939  00107A  0E0C               	movlw	12
   940  00107C  65AA               	cpfsgt	main@i& (0+255),b
   941  00107E  EF43  F008         	goto	u1861
   942  001082  EF45  F008         	goto	u1860
   943  001086                     u1861:
   944  001086  EF31  F008         	goto	l3111
   945  00108A                     u1860:
   946  00108A                     
   947                           ; BSR set to: 0
   948                           ;ece376_hw9_ccp_capt.c: 195:     LATDbits.LATD0 = 1u;
   949  00108A  808C               	bsf	140,0,c	;volatile
   950  00108C                     
   951                           ; BSR set to: 0
   952                           ;ece376_hw9_ccp_capt.c: 196:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
   953  00108C  0E66               	movlw	102
   954  00108E  6E6F               	movwf	(??_main+1)^0,c
   955  001090  0E76               	movlw	118
   956  001092  6E6E               	movwf	??_main^0,c
   957  001094  0EC1               	movlw	193
   958  001096                     u1977:
   959  001096  2EE8               	decfsz	wreg,f,c
   960  001098  D7FE               	bra	u1977
   961  00109A  2E6E               	decfsz	??_main^0,f,c
   962  00109C  D7FC               	bra	u1977
   963  00109E  2E6F               	decfsz	(??_main+1)^0,f,c
   964  0010A0  D7FA               	bra	u1977
   965  0010A2  F000               	nop	
   966  0010A4                     
   967                           ;ece376_hw9_ccp_capt.c: 197:     LATDbits.LATD0 = 0u;
   968  0010A4  908C               	bcf	140,0,c	;volatile
   969  0010A6                     
   970                           ;ece376_hw9_ccp_capt.c: 198:     LCD_clear_display();
   971  0010A6  EC3C  F013         	call	_LCD_clear_display	;wreg free
   972  0010AA                     
   973                           ;ece376_hw9_ccp_capt.c: 199:     LCD_set_cursor_position(1,1);
   974  0010AA  0E01               	movlw	1
   975  0010AC  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   976  0010AE  0E01               	movlw	1
   977  0010B0  EC50  F00F         	call	_LCD_set_cursor_position
   978  0010B4                     
   979                           ;ece376_hw9_ccp_capt.c: 224:     char rcon_reg_string[16] = "RCON: ";
   980  0010B4  EE20  F0E5         	lfsr	2,main@F3014
   981  0010B8  EE10  F080         	lfsr	1,main@rcon_reg_string
   982  0010BC  0E0F               	movlw	15
   983  0010BE                     u1871:
   984  0010BE  CFDB FFE3          	movff	plusw2,plusw1
   985  0010C2  06E8               	decf	wreg,f,c
   986  0010C4  E2FC               	bc	u1871
   987  0010C6                     
   988                           ;ece376_hw9_ccp_capt.c: 225:     char stkptr_reg_string[16] = "STKPTR: ";
   989  0010C6  EE20  F0D5         	lfsr	2,main@F3016
   990  0010CA  EE10  F090         	lfsr	1,main@stkptr_reg_string
   991  0010CE  0E0F               	movlw	15
   992  0010D0                     u1881:
   993  0010D0  CFDB FFE3          	movff	plusw2,plusw1
   994  0010D4  06E8               	decf	wreg,f,c
   995  0010D6  E2FC               	bc	u1881
   996  0010D8                     
   997                           ;ece376_hw9_ccp_capt.c: 226:     strcat(rcon_reg_string, hex_to_bit_string( (uint8_t)RCO
      +                          N ) );
   998  0010D8  0E80               	movlw	low main@rcon_reg_string
   999  0010DA  6E0D               	movwf	strcat@dest^0,c
  1000  0010DC  0E00               	movlw	high main@rcon_reg_string
  1001  0010DE  6E0E               	movwf	(strcat@dest+1)^0,c
  1002  0010E0  50D0               	movf	208,w,c	;volatile
  1003  0010E2  EC10  F011         	call	_hex_to_bit_string
  1004  0010E6  C001  F00F         	movff	?_hex_to_bit_string,strcat@src
  1005  0010EA  C002  F010         	movff	?_hex_to_bit_string+1,strcat@src+1
  1006  0010EE  EC68  F013         	call	_strcat	;wreg free
  1007  0010F2                     
  1008                           ;ece376_hw9_ccp_capt.c: 227:     strcat(stkptr_reg_string, hex_to_bit_string( (uint8_t)S
      +                          TKPTR ) );
  1009  0010F2  0E90               	movlw	low main@stkptr_reg_string
  1010  0010F4  6E0D               	movwf	strcat@dest^0,c
  1011  0010F6  0E00               	movlw	high main@stkptr_reg_string
  1012  0010F8  6E0E               	movwf	(strcat@dest+1)^0,c
  1013  0010FA  50FC               	movf	252,w,c	;volatile
  1014  0010FC  EC10  F011         	call	_hex_to_bit_string
  1015  001100  C001  F00F         	movff	?_hex_to_bit_string,strcat@src
  1016  001104  C002  F010         	movff	?_hex_to_bit_string+1,strcat@src+1
  1017  001108  EC68  F013         	call	_strcat	;wreg free
  1018  00110C                     
  1019                           ;ece376_hw9_ccp_capt.c: 229:     LCD_set_cursor_position(1,1);
  1020  00110C  0E01               	movlw	1
  1021  00110E  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1022  001110  0E01               	movlw	1
  1023  001112  EC50  F00F         	call	_LCD_set_cursor_position
  1024  001116                     
  1025                           ;ece376_hw9_ccp_capt.c: 230:     for(uint8_t i=0; i<14; i++) LCD_write_data_byte_4bit(rc
      +                          on_reg_string[i]);
  1026  001116  0E00               	movlw	0
  1027  001118  0100               	movlb	0	; () banked
  1028  00111A  6FAB               	movwf	main@i_597& (0+255),b
  1029  00111C                     l3141:
  1030                           
  1031                           ; BSR set to: 0
  1032  00111C  0E80               	movlw	low main@rcon_reg_string
  1033  00111E  25AB               	addwf	main@i_597& (0+255),w,b
  1034  001120  6ED9               	movwf	fsr2l,c
  1035  001122  6ADA               	clrf	fsr2h,c
  1036  001124  0E00               	movlw	high main@rcon_reg_string
  1037  001126  22DA               	addwfc	fsr2h,f,c
  1038  001128  50DF               	movf	indf2,w,c
  1039  00112A  EC76  F012         	call	_LCD_write_data_byte_4bit
  1040  00112E  0100               	movlb	0	; () banked
  1041  001130  2BAB               	incf	main@i_597& (0+255),f,b
  1042  001132                     
  1043                           ; BSR set to: 0
  1044  001132  0E0D               	movlw	13
  1045  001134  65AB               	cpfsgt	main@i_597& (0+255),b
  1046  001136  EF9F  F008         	goto	u1891
  1047  00113A  EFA1  F008         	goto	u1890
  1048  00113E                     u1891:
  1049  00113E  EF8E  F008         	goto	l3141
  1050  001142                     u1890:
  1051  001142                     
  1052                           ; BSR set to: 0
  1053                           ;ece376_hw9_ccp_capt.c: 231:     LCD_set_cursor_position(2,1);
  1054  001142  0E01               	movlw	1
  1055  001144  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1056  001146  0E02               	movlw	2
  1057  001148  EC50  F00F         	call	_LCD_set_cursor_position
  1058  00114C                     
  1059                           ;ece376_hw9_ccp_capt.c: 232:     for(uint8_t i=0; i<16; i++) LCD_write_data_byte_4bit(st
      +                          kptr_reg_string[i]);
  1060  00114C  0E00               	movlw	0
  1061  00114E  0100               	movlb	0	; () banked
  1062  001150  6FAC               	movwf	main@i_598& (0+255),b
  1063  001152                     l3155:
  1064                           
  1065                           ; BSR set to: 0
  1066  001152  0E90               	movlw	low main@stkptr_reg_string
  1067  001154  25AC               	addwf	main@i_598& (0+255),w,b
  1068  001156  6ED9               	movwf	fsr2l,c
  1069  001158  6ADA               	clrf	fsr2h,c
  1070  00115A  0E00               	movlw	high main@stkptr_reg_string
  1071  00115C  22DA               	addwfc	fsr2h,f,c
  1072  00115E  50DF               	movf	indf2,w,c
  1073  001160  EC76  F012         	call	_LCD_write_data_byte_4bit
  1074  001164  0100               	movlb	0	; () banked
  1075  001166  2BAC               	incf	main@i_598& (0+255),f,b
  1076  001168                     
  1077                           ; BSR set to: 0
  1078  001168  0E0F               	movlw	15
  1079  00116A  65AC               	cpfsgt	main@i_598& (0+255),b
  1080  00116C  EFBA  F008         	goto	u1901
  1081  001170  EFBC  F008         	goto	u1900
  1082  001174                     u1901:
  1083  001174  EFA9  F008         	goto	l3155
  1084  001178                     u1900:
  1085  001178                     l259:
  1086  001178  A081               	btfss	129,0,c	;volatile
  1087  00117A  EFC1  F008         	goto	u1911
  1088  00117E  EFC3  F008         	goto	u1910
  1089  001182                     u1911:
  1090  001182  EFBC  F008         	goto	l259
  1091  001186                     u1910:
  1092  001186                     
  1093                           ;ece376_hw9_ccp_capt.c: 235:     LCD_clear_display();
  1094  001186  EC3C  F013         	call	_LCD_clear_display	;wreg free
  1095                           
  1096                           ;ece376_hw9_ccp_capt.c: 236:     LCD_set_cursor_position(1,1);
  1097  00118A  0E01               	movlw	1
  1098  00118C  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1099  00118E  0E01               	movlw	1
  1100  001190  EC50  F00F         	call	_LCD_set_cursor_position
  1101  001194                     
  1102                           ;ece376_hw9_ccp_capt.c: 237:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  1103  001194  0E66               	movlw	102
  1104  001196  6E6F               	movwf	(??_main+1)^0,c
  1105  001198  0E76               	movlw	118
  1106  00119A  6E6E               	movwf	??_main^0,c
  1107  00119C  0EC1               	movlw	193
  1108  00119E                     u1987:
  1109  00119E  2EE8               	decfsz	wreg,f,c
  1110  0011A0  D7FE               	bra	u1987
  1111  0011A2  2E6E               	decfsz	??_main^0,f,c
  1112  0011A4  D7FC               	bra	u1987
  1113  0011A6  2E6F               	decfsz	(??_main+1)^0,f,c
  1114  0011A8  D7FA               	bra	u1987
  1115  0011AA  F000               	nop	
  1116  0011AC                     
  1117                           ;ece376_hw9_ccp_capt.c: 244:  Timer1_Init_Default();
  1118  0011AC  ECA4  F013         	call	_Timer1_Init_Default	;wreg free
  1119  0011B0                     
  1120                           ;ece376_hw9_ccp_capt.c: 245:     CCP1_Capture_Init_Default();
  1121  0011B0  EC9E  F013         	call	_CCP1_Capture_Init_Default	;wreg free
  1122  0011B4                     
  1123                           ;ece376_hw9_ccp_capt.c: 248:     PORTB = 0x00;
  1124  0011B4  0E00               	movlw	0
  1125  0011B6  6E81               	movwf	129,c	;volatile
  1126  0011B8                     
  1127                           ;ece376_hw9_ccp_capt.c: 249:     PORTC = 0x00;
  1128  0011B8  0E00               	movlw	0
  1129  0011BA  6E82               	movwf	130,c	;volatile
  1130  0011BC                     
  1131                           ;ece376_hw9_ccp_capt.c: 250:     PORTD = 0x00;
  1132  0011BC  0E00               	movlw	0
  1133  0011BE  6E83               	movwf	131,c	;volatile
  1134  0011C0                     l3175:
  1135                           
  1136                           ;ece376_hw9_ccp_capt.c: 255:   if(PORTBbits.RB0) {
  1137  0011C0  A081               	btfss	129,0,c	;volatile
  1138  0011C2  EFE5  F008         	goto	u1921
  1139  0011C6  EFE7  F008         	goto	u1920
  1140  0011CA                     u1921:
  1141  0011CA  EFE0  F008         	goto	l3175
  1142  0011CE                     u1920:
  1143  0011CE                     
  1144                           ;ece376_hw9_ccp_capt.c: 256:             elapsed_time = 0u;
  1145  0011CE  0E00               	movlw	0
  1146  0011D0  0100               	movlb	0	; () banked
  1147  0011D2  6FB4               	movwf	_elapsed_time& (0+255),b	;volatile
  1148  0011D4  0E00               	movlw	0
  1149  0011D6  6FB5               	movwf	(_elapsed_time+1)& (0+255),b	;volatile
  1150  0011D8  0E00               	movlw	0
  1151  0011DA  6FB6               	movwf	(_elapsed_time+2)& (0+255),b	;volatile
  1152  0011DC  0E00               	movlw	0
  1153  0011DE  6FB7               	movwf	(_elapsed_time+3)& (0+255),b	;volatile
  1154  0011E0                     
  1155                           ; BSR set to: 0
  1156                           ;ece376_hw9_ccp_capt.c: 259:             Timer1_Enable();
  1157  0011E0  ECA9  F013         	call	_Timer1_Enable	;wreg free
  1158  0011E4                     
  1159                           ;ece376_hw9_ccp_capt.c: 260:             (INTCONbits.PEIE = 1u);
  1160  0011E4  8CF2               	bsf	242,6,c	;volatile
  1161  0011E6                     
  1162                           ;ece376_hw9_ccp_capt.c: 261:             (INTCONbits.GIE = 1);
  1163  0011E6  8EF2               	bsf	242,7,c	;volatile
  1164  0011E8                     
  1165                           ;ece376_hw9_ccp_capt.c: 264:             for(uint8_t i=0; i<11; i++) LCD_write_data_byte
      +                          _4bit(start_game_msg[i]);
  1166  0011E8  0E00               	movlw	0
  1167  0011EA  0100               	movlb	0	; () banked
  1168  0011EC  6FAD               	movwf	main@i_618& (0+255),b
  1169  0011EE                     l3191:
  1170                           
  1171                           ; BSR set to: 0
  1172  0011EE  0E0F               	movlw	low _start_game_msg
  1173  0011F0  25AD               	addwf	main@i_618& (0+255),w,b
  1174  0011F2  6EF6               	movwf	tblptrl,c
  1175  0011F4  6AF7               	clrf	tblptrh,c
  1176  0011F6  0E10               	movlw	high _start_game_msg
  1177  0011F8  22F7               	addwfc	tblptrh,f,c
  1178  0011FA                     	if	0	;There are less than 3 active tblptr bytes
  1179  0011FA                     	endif
  1180  0011FA  0008               	tblrd		*
  1181  0011FC  50F5               	movf	tablat,w,c
  1182  0011FE  EC76  F012         	call	_LCD_write_data_byte_4bit
  1183  001202  0100               	movlb	0	; () banked
  1184  001204  2BAD               	incf	main@i_618& (0+255),f,b
  1185  001206                     
  1186                           ; BSR set to: 0
  1187  001206  0E0A               	movlw	10
  1188  001208  65AD               	cpfsgt	main@i_618& (0+255),b
  1189  00120A  EF09  F009         	goto	u1931
  1190  00120E  EF0B  F009         	goto	u1930
  1191  001212                     u1931:
  1192  001212  EFF7  F008         	goto	l3191
  1193  001216                     u1930:
  1194  001216                     
  1195                           ; BSR set to: 0
  1196                           ;ece376_hw9_ccp_capt.c: 265:             _delay((unsigned long)((1000)*(40000000u/4000.0
      +                          )));
  1197  001216  0E33               	movlw	51
  1198  001218  6E6F               	movwf	(??_main+1)^0,c
  1199  00121A  0EBB               	movlw	187
  1200  00121C  6E6E               	movwf	??_main^0,c
  1201  00121E  0EE0               	movlw	224
  1202  001220                     u1997:
  1203  001220  2EE8               	decfsz	wreg,f,c
  1204  001222  D7FE               	bra	u1997
  1205  001224  2E6E               	decfsz	??_main^0,f,c
  1206  001226  D7FC               	bra	u1997
  1207  001228  2E6F               	decfsz	(??_main+1)^0,f,c
  1208  00122A  D7FA               	bra	u1997
  1209  00122C                     
  1210                           ;ece376_hw9_ccp_capt.c: 266:             LCD_clear_display();
  1211  00122C  EC3C  F013         	call	_LCD_clear_display	;wreg free
  1212  001230                     
  1213                           ;ece376_hw9_ccp_capt.c: 267:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1214  001230  0E66               	movlw	102
  1215  001232  6E6F               	movwf	(??_main+1)^0,c
  1216  001234  0E76               	movlw	118
  1217  001236  6E6E               	movwf	??_main^0,c
  1218  001238  0EC1               	movlw	193
  1219  00123A                     u2007:
  1220  00123A  2EE8               	decfsz	wreg,f,c
  1221  00123C  D7FE               	bra	u2007
  1222  00123E  2E6E               	decfsz	??_main^0,f,c
  1223  001240  D7FC               	bra	u2007
  1224  001242  2E6F               	decfsz	(??_main+1)^0,f,c
  1225  001244  D7FA               	bra	u2007
  1226  001246  F000               	nop	
  1227  001248                     
  1228                           ;ece376_hw9_ccp_capt.c: 268:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1229  001248  0E66               	movlw	102
  1230  00124A  6E6F               	movwf	(??_main+1)^0,c
  1231  00124C  0E76               	movlw	118
  1232  00124E  6E6E               	movwf	??_main^0,c
  1233  001250  0EC1               	movlw	193
  1234  001252                     u2017:
  1235  001252  2EE8               	decfsz	wreg,f,c
  1236  001254  D7FE               	bra	u2017
  1237  001256  2E6E               	decfsz	??_main^0,f,c
  1238  001258  D7FC               	bra	u2017
  1239  00125A  2E6F               	decfsz	(??_main+1)^0,f,c
  1240  00125C  D7FA               	bra	u2017
  1241  00125E  F000               	nop	
  1242  001260                     
  1243                           ;ece376_hw9_ccp_capt.c: 271:             LATDbits.LATD0 = 1u;
  1244  001260  808C               	bsf	140,0,c	;volatile
  1245  001262                     l3207:
  1246  001262  0100               	movlb	0	; () banked
  1247  001264  51BA               	movf	_game_done_flag& (0+255),w,b	;volatile
  1248  001266  B4D8               	btfsc	status,2,c
  1249  001268  EF38  F009         	goto	u1941
  1250  00126C  EF3A  F009         	goto	u1940
  1251  001270                     u1941:
  1252  001270  EF31  F009         	goto	l3207
  1253  001274                     u1940:
  1254  001274                     
  1255                           ; BSR set to: 0
  1256                           ;ece376_hw9_ccp_capt.c: 285:             uint16_t num_of_seconds = (uint16_t) (elapsed_t
      +                          ime / 10000000u);
  1257  001274  C0B4  F00A         	movff	_elapsed_time,___lldiv@dividend	;volatile
  1258  001278  C0B5  F00B         	movff	_elapsed_time+1,___lldiv@dividend+1	;volatile
  1259  00127C  C0B6  F00C         	movff	_elapsed_time+2,___lldiv@dividend+2	;volatile
  1260  001280  C0B7  F00D         	movff	_elapsed_time+3,___lldiv@dividend+3	;volatile
  1261  001284  0E80               	movlw	128
  1262  001286  6E0E               	movwf	___lldiv@divisor^0,c
  1263  001288  0E96               	movlw	150
  1264  00128A  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1265  00128C  0E98               	movlw	152
  1266  00128E  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1267  001290  0E00               	movlw	0
  1268  001292  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1269  001294  EC7A  F010         	call	___lldiv	;wreg free
  1270  001298  C00A  F0A4         	movff	?___lldiv,main@num_of_seconds
  1271  00129C  C00B  F0A5         	movff	?___lldiv+1,main@num_of_seconds+1
  1272                           
  1273                           ;ece376_hw9_ccp_capt.c: 286:             uint16_t num_of_ms = (uint16_t) ((elapsed_time 
      +                          % 10000000u) / 10000u);
  1274  0012A0  0E80               	movlw	128
  1275  0012A2  6E05               	movwf	___llmod@divisor^0,c
  1276  0012A4  0E96               	movlw	150
  1277  0012A6  6E06               	movwf	(___llmod@divisor+1)^0,c
  1278  0012A8  0E98               	movlw	152
  1279  0012AA  6E07               	movwf	(___llmod@divisor+2)^0,c
  1280  0012AC  0E00               	movlw	0
  1281  0012AE  6E08               	movwf	(___llmod@divisor+3)^0,c
  1282  0012B0  C0B4  F001         	movff	_elapsed_time,___llmod@dividend	;volatile
  1283  0012B4  C0B5  F002         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
  1284  0012B8  C0B6  F003         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
  1285  0012BC  C0B7  F004         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
  1286  0012C0  ECCC  F010         	call	___llmod	;wreg free
  1287  0012C4  C001  F00A         	movff	?___llmod,___lldiv@dividend
  1288  0012C8  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
  1289  0012CC  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
  1290  0012D0  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
  1291  0012D4  0E10               	movlw	16
  1292  0012D6  6E0E               	movwf	___lldiv@divisor^0,c
  1293  0012D8  0E27               	movlw	39
  1294  0012DA  6E0F               	movwf	(___lldiv@divisor+1)^0,c
  1295  0012DC  0E00               	movlw	0
  1296  0012DE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  1297  0012E0  0E00               	movlw	0
  1298  0012E2  6E11               	movwf	(___lldiv@divisor+3)^0,c
  1299  0012E4  EC7A  F010         	call	___lldiv	;wreg free
  1300  0012E8  C00A  F0A6         	movff	?___lldiv,main@num_of_ms
  1301  0012EC  C00B  F0A7         	movff	?___lldiv+1,main@num_of_ms+1
  1302                           
  1303                           ;ece376_hw9_ccp_capt.c: 287:             uint16_t num_of_us = (uint16_t) ((elapsed_time 
      +                          % 10000000u) % 10000u) / 10u;
  1304  0012F0  0E80               	movlw	128
  1305  0012F2  6E05               	movwf	___llmod@divisor^0,c
  1306  0012F4  0E96               	movlw	150
  1307  0012F6  6E06               	movwf	(___llmod@divisor+1)^0,c
  1308  0012F8  0E98               	movlw	152
  1309  0012FA  6E07               	movwf	(___llmod@divisor+2)^0,c
  1310  0012FC  0E00               	movlw	0
  1311  0012FE  6E08               	movwf	(___llmod@divisor+3)^0,c
  1312  001300  C0B4  F001         	movff	_elapsed_time,___llmod@dividend	;volatile
  1313  001304  C0B5  F002         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
  1314  001308  C0B6  F003         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
  1315  00130C  C0B7  F004         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
  1316  001310  ECCC  F010         	call	___llmod	;wreg free
  1317  001314  C001  F0A0         	movff	?___llmod,_main$1491
  1318  001318  C002  F0A1         	movff	?___llmod+1,_main$1491+1
  1319  00131C  C003  F0A2         	movff	?___llmod+2,_main$1491+2
  1320  001320  C004  F0A3         	movff	?___llmod+3,_main$1491+3
  1321                           
  1322                           ;ece376_hw9_ccp_capt.c: 287:             uint16_t num_of_us = (uint16_t) ((elapsed_time 
      +                          % 10000000u) % 10000u) / 10u;
  1323  001324  0E10               	movlw	16
  1324  001326  6E05               	movwf	___llmod@divisor^0,c
  1325  001328  0E27               	movlw	39
  1326  00132A  6E06               	movwf	(___llmod@divisor+1)^0,c
  1327  00132C  0E00               	movlw	0
  1328  00132E  6E07               	movwf	(___llmod@divisor+2)^0,c
  1329  001330  0E00               	movlw	0
  1330  001332  6E08               	movwf	(___llmod@divisor+3)^0,c
  1331  001334  C0A0  F001         	movff	_main$1491,___llmod@dividend
  1332  001338  C0A1  F002         	movff	_main$1491+1,___llmod@dividend+1
  1333  00133C  C0A2  F003         	movff	_main$1491+2,___llmod@dividend+2
  1334  001340  C0A3  F004         	movff	_main$1491+3,___llmod@dividend+3
  1335  001344  ECCC  F010         	call	___llmod	;wreg free
  1336  001348  C001  F00A         	movff	?___llmod,___lwdiv@dividend
  1337  00134C  C002  F00B         	movff	?___llmod+1,___lwdiv@dividend+1
  1338  001350  0E00               	movlw	0
  1339  001352  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  1340  001354  0E0A               	movlw	10
  1341  001356  6E0C               	movwf	___lwdiv@divisor^0,c
  1342  001358  EC4D  F011         	call	___lwdiv	;wreg free
  1343  00135C  C00A  F0A8         	movff	?___lwdiv,main@num_of_us
  1344  001360  C00B  F0A9         	movff	?___lwdiv+1,main@num_of_us+1
  1345  001364                     
  1346                           ;ece376_hw9_ccp_capt.c: 291:             sprintf(result_msg, "%-3us:%-3ums:%-3uus", num_
      +                          of_seconds, num_of_ms, num_of_us);
  1347  001364  0EBB               	movlw	low _result_msg
  1348  001366  6E5A               	movwf	sprintf@s^0,c
  1349  001368  0E00               	movlw	high _result_msg
  1350  00136A  6E5B               	movwf	(sprintf@s+1)^0,c
  1351  00136C  0E23               	movlw	low STR_1
  1352  00136E  6E5C               	movwf	sprintf@fmt^0,c
  1353  001370  0E10               	movlw	high STR_1
  1354  001372  6E5D               	movwf	(sprintf@fmt+1)^0,c
  1355  001374  C0A4  F05E         	movff	main@num_of_seconds,?_sprintf+4
  1356  001378  C0A5  F05F         	movff	main@num_of_seconds+1,?_sprintf+5
  1357  00137C  C0A6  F060         	movff	main@num_of_ms,?_sprintf+6
  1358  001380  C0A7  F061         	movff	main@num_of_ms+1,?_sprintf+7
  1359  001384  C0A8  F062         	movff	main@num_of_us,?_sprintf+8
  1360  001388  C0A9  F063         	movff	main@num_of_us+1,?_sprintf+9
  1361  00138C  EC4F  F012         	call	_sprintf	;wreg free
  1362  001390                     
  1363                           ;ece376_hw9_ccp_capt.c: 293:             LCD_set_cursor_position(1,1);
  1364  001390  0E01               	movlw	1
  1365  001392  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1366  001394  0E01               	movlw	1
  1367  001396  EC50  F00F         	call	_LCD_set_cursor_position
  1368  00139A                     
  1369                           ;ece376_hw9_ccp_capt.c: 294:             for(uint8_t i=0; i<7; i++) LCD_write_data_byte_
      +                          4bit(result_msg_title[i]);
  1370  00139A  0E00               	movlw	0
  1371  00139C  0100               	movlb	0	; () banked
  1372  00139E  6FAE               	movwf	main@i_623& (0+255),b
  1373  0013A0                     l3217:
  1374                           
  1375                           ; BSR set to: 0
  1376  0013A0  0E06               	movlw	6
  1377  0013A2  65AE               	cpfsgt	main@i_623& (0+255),b
  1378  0013A4  EFD6  F009         	goto	u1951
  1379  0013A8  EFD8  F009         	goto	u1950
  1380  0013AC                     u1951:
  1381  0013AC  EFDA  F009         	goto	l3221
  1382  0013B0                     u1950:
  1383  0013B0  EFE8  F009         	goto	l3227
  1384  0013B4                     l3221:
  1385                           
  1386                           ; BSR set to: 0
  1387  0013B4  0E1B               	movlw	low _result_msg_title
  1388  0013B6  25AE               	addwf	main@i_623& (0+255),w,b
  1389  0013B8  6EF6               	movwf	tblptrl,c
  1390  0013BA  6AF7               	clrf	tblptrh,c
  1391  0013BC  0E10               	movlw	high _result_msg_title
  1392  0013BE  22F7               	addwfc	tblptrh,f,c
  1393  0013C0                     	if	0	;There are less than 3 active tblptr bytes
  1394  0013C0                     	endif
  1395  0013C0  0008               	tblrd		*
  1396  0013C2  50F5               	movf	tablat,w,c
  1397  0013C4  EC76  F012         	call	_LCD_write_data_byte_4bit
  1398  0013C8  0100               	movlb	0	; () banked
  1399  0013CA  2BAE               	incf	main@i_623& (0+255),f,b
  1400  0013CC  EFD0  F009         	goto	l3217
  1401  0013D0                     l3227:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;ece376_hw9_ccp_capt.c: 295:             LCD_set_cursor_position(2,1);
  1405  0013D0  0E01               	movlw	1
  1406  0013D2  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1407  0013D4  0E02               	movlw	2
  1408  0013D6  EC50  F00F         	call	_LCD_set_cursor_position
  1409  0013DA                     
  1410                           ;ece376_hw9_ccp_capt.c: 297:             for(uint8_t i=0; i<16; i++) LCD_write_data_byte
      +                          _4bit(result_msg[i]);
  1411  0013DA  0E00               	movlw	0
  1412  0013DC  0100               	movlb	0	; () banked
  1413  0013DE  6FAF               	movwf	main@i_624& (0+255),b
  1414  0013E0                     l3231:
  1415                           
  1416                           ; BSR set to: 0
  1417  0013E0  0E0F               	movlw	15
  1418  0013E2  65AF               	cpfsgt	main@i_624& (0+255),b
  1419  0013E4  EFF6  F009         	goto	u1961
  1420  0013E8  EFF8  F009         	goto	u1960
  1421  0013EC                     u1961:
  1422  0013EC  EFFA  F009         	goto	l3235
  1423  0013F0                     u1960:
  1424  0013F0  EF07  F00A         	goto	l3241
  1425  0013F4                     l3235:
  1426                           
  1427                           ; BSR set to: 0
  1428  0013F4  0EBB               	movlw	low _result_msg
  1429  0013F6  25AF               	addwf	main@i_624& (0+255),w,b
  1430  0013F8  6ED9               	movwf	fsr2l,c
  1431  0013FA  6ADA               	clrf	fsr2h,c
  1432  0013FC  0E00               	movlw	high _result_msg
  1433  0013FE  22DA               	addwfc	fsr2h,f,c
  1434  001400  50DF               	movf	indf2,w,c
  1435  001402  EC76  F012         	call	_LCD_write_data_byte_4bit
  1436  001406  0100               	movlb	0	; () banked
  1437  001408  2BAF               	incf	main@i_624& (0+255),f,b
  1438  00140A  EFF0  F009         	goto	l3231
  1439  00140E                     l3241:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;ece376_hw9_ccp_capt.c: 299:             _delay((unsigned long)((3000)*(40000000u/4000.0
      +                          )));
  1443  00140E  0E99               	movlw	153
  1444  001410  6E6F               	movwf	(??_main+1)^0,c
  1445  001412  0E31               	movlw	49
  1446  001414  6E6E               	movwf	??_main^0,c
  1447  001416  0EA2               	movlw	162
  1448  001418                     u2027:
  1449  001418  2EE8               	decfsz	wreg,f,c
  1450  00141A  D7FE               	bra	u2027
  1451  00141C  2E6E               	decfsz	??_main^0,f,c
  1452  00141E  D7FC               	bra	u2027
  1453  001420  2E6F               	decfsz	(??_main+1)^0,f,c
  1454  001422  D7FA               	bra	u2027
  1455  001424  D000               	nop2	
  1456                           
  1457                           ;ece376_hw9_ccp_capt.c: 300:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1458  001426  0E66               	movlw	102
  1459  001428  6E6F               	movwf	(??_main+1)^0,c
  1460  00142A  0E76               	movlw	118
  1461  00142C  6E6E               	movwf	??_main^0,c
  1462  00142E  0EC1               	movlw	193
  1463  001430                     u2037:
  1464  001430  2EE8               	decfsz	wreg,f,c
  1465  001432  D7FE               	bra	u2037
  1466  001434  2E6E               	decfsz	??_main^0,f,c
  1467  001436  D7FC               	bra	u2037
  1468  001438  2E6F               	decfsz	(??_main+1)^0,f,c
  1469  00143A  D7FA               	bra	u2037
  1470  00143C  F000               	nop	
  1471  00143E                     
  1472                           ;ece376_hw9_ccp_capt.c: 303:             LATDbits.LATD0 = 0u;
  1473  00143E  908C               	bcf	140,0,c	;volatile
  1474  001440                     
  1475                           ;ece376_hw9_ccp_capt.c: 304:             LCD_clear_display();
  1476  001440  EC3C  F013         	call	_LCD_clear_display	;wreg free
  1477  001444                     
  1478                           ;ece376_hw9_ccp_capt.c: 305:             game_done_flag = 0x00;
  1479  001444  0E00               	movlw	0
  1480  001446  0100               	movlb	0	; () banked
  1481  001448  6FBA               	movwf	_game_done_flag& (0+255),b	;volatile
  1482  00144A                     
  1483                           ; BSR set to: 0
  1484                           ;ece376_hw9_ccp_capt.c: 306:             Timer1_Disable();
  1485  00144A  ECAB  F013         	call	_Timer1_Disable	;wreg free
  1486  00144E                     
  1487                           ;ece376_hw9_ccp_capt.c: 307:             (INTCONbits.PEIE = 0u);
  1488  00144E  9CF2               	bcf	242,6,c	;volatile
  1489  001450                     
  1490                           ;ece376_hw9_ccp_capt.c: 308:             (INTCONbits.GIE = 0);
  1491  001450  9EF2               	bcf	242,7,c	;volatile
  1492  001452  EFE0  F008         	goto	l3175
  1493  001456  EF07  F004         	goto	start
  1494  00145A                     __end_of_main:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _strcat *****************
  1498 ;; Defined at:
  1499 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcat.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  dest            2   12[COMRAM] PTR unsigned char 
  1502 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1503 ;;  src             2   14[COMRAM] PTR const unsigned char 
  1504 ;;		 -> hex_to_bit_string@bit_string(9), 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2   12[COMRAM] PTR unsigned char 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;Total ram usage:        4 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    2
  1523 ;; This function calls:
  1524 ;;		_strcpy
  1525 ;;		_strlen
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text1
  1532  0026D0                     __ptext1:
  1533                           	callstack 0
  1534  0026D0                     _strcat:
  1535                           	callstack 28
  1536  0026D0  C00D  F001         	movff	strcat@dest,strlen@s
  1537  0026D4  C00E  F002         	movff	strcat@dest+1,strlen@s+1
  1538  0026D8  EC21  F013         	call	_strlen	;wreg free
  1539  0026DC  5001               	movf	?_strlen^0,w,c
  1540  0026DE  240D               	addwf	strcat@dest^0,w,c
  1541  0026E0  6E05               	movwf	strcpy@dest^0,c
  1542  0026E2  5002               	movf	(?_strlen+1)^0,w,c
  1543  0026E4  200E               	addwfc	(strcat@dest+1)^0,w,c
  1544  0026E6  6E06               	movwf	(strcpy@dest+1)^0,c
  1545  0026E8  C00F  F007         	movff	strcat@src,strcpy@src
  1546  0026EC  C010  F008         	movff	strcat@src+1,strcpy@src+1
  1547  0026F0  ECE6  F012         	call	_strcpy	;wreg free
  1548  0026F4  0012               	return		;funcret
  1549  0026F6                     __end_of_strcat:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _strcpy *****************
  1553 ;; Defined at:
  1554 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  dest            2    4[COMRAM] PTR unsigned char 
  1557 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1558 ;;  src             2    6[COMRAM] PTR const unsigned char 
  1559 ;;		 -> hex_to_bit_string@bit_string(9), 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  d               2   10[COMRAM] PTR unsigned char 
  1562 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1563 ;;  s               2    8[COMRAM] PTR const unsigned char 
  1564 ;;		 -> hex_to_bit_string@bit_string(9), 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2    4[COMRAM] PTR unsigned char 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;Total ram usage:        8 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_strcat
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text2
  1589  0025CC                     __ptext2:
  1590                           	callstack 0
  1591  0025CC                     _strcpy:
  1592                           	callstack 28
  1593  0025CC  C007  F009         	movff	strcpy@src,strcpy@s
  1594  0025D0  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  1595  0025D4  C005  F00B         	movff	strcpy@dest,strcpy@d
  1596  0025D8  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  1597  0025DC                     l2605:
  1598  0025DC  C009  FFD9         	movff	strcpy@s,fsr2l
  1599  0025E0  C00A  FFDA         	movff	strcpy@s+1,fsr2h
  1600  0025E4  4A09               	infsnz	strcpy@s^0,f,c
  1601  0025E6  2A0A               	incf	(strcpy@s+1)^0,f,c
  1602  0025E8  C00B  FFE1         	movff	strcpy@d,fsr1l
  1603  0025EC  C00C  FFE2         	movff	strcpy@d+1,fsr1h
  1604  0025F0  4A0B               	infsnz	strcpy@d^0,f,c
  1605  0025F2  2A0C               	incf	(strcpy@d+1)^0,f,c
  1606  0025F4  CFDF FFE7          	movff	indf2,indf1
  1607  0025F8  50E7               	movf	indf1,w,c
  1608  0025FA  A4D8               	btfss	status,2,c
  1609  0025FC  EF02  F013         	goto	u1451
  1610  002600  EF04  F013         	goto	u1450
  1611  002604                     u1451:
  1612  002604  EFEE  F012         	goto	l2605
  1613  002608                     u1450:
  1614  002608  0012               	return		;funcret
  1615  00260A                     __end_of_strcpy:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _sprintf *****************
  1619 ;; Defined at:
  1620 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  s               2   89[COMRAM] PTR unsigned char 
  1623 ;;		 -> result_msg(17), 
  1624 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1625 ;;		 -> STR_1(20), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  f               6  103[COMRAM] struct _IO_FILE
  1628 ;;  ap              2  101[COMRAM] PTR void [1]
  1629 ;;		 -> ?_sprintf(2), 
  1630 ;;  ret             2    0        int 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   89[COMRAM] int 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:       20 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    8
  1647 ;; This function calls:
  1648 ;;		_vfprintf
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text3
  1655  00249E                     __ptext3:
  1656                           	callstack 0
  1657  00249E                     _sprintf:
  1658                           	callstack 22
  1659  00249E  0E5E               	movlw	low (?_sprintf+4)
  1660  0024A0  6E66               	movwf	sprintf@ap^0,c
  1661  0024A2  0E00               	movlw	high (?_sprintf+4)
  1662  0024A4  6E67               	movwf	(sprintf@ap+1)^0,c
  1663  0024A6  C05A  F068         	movff	sprintf@s,sprintf@f
  1664  0024AA  C05B  F069         	movff	sprintf@s+1,sprintf@f+1
  1665  0024AE  0E00               	movlw	0
  1666  0024B0  6E6B               	movwf	(sprintf@f+3)^0,c
  1667  0024B2  0E00               	movlw	0
  1668  0024B4  6E6A               	movwf	(sprintf@f+2)^0,c
  1669  0024B6  0E00               	movlw	0
  1670  0024B8  6E6D               	movwf	(sprintf@f+5)^0,c
  1671  0024BA  0E00               	movlw	0
  1672  0024BC  6E6C               	movwf	(sprintf@f+4)^0,c
  1673  0024BE  0E68               	movlw	low sprintf@f
  1674  0024C0  6E52               	movwf	vfprintf@fp^0,c
  1675  0024C2  0E00               	movlw	high sprintf@f
  1676  0024C4  6E53               	movwf	(vfprintf@fp+1)^0,c
  1677  0024C6  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
  1678  0024CA  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1679  0024CE  0E66               	movlw	low sprintf@ap
  1680  0024D0  6E56               	movwf	vfprintf@ap^0,c
  1681  0024D2  0E00               	movlw	high sprintf@ap
  1682  0024D4  6E57               	movwf	(vfprintf@ap+1)^0,c
  1683  0024D6  ECF5  F011         	call	_vfprintf	;wreg free
  1684  0024DA  506A               	movf	(sprintf@f+2)^0,w,c
  1685  0024DC  245A               	addwf	sprintf@s^0,w,c
  1686  0024DE  6ED9               	movwf	fsr2l,c
  1687  0024E0  506B               	movf	(sprintf@f+3)^0,w,c
  1688  0024E2  205B               	addwfc	(sprintf@s+1)^0,w,c
  1689  0024E4  6EDA               	movwf	fsr2h,c
  1690  0024E6  0E00               	movlw	0
  1691  0024E8  6EDF               	movwf	indf2,c
  1692  0024EA  0012               	return		;funcret
  1693  0024EC                     __end_of_sprintf:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _vfprintf *****************
  1697 ;; Defined at:
  1698 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1701 ;;		 -> sprintf@f(6), 
  1702 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1703 ;;		 -> STR_1(20), 
  1704 ;;  ap              2   85[COMRAM] PTR PTR void 
  1705 ;;		 -> sprintf@ap(2), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1708 ;;		 -> STR_1(20), 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2   81[COMRAM] int 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1718 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;Total ram usage:        8 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    7
  1725 ;; This function calls:
  1726 ;;		_vfpfcnvrt
  1727 ;; This function is called by:
  1728 ;;		_sprintf
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text4
  1733  0023EA                     __ptext4:
  1734                           	callstack 0
  1735  0023EA                     _vfprintf:
  1736                           	callstack 22
  1737  0023EA                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1739  0023EA  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1740  0023EE  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1741  0023F2                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1743  0023F2  0E00               	movlw	0
  1744  0023F4  0100               	movlb	0	; () banked
  1745  0023F6  6FB9               	movwf	(_nout+1)& (0+255),b
  1746  0023F8  0E00               	movlw	0
  1747  0023FA  6FB8               	movwf	_nout& (0+255),b
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1750  0023FC  EF13  F012         	goto	l2601
  1751  002400                     l2599:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1755  002400  C052  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1756  002404  C053  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1757  002408  0E58               	movlw	low vfprintf@cfmt
  1758  00240A  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1759  00240C  0E00               	movlw	high vfprintf@cfmt
  1760  00240E  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1761  002410  C056  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1762  002414  C057  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1763  002418  EC2D  F00A         	call	_vfpfcnvrt	;wreg free
  1764  00241C  503C               	movf	?_vfpfcnvrt^0,w,c
  1765  00241E  0100               	movlb	0	; () banked
  1766  002420  27B8               	addwf	_nout& (0+255),f,b
  1767  002422  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1768  002424  23B9               	addwfc	(_nout+1)& (0+255),f,b
  1769  002426                     l2601:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1773  002426  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1774  00242A  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1775  00242E                     	if	0	;tblptru may be non-zero
  1776  00242E                     	endif
  1777  00242E                     	if	0	;tblptru may be non-zero
  1778  00242E                     	endif
  1779  00242E  0008               	tblrd		*
  1780  002430  50F5               	movf	tablat,w,c
  1781  002432  0900               	iorlw	0
  1782  002434  A4D8               	btfss	status,2,c
  1783  002436  EF1F  F012         	goto	u1441
  1784  00243A  EF21  F012         	goto	u1440
  1785  00243E                     u1441:
  1786  00243E  EF00  F012         	goto	l2599
  1787  002442                     u1440:
  1788  002442                     
  1789                           ; BSR set to: 0
  1790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1791  002442  C0B8  F052         	movff	_nout,?_vfprintf
  1792  002446  C0B9  F053         	movff	_nout+1,?_vfprintf+1
  1793  00244A                     
  1794                           ; BSR set to: 0
  1795  00244A  0012               	return		;funcret
  1796  00244C                     __end_of_vfprintf:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _vfpfcnvrt *****************
  1800 ;; Defined at:
  1801 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1804 ;;		 -> sprintf@f(6), 
  1805 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1806 ;;		 -> vfprintf@cfmt(2), 
  1807 ;;  ap              2   63[COMRAM] PTR PTR void 
  1808 ;;		 -> sprintf@ap(2), 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  llu             8   69[COMRAM] unsigned long long 
  1811 ;;  ll              8    0        long long 
  1812 ;;  f               4    0        long long 
  1813 ;;  vp              3    0        PTR void 
  1814 ;;  ct              3    0        unsigned char [3]
  1815 ;;  cp              3    0        PTR unsigned char 
  1816 ;;  done            2   77[COMRAM] int 
  1817 ;;  i               2    0        int 
  1818 ;;  c               1    0        unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2   59[COMRAM] int 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:       22 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    6
  1835 ;; This function calls:
  1836 ;;		_atoi
  1837 ;;		_fputc
  1838 ;;		_isdigit
  1839 ;;		_utoa
  1840 ;; This function is called by:
  1841 ;;		_vfprintf
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text5
  1846  00145A                     __ptext5:
  1847                           	callstack 0
  1848  00145A                     _vfpfcnvrt:
  1849                           	callstack 22
  1850  00145A                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1852  00145A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1853  00145E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1854  001462  CFDE FFF6          	movff	postinc2,tblptrl
  1855  001466  CFDD FFF7          	movff	postdec2,tblptrh
  1856  00146A                     	if	0	;tblptru may be non-zero
  1857  00146A                     	endif
  1858  00146A                     	if	0	;tblptru may be non-zero
  1859  00146A                     	endif
  1860  00146A  0008               	tblrd		*
  1861  00146C  50F5               	movf	tablat,w,c
  1862  00146E  0A25               	xorlw	37
  1863  001470  A4D8               	btfss	status,2,c
  1864  001472  EF3D  F00A         	goto	u1341
  1865  001476  EF3F  F00A         	goto	u1340
  1866  00147A                     u1341:
  1867  00147A  EFB4  F00B         	goto	l2547
  1868  00147E                     u1340:
  1869  00147E                     
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1871  00147E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1872  001482  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1873  001486  2ADE               	incf	postinc2,f,c
  1874  001488  0E00               	movlw	0
  1875  00148A  22DD               	addwfc	postdec2,f,c
  1876  00148C                     
  1877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1878  00148C  0E00               	movlw	0
  1879  00148E  6E71               	movwf	(_width+1)^0,c
  1880  001490  0E00               	movlw	0
  1881  001492  6E70               	movwf	_width^0,c
  1882  001494  C070  F074         	movff	_width,_flags
  1883  001498  C071  F075         	movff	_width+1,_flags+1
  1884  00149C                     
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1886  00149C  6872               	setf	_prec^0,c
  1887  00149E  6873               	setf	(_prec+1)^0,c
  1888  0014A0                     
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1890  0014A0  0E00               	movlw	0
  1891  0014A2  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
  1892  0014A4  0E00               	movlw	0
  1893  0014A6  6E4E               	movwf	vfpfcnvrt@done^0,c
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1896  0014A8  EF9C  F00A         	goto	l2501
  1897  0014AC                     l2475:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1900  0014AC  8074               	bsf	_flags^0,0,c
  1901  0014AE                     l2477:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1904  0014AE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1905  0014B2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1906  0014B6  2ADE               	incf	postinc2,f,c
  1907  0014B8  0E00               	movlw	0
  1908  0014BA  22DD               	addwfc	postdec2,f,c
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1911  0014BC  EF9C  F00A         	goto	l2501
  1912  0014C0                     l2479:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1915  0014C0  8274               	bsf	_flags^0,1,c
  1916  0014C2  EF57  F00A         	goto	l2477
  1917  0014C6                     l2483:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1920  0014C6  8474               	bsf	_flags^0,2,c
  1921  0014C8  EF57  F00A         	goto	l2477
  1922  0014CC                     l2487:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1925  0014CC  8674               	bsf	_flags^0,3,c
  1926  0014CE  EF57  F00A         	goto	l2477
  1927  0014D2                     l2491:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1930  0014D2  8874               	bsf	_flags^0,4,c
  1931  0014D4  EF57  F00A         	goto	l2477
  1932  0014D8                     l2495:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1935  0014D8  0E00               	movlw	0
  1936  0014DA  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
  1937  0014DC  0E01               	movlw	1
  1938  0014DE  6E4E               	movwf	vfpfcnvrt@done^0,c
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1941  0014E0  EF9C  F00A         	goto	l2501
  1942  0014E4                     l2499:
  1943  0014E4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1944  0014E8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1945  0014EC  CFDE FFF6          	movff	postinc2,tblptrl
  1946  0014F0  CFDD FFF7          	movff	postdec2,tblptrh
  1947  0014F4                     	if	0	;tblptru may be non-zero
  1948  0014F4                     	endif
  1949  0014F4                     	if	0	;tblptru may be non-zero
  1950  0014F4                     	endif
  1951  0014F4  0008               	tblrd		*
  1952  0014F6  50F5               	movf	tablat,w,c
  1953  0014F8  6E42               	movwf	??_vfpfcnvrt^0,c
  1954  0014FA  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1955                           
  1956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 1, Range of values is 0 to 0
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte            4     3 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963  0014FC  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1964  0014FE  0A00               	xorlw	0	; case 0
  1965  001500  B4D8               	btfsc	status,2,c
  1966  001502  EF85  F00A         	goto	l3315
  1967  001506  EF6C  F00A         	goto	l2495
  1968  00150A                     l3315:
  1969                           
  1970                           ; Switch size 1, requested type "simple"
  1971                           ; Number of cases is 5, Range of values is 32 to 48
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte           16     9 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976  00150A  5042               	movf	??_vfpfcnvrt^0,w,c
  1977  00150C  0A20               	xorlw	32	; case 32
  1978  00150E  B4D8               	btfsc	status,2,c
  1979  001510  EF66  F00A         	goto	l2487
  1980  001514  0A03               	xorlw	3	; case 35
  1981  001516  B4D8               	btfsc	status,2,c
  1982  001518  EF69  F00A         	goto	l2491
  1983  00151C  0A08               	xorlw	8	; case 43
  1984  00151E  B4D8               	btfsc	status,2,c
  1985  001520  EF63  F00A         	goto	l2483
  1986  001524  0A06               	xorlw	6	; case 45
  1987  001526  B4D8               	btfsc	status,2,c
  1988  001528  EF56  F00A         	goto	l2475
  1989  00152C  0A1D               	xorlw	29	; case 48
  1990  00152E  B4D8               	btfsc	status,2,c
  1991  001530  EF60  F00A         	goto	l2479
  1992  001534  EF6C  F00A         	goto	l2495
  1993  001538                     l2501:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1996  001538  504E               	movf	vfpfcnvrt@done^0,w,c
  1997  00153A  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1998  00153C  B4D8               	btfsc	status,2,c
  1999  00153E  EFA3  F00A         	goto	u1351
  2000  001542  EFA5  F00A         	goto	u1350
  2001  001546                     u1351:
  2002  001546  EF72  F00A         	goto	l2499
  2003  00154A                     u1350:
  2004  00154A                     
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2006  00154A  A074               	btfss	_flags^0,0,c
  2007  00154C  EFAA  F00A         	goto	u1361
  2008  001550  EFAC  F00A         	goto	u1360
  2009  001554                     u1361:
  2010  001554  EFAD  F00A         	goto	l2505
  2011  001558                     u1360:
  2012  001558                     
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2014  001558  9274               	bcf	_flags^0,1,c
  2015  00155A                     l2505:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2018  00155A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019  00155E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020  001562  CFDE FFF6          	movff	postinc2,tblptrl
  2021  001566  CFDD FFF7          	movff	postdec2,tblptrh
  2022  00156A                     	if	0	;tblptru may be non-zero
  2023  00156A                     	endif
  2024  00156A                     	if	0	;tblptru may be non-zero
  2025  00156A                     	endif
  2026  00156A  0008               	tblrd		*
  2027  00156C  50F5               	movf	tablat,w,c
  2028  00156E  0A2A               	xorlw	42
  2029  001570  A4D8               	btfss	status,2,c
  2030  001572  EFBD  F00A         	goto	u1371
  2031  001576  EFBF  F00A         	goto	u1370
  2032  00157A                     u1371:
  2033  00157A  EFE8  F00A         	goto	l2513
  2034  00157E                     u1370:
  2035  00157E                     
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2037  00157E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2038  001582  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2039  001586  2ADE               	incf	postinc2,f,c
  2040  001588  0E00               	movlw	0
  2041  00158A  22DD               	addwfc	postdec2,f,c
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2044  00158C  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2045  001590  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2046  001594  CFDF F042          	movff	indf2,??_vfpfcnvrt
  2047  001598  0E02               	movlw	2
  2048  00159A  26DE               	addwf	postinc2,f,c
  2049  00159C  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  2050  0015A0  0E00               	movlw	0
  2051  0015A2  22DD               	addwfc	postdec2,f,c
  2052  0015A4  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2053  0015A8  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2054  0015AC  CFDE F070          	movff	postinc2,_width
  2055  0015B0  CFDD F071          	movff	postdec2,_width+1
  2056  0015B4                     
  2057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2058  0015B4  BE71               	btfsc	(_width+1)^0,7,c
  2059  0015B6  EFE1  F00A         	goto	u1380
  2060  0015BA  EFDF  F00A         	goto	u1381
  2061  0015BE                     u1381:
  2062  0015BE  EF2B  F00B         	goto	l2523
  2063  0015C2                     u1380:
  2064  0015C2                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2066  0015C2  8074               	bsf	_flags^0,0,c
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2069  0015C4  6C70               	negf	_width^0,c
  2070  0015C6  1E71               	comf	(_width+1)^0,f,c
  2071  0015C8  B0D8               	btfsc	status,0,c
  2072  0015CA  2A71               	incf	(_width+1)^0,f,c
  2073  0015CC  EF2B  F00B         	goto	l2523
  2074  0015D0                     l2513:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2077  0015D0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078  0015D4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079  0015D8  CFDE F008          	movff	postinc2,atoi@s
  2080  0015DC  CFDD F009          	movff	postdec2,atoi@s+1
  2081  0015E0  ECD0  F00C         	call	_atoi	;wreg free
  2082  0015E4  C008  F070         	movff	?_atoi,_width
  2083  0015E8  C009  F071         	movff	?_atoi+1,_width+1
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2086  0015EC  EFFF  F00A         	goto	l2517
  2087  0015F0                     l2515:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2090  0015F0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2091  0015F4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2092  0015F8  2ADE               	incf	postinc2,f,c
  2093  0015FA  0E00               	movlw	0
  2094  0015FC  22DD               	addwfc	postdec2,f,c
  2095  0015FE                     l2517:
  2096  0015FE  0ED0               	movlw	208
  2097  001600  6E42               	movwf	??_vfpfcnvrt^0,c
  2098  001602  0EFF               	movlw	255
  2099  001604  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  2100  001606  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2101  00160A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2102  00160E  CFDE FFF6          	movff	postinc2,tblptrl
  2103  001612  CFDD FFF7          	movff	postdec2,tblptrh
  2104  001616                     	if	0	;tblptru may be non-zero
  2105  001616                     	endif
  2106  001616                     	if	0	;tblptru may be non-zero
  2107  001616                     	endif
  2108  001616  0008               	tblrd		*
  2109  001618  50F5               	movf	tablat,w,c
  2110  00161A  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  2111  00161C  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  2112  00161E  5042               	movf	??_vfpfcnvrt^0,w,c
  2113  001620  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2114  001622  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  2115  001624  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2116  001626  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  2117  001628  E10A               	bnz	u1390
  2118  00162A  0E0A               	movlw	10
  2119  00162C  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2120  00162E  A0D8               	btfss	status,0,c
  2121  001630  EF1C  F00B         	goto	u1391
  2122  001634  EF1F  F00B         	goto	u1390
  2123  001638                     u1391:
  2124  001638  0E01               	movlw	1
  2125  00163A  EF20  F00B         	goto	u1400
  2126  00163E                     u1390:
  2127  00163E  0E00               	movlw	0
  2128  001640                     u1400:
  2129  001640  6E50               	movwf	_vfpfcnvrt$1159^0,c
  2130  001642  6A51               	clrf	(_vfpfcnvrt$1159+1)^0,c
  2131  001644  5050               	movf	_vfpfcnvrt$1159^0,w,c
  2132  001646  1051               	iorwf	(_vfpfcnvrt$1159+1)^0,w,c
  2133  001648  A4D8               	btfss	status,2,c
  2134  00164A  EF29  F00B         	goto	u1411
  2135  00164E  EF2B  F00B         	goto	u1410
  2136  001652                     u1411:
  2137  001652  EFF8  F00A         	goto	l2515
  2138  001656                     u1410:
  2139  001656                     l2523:
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2142  001656  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2143  00165A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2144  00165E  CFDE FFF6          	movff	postinc2,tblptrl
  2145  001662  CFDD FFF7          	movff	postdec2,tblptrh
  2146  001666                     	if	0	;tblptru may be non-zero
  2147  001666                     	endif
  2148  001666                     	if	0	;tblptru may be non-zero
  2149  001666                     	endif
  2150  001666  0008               	tblrd		*
  2151  001668  50F5               	movf	tablat,w,c
  2152  00166A  0A75               	xorlw	117
  2153  00166C  A4D8               	btfss	status,2,c
  2154  00166E  EF3B  F00B         	goto	u1421
  2155  001672  EF3D  F00B         	goto	u1420
  2156  001676                     u1421:
  2157  001676  EF7E  F00B         	goto	l2531
  2158  00167A                     u1420:
  2159  00167A                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2161  00167A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  00167E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  001682  2ADE               	incf	postinc2,f,c
  2164  001684  0E00               	movlw	0
  2165  001686  22DD               	addwfc	postdec2,f,c
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2168  001688  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2169  00168C  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2170  001690  CFDF F042          	movff	indf2,??_vfpfcnvrt
  2171  001694  0E02               	movlw	2
  2172  001696  26DE               	addwf	postinc2,f,c
  2173  001698  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  2174  00169C  0E00               	movlw	0
  2175  00169E  22DD               	addwfc	postdec2,f,c
  2176  0016A0  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2177  0016A4  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2178  0016A8  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  2179  0016AC  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  2180  0016B0  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2181  0016B4  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2182  0016B8  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  2183  0016BA  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  2184  0016BC  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  2185  0016BE  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  2186  0016C0  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  2187  0016C2  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  2188  0016C4                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2190  0016C4  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2191  0016C8  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2192  0016CC  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2193  0016D0  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2194  0016D4  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2195  0016D8  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2196  0016DC  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2197  0016E0  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2198  0016E4  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2199  0016E8  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2200  0016EC  ECD0  F00B         	call	_utoa	;wreg free
  2201  0016F0  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  2202  0016F4  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  2203  0016F8  EFCF  F00B         	goto	l1043
  2204  0016FC                     l2531:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2207  0016FC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2208  001700  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2209  001704  CFDE FFF6          	movff	postinc2,tblptrl
  2210  001708  CFDD FFF7          	movff	postdec2,tblptrh
  2211  00170C                     	if	0	;tblptru may be non-zero
  2212  00170C                     	endif
  2213  00170C                     	if	0	;tblptru may be non-zero
  2214  00170C                     	endif
  2215  00170C  0008               	tblrd		*
  2216  00170E  50F5               	movf	tablat,w,c
  2217  001710  0A25               	xorlw	37
  2218  001712  A4D8               	btfss	status,2,c
  2219  001714  EF8E  F00B         	goto	u1431
  2220  001718  EF90  F00B         	goto	u1430
  2221  00171C                     u1431:
  2222  00171C  EFA7  F00B         	goto	l2541
  2223  001720                     u1430:
  2224  001720                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2226  001720  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2227  001724  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2228  001728  2ADE               	incf	postinc2,f,c
  2229  00172A  0E00               	movlw	0
  2230  00172C  22DD               	addwfc	postdec2,f,c
  2231  00172E                     
  2232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2233  00172E  0E00               	movlw	0
  2234  001730  6E02               	movwf	(fputc@c+1)^0,c
  2235  001732  0E25               	movlw	37
  2236  001734  6E01               	movwf	fputc@c^0,c
  2237  001736  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2238  00173A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2239  00173E  ECEB  F00E         	call	_fputc	;wreg free
  2240  001742                     l2537:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2243  001742  0E00               	movlw	0
  2244  001744  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  2245  001746  0E01               	movlw	1
  2246  001748  6E3C               	movwf	?_vfpfcnvrt^0,c
  2247  00174A  EFCF  F00B         	goto	l1043
  2248  00174E                     l2541:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2251  00174E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  001752  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  001756  2ADE               	incf	postinc2,f,c
  2254  001758  0E00               	movlw	0
  2255  00175A  22DD               	addwfc	postdec2,f,c
  2256  00175C                     
  2257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2258  00175C  0E00               	movlw	0
  2259  00175E  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  2260  001760  0E00               	movlw	0
  2261  001762  6E3C               	movwf	?_vfpfcnvrt^0,c
  2262  001764  EFCF  F00B         	goto	l1043
  2263  001768                     l2547:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2266  001768  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  00176C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  001770  CFDE FFF6          	movff	postinc2,tblptrl
  2269  001774  CFDD FFF7          	movff	postdec2,tblptrh
  2270  001778                     	if	0	;tblptru may be non-zero
  2271  001778                     	endif
  2272  001778                     	if	0	;tblptru may be non-zero
  2273  001778                     	endif
  2274  001778  0008               	tblrd		*
  2275  00177A  50F5               	movf	tablat,w,c
  2276  00177C  6E01               	movwf	fputc@c^0,c
  2277  00177E  6A02               	clrf	(fputc@c+1)^0,c
  2278  001780  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2279  001784  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2280  001788  ECEB  F00E         	call	_fputc	;wreg free
  2281  00178C                     
  2282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2283  00178C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2284  001790  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2285  001794  2ADE               	incf	postinc2,f,c
  2286  001796  0E00               	movlw	0
  2287  001798  22DD               	addwfc	postdec2,f,c
  2288  00179A  EFA1  F00B         	goto	l2537
  2289  00179E                     l1043:
  2290  00179E  0012               	return		;funcret
  2291  0017A0                     __end_of_vfpfcnvrt:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _utoa *****************
  2295 ;; Defined at:
  2296 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2299 ;;		 -> sprintf@f(6), 
  2300 ;;  d               8   29[COMRAM] unsigned long long 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  n               8   49[COMRAM] unsigned long long 
  2303 ;;  i               2   57[COMRAM] int 
  2304 ;;  w               2   47[COMRAM] int 
  2305 ;;  p               2   45[COMRAM] int 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2   27[COMRAM] int 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2315 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;Total ram usage:       32 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    5
  2322 ;; This function calls:
  2323 ;;		___lodiv
  2324 ;;		___lomod
  2325 ;;		_pad
  2326 ;; This function is called by:
  2327 ;;		_vfpfcnvrt
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text6
  2332  0017A0                     __ptext6:
  2333                           	callstack 0
  2334  0017A0                     _utoa:
  2335                           	callstack 22
  2336  0017A0                     
  2337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2338  0017A0  BE73               	btfsc	(_prec+1)^0,7,c
  2339  0017A2  EFD5  F00B         	goto	u1201
  2340  0017A6  EFD7  F00B         	goto	u1200
  2341  0017AA                     u1201:
  2342  0017AA  EFD8  F00B         	goto	l2357
  2343  0017AE                     u1200:
  2344  0017AE                     
  2345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2346  0017AE  9274               	bcf	_flags^0,1,c
  2347  0017B0                     l2357:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2350  0017B0  BE73               	btfsc	(_prec+1)^0,7,c
  2351  0017B2  EFE5  F00B         	goto	u1210
  2352  0017B6  5073               	movf	(_prec+1)^0,w,c
  2353  0017B8  E106               	bnz	u1211
  2354  0017BA  0472               	decf	_prec^0,w,c
  2355  0017BC  B0D8               	btfsc	status,0,c
  2356  0017BE  EFE3  F00B         	goto	u1211
  2357  0017C2  EFE5  F00B         	goto	u1210
  2358  0017C6                     u1211:
  2359  0017C6  EFEB  F00B         	goto	l1006
  2360  0017CA                     u1210:
  2361  0017CA  0E00               	movlw	0
  2362  0017CC  6E2F               	movwf	(utoa@p+1)^0,c
  2363  0017CE  0E01               	movlw	1
  2364  0017D0  6E2E               	movwf	utoa@p^0,c
  2365  0017D2  EFEF  F00B         	goto	l1008
  2366  0017D6                     l1006:
  2367  0017D6  C072  F02E         	movff	_prec,utoa@p
  2368  0017DA  C073  F02F         	movff	_prec+1,utoa@p+1
  2369  0017DE                     l1008:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2372  0017DE  C070  F030         	movff	_width,utoa@w
  2373  0017E2  C071  F031         	movff	_width+1,utoa@w+1
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2376  0017E6  C01E  F032         	movff	utoa@d,utoa@n
  2377  0017EA  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2378  0017EE  C020  F034         	movff	utoa@d+2,utoa@n+2
  2379  0017F2  C021  F035         	movff	utoa@d+3,utoa@n+3
  2380  0017F6  C022  F036         	movff	utoa@d+4,utoa@n+4
  2381  0017FA  C023  F037         	movff	utoa@d+5,utoa@n+5
  2382  0017FE  C024  F038         	movff	utoa@d+6,utoa@n+6
  2383  001802  C025  F039         	movff	utoa@d+7,utoa@n+7
  2384  001806                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2386  001806  0E00               	movlw	0
  2387  001808  6E3B               	movwf	(utoa@i+1)^0,c
  2388  00180A  0E1F               	movlw	31
  2389  00180C  6E3A               	movwf	utoa@i^0,c
  2390  00180E                     
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2392  00180E  0E00               	movlw	0
  2393  001810  0101               	movlb	1	; () banked
  2394  001812  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2397  001814  EF82  F00C         	goto	l2375
  2398  001818                     l2365:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
  2401  001818  063A               	decf	utoa@i^0,f,c
  2402  00181A  A0D8               	btfss	status,0,c
  2403  00181C  063B               	decf	(utoa@i+1)^0,f,c
  2404  00181E                     
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2406  00181E  0E00               	movlw	low _dbuf
  2407  001820  243A               	addwf	utoa@i^0,w,c
  2408  001822  6ED9               	movwf	fsr2l,c
  2409  001824  0E01               	movlw	high _dbuf
  2410  001826  203B               	addwfc	(utoa@i+1)^0,w,c
  2411  001828  6EDA               	movwf	fsr2h,c
  2412  00182A  C032  F001         	movff	utoa@n,___lomod@dividend
  2413  00182E  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2414  001832  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2415  001836  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2416  00183A  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2417  00183E  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2418  001842  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2419  001846  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2420  00184A  0E0A               	movlw	10
  2421  00184C  6E09               	movwf	___lomod@divisor^0,c
  2422  00184E  0E00               	movlw	0
  2423  001850  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2424  001852  0E00               	movlw	0
  2425  001854  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2426  001856  0E00               	movlw	0
  2427  001858  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2428  00185A  0E00               	movlw	0
  2429  00185C  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2430  00185E  0E00               	movlw	0
  2431  001860  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2432  001862  0E00               	movlw	0
  2433  001864  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2434  001866  0E00               	movlw	0
  2435  001868  6E10               	movwf	(___lomod@divisor+7)^0,c
  2436  00186A  EC83  F00E         	call	___lomod	;wreg free
  2437  00186E  C001  F026         	movff	?___lomod,??_utoa
  2438  001872  C002  F027         	movff	?___lomod+1,??_utoa+1
  2439  001876  C003  F028         	movff	?___lomod+2,??_utoa+2
  2440  00187A  C004  F029         	movff	?___lomod+3,??_utoa+3
  2441  00187E  C005  F02A         	movff	?___lomod+4,??_utoa+4
  2442  001882  C006  F02B         	movff	?___lomod+5,??_utoa+5
  2443  001886  C007  F02C         	movff	?___lomod+6,??_utoa+6
  2444  00188A  C008  F02D         	movff	?___lomod+7,??_utoa+7
  2445  00188E  5026               	movf	??_utoa^0,w,c
  2446  001890  0F30               	addlw	48
  2447  001892  6EDF               	movwf	indf2,c
  2448  001894                     
  2449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
  2450  001894  062E               	decf	utoa@p^0,f,c
  2451  001896  A0D8               	btfss	status,0,c
  2452  001898  062F               	decf	(utoa@p+1)^0,f,c
  2453  00189A                     
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
  2455  00189A  0630               	decf	utoa@w^0,f,c
  2456  00189C  A0D8               	btfss	status,0,c
  2457  00189E  0631               	decf	(utoa@w+1)^0,f,c
  2458  0018A0                     
  2459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2460  0018A0  C032  F001         	movff	utoa@n,___lodiv@dividend
  2461  0018A4  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2462  0018A8  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2463  0018AC  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2464  0018B0  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2465  0018B4  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2466  0018B8  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2467  0018BC  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2468  0018C0  0E0A               	movlw	10
  2469  0018C2  6E09               	movwf	___lodiv@divisor^0,c
  2470  0018C4  0E00               	movlw	0
  2471  0018C6  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  2472  0018C8  0E00               	movlw	0
  2473  0018CA  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  2474  0018CC  0E00               	movlw	0
  2475  0018CE  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  2476  0018D0  0E00               	movlw	0
  2477  0018D2  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  2478  0018D4  0E00               	movlw	0
  2479  0018D6  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  2480  0018D8  0E00               	movlw	0
  2481  0018DA  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  2482  0018DC  0E00               	movlw	0
  2483  0018DE  6E10               	movwf	(___lodiv@divisor+7)^0,c
  2484  0018E0  EC98  F00D         	call	___lodiv	;wreg free
  2485  0018E4  C001  F032         	movff	?___lodiv,utoa@n
  2486  0018E8  C002  F033         	movff	?___lodiv+1,utoa@n+1
  2487  0018EC  C003  F034         	movff	?___lodiv+2,utoa@n+2
  2488  0018F0  C004  F035         	movff	?___lodiv+3,utoa@n+3
  2489  0018F4  C005  F036         	movff	?___lodiv+4,utoa@n+4
  2490  0018F8  C006  F037         	movff	?___lodiv+5,utoa@n+5
  2491  0018FC  C007  F038         	movff	?___lodiv+6,utoa@n+6
  2492  001900  C008  F039         	movff	?___lodiv+7,utoa@n+7
  2493  001904                     l2375:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2496  001904  503A               	movf	utoa@i^0,w,c
  2497  001906  103B               	iorwf	(utoa@i+1)^0,w,c
  2498  001908  B4D8               	btfsc	status,2,c
  2499  00190A  EF89  F00C         	goto	u1221
  2500  00190E  EF8B  F00C         	goto	u1220
  2501  001912                     u1221:
  2502  001912  EFBB  F00C         	goto	l2385
  2503  001916                     u1220:
  2504  001916  5032               	movf	utoa@n^0,w,c
  2505  001918  1033               	iorwf	(utoa@n+1)^0,w,c
  2506  00191A  1034               	iorwf	(utoa@n+2)^0,w,c
  2507  00191C  1035               	iorwf	(utoa@n+3)^0,w,c
  2508  00191E  1036               	iorwf	(utoa@n+4)^0,w,c
  2509  001920  1037               	iorwf	(utoa@n+5)^0,w,c
  2510  001922  1038               	iorwf	(utoa@n+6)^0,w,c
  2511  001924  1039               	iorwf	(utoa@n+7)^0,w,c
  2512  001926  A4D8               	btfss	status,2,c
  2513  001928  EF98  F00C         	goto	u1231
  2514  00192C  EF9A  F00C         	goto	u1230
  2515  001930                     u1231:
  2516  001930  EF0C  F00C         	goto	l2365
  2517  001934                     u1230:
  2518  001934  BE2F               	btfsc	(utoa@p+1)^0,7,c
  2519  001936  EFA7  F00C         	goto	u1240
  2520  00193A  502F               	movf	(utoa@p+1)^0,w,c
  2521  00193C  E106               	bnz	u1241
  2522  00193E  042E               	decf	utoa@p^0,w,c
  2523  001940  B0D8               	btfsc	status,0,c
  2524  001942  EFA5  F00C         	goto	u1241
  2525  001946  EFA7  F00C         	goto	u1240
  2526  00194A                     u1241:
  2527  00194A  EF0C  F00C         	goto	l2365
  2528  00194E                     u1240:
  2529  00194E  BE31               	btfsc	(utoa@w+1)^0,7,c
  2530  001950  EFB2  F00C         	goto	u1251
  2531  001954  5031               	movf	(utoa@w+1)^0,w,c
  2532  001956  E108               	bnz	u1250
  2533  001958  0430               	decf	utoa@w^0,w,c
  2534  00195A  A0D8               	btfss	status,0,c
  2535  00195C  EFB2  F00C         	goto	u1251
  2536  001960  EFB4  F00C         	goto	u1250
  2537  001964                     u1251:
  2538  001964  EFBB  F00C         	goto	l2385
  2539  001968                     u1250:
  2540  001968  B274               	btfsc	_flags^0,1,c
  2541  00196A  EFB9  F00C         	goto	u1261
  2542  00196E  EFBB  F00C         	goto	u1260
  2543  001972                     u1261:
  2544  001972  EF0C  F00C         	goto	l2365
  2545  001976                     u1260:
  2546  001976                     l2385:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2549  001976  C01C  F011         	movff	utoa@fp,pad@fp
  2550  00197A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2551  00197E  0E00               	movlw	low _dbuf
  2552  001980  243A               	addwf	utoa@i^0,w,c
  2553  001982  6E13               	movwf	pad@buf^0,c
  2554  001984  0E01               	movlw	high _dbuf
  2555  001986  203B               	addwfc	(utoa@i+1)^0,w,c
  2556  001988  6E14               	movwf	(pad@buf+1)^0,c
  2557  00198A  C030  F015         	movff	utoa@w,pad@p
  2558  00198E  C031  F016         	movff	utoa@w+1,pad@p+1
  2559  001992  EC19  F010         	call	_pad	;wreg free
  2560  001996  C011  F01C         	movff	?_pad,?_utoa
  2561  00199A  C012  F01D         	movff	?_pad+1,?_utoa+1
  2562  00199E  0012               	return		;funcret
  2563  0019A0                     __end_of_utoa:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _pad *****************
  2567 ;; Defined at:
  2568 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2571 ;;		 -> sprintf@f(6), 
  2572 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2573 ;;		 -> dbuf(32), 
  2574 ;;  p               2   20[COMRAM] int 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  w               2   25[COMRAM] int 
  2577 ;;  i               2   23[COMRAM] int 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  2   16[COMRAM] int 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;Total ram usage:       11 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    4
  2594 ;; This function calls:
  2595 ;;		_fputc
  2596 ;;		_fputs
  2597 ;;		_strlen
  2598 ;; This function is called by:
  2599 ;;		_utoa
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text7
  2604  002032                     __ptext7:
  2605                           	callstack 0
  2606  002032                     _pad:
  2607                           	callstack 22
  2608  002032                     
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2610  002032  A074               	btfss	_flags^0,0,c
  2611  002034  EF1E  F010         	goto	u1121
  2612  002038  EF20  F010         	goto	u1120
  2613  00203C                     u1121:
  2614  00203C  EF2A  F010         	goto	l2319
  2615  002040                     u1120:
  2616  002040                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2618  002040  C013  F00A         	movff	pad@buf,fputs@s
  2619  002044  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2620  002048  C011  F00C         	movff	pad@fp,fputs@fp
  2621  00204C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2622  002050  ECC4  F012         	call	_fputs	;wreg free
  2623  002054                     l2319:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2626  002054  BE16               	btfsc	(pad@p+1)^0,7,c
  2627  002056  EF2F  F010         	goto	u1131
  2628  00205A  EF31  F010         	goto	u1130
  2629  00205E                     u1131:
  2630  00205E  EF37  F010         	goto	l2323
  2631  002062                     u1130:
  2632  002062  C015  F01A         	movff	pad@p,pad@w
  2633  002066  C016  F01B         	movff	pad@p+1,pad@w+1
  2634  00206A  EF3B  F010         	goto	l996
  2635  00206E                     l2323:
  2636  00206E  0E00               	movlw	0
  2637  002070  6E1B               	movwf	(pad@w+1)^0,c
  2638  002072  0E00               	movlw	0
  2639  002074  6E1A               	movwf	pad@w^0,c
  2640  002076                     l996:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2643  002076  0E00               	movlw	0
  2644  002078  6E19               	movwf	(pad@i+1)^0,c
  2645  00207A  0E00               	movlw	0
  2646  00207C  6E18               	movwf	pad@i^0,c
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2649  00207E  EF4D  F010         	goto	l2329
  2650  002082                     l2325:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2653  002082  0E00               	movlw	0
  2654  002084  6E02               	movwf	(fputc@c+1)^0,c
  2655  002086  0E20               	movlw	32
  2656  002088  6E01               	movwf	fputc@c^0,c
  2657  00208A  C011  F003         	movff	pad@fp,fputc@fp
  2658  00208E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2659  002092  ECEB  F00E         	call	_fputc	;wreg free
  2660  002096                     
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2662  002096  4A18               	infsnz	pad@i^0,f,c
  2663  002098  2A19               	incf	(pad@i+1)^0,f,c
  2664  00209A                     l2329:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2667  00209A  501A               	movf	pad@w^0,w,c
  2668  00209C  5C18               	subwf	pad@i^0,w,c
  2669  00209E  5019               	movf	(pad@i+1)^0,w,c
  2670  0020A0  0A80               	xorlw	128
  2671  0020A2  6E17               	movwf	??_pad^0,c
  2672  0020A4  501B               	movf	(pad@w+1)^0,w,c
  2673  0020A6  0A80               	xorlw	128
  2674  0020A8  5817               	subwfb	??_pad^0,w,c
  2675  0020AA  A0D8               	btfss	status,0,c
  2676  0020AC  EF5A  F010         	goto	u1141
  2677  0020B0  EF5C  F010         	goto	u1140
  2678  0020B4                     u1141:
  2679  0020B4  EF41  F010         	goto	l2325
  2680  0020B8                     u1140:
  2681  0020B8                     
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2683  0020B8  B074               	btfsc	_flags^0,0,c
  2684  0020BA  EF61  F010         	goto	u1151
  2685  0020BE  EF63  F010         	goto	u1150
  2686  0020C2                     u1151:
  2687  0020C2  EF6D  F010         	goto	l2333
  2688  0020C6                     u1150:
  2689  0020C6                     
  2690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2691  0020C6  C013  F00A         	movff	pad@buf,fputs@s
  2692  0020CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2693  0020CE  C011  F00C         	movff	pad@fp,fputs@fp
  2694  0020D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2695  0020D6  ECC4  F012         	call	_fputs	;wreg free
  2696  0020DA                     l2333:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2699  0020DA  C013  F001         	movff	pad@buf,strlen@s
  2700  0020DE  C014  F002         	movff	pad@buf+1,strlen@s+1
  2701  0020E2  EC21  F013         	call	_strlen	;wreg free
  2702  0020E6  501A               	movf	pad@w^0,w,c
  2703  0020E8  2401               	addwf	?_strlen^0,w,c
  2704  0020EA  6E11               	movwf	?_pad^0,c
  2705  0020EC  501B               	movf	(pad@w+1)^0,w,c
  2706  0020EE  2002               	addwfc	(?_strlen+1)^0,w,c
  2707  0020F0  6E12               	movwf	(?_pad+1)^0,c
  2708  0020F2  0012               	return		;funcret
  2709  0020F4                     __end_of_pad:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _strlen *****************
  2713 ;; Defined at:
  2714 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2717 ;;		 -> dbuf(32), main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2720 ;;		 -> dbuf(32), main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[COMRAM] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;Total ram usage:        4 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_pad
  2741 ;;		_strcat
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text8
  2746  002642                     __ptext8:
  2747                           	callstack 0
  2748  002642                     _strlen:
  2749                           	callstack 28
  2750  002642  C001  F003         	movff	strlen@s,strlen@a
  2751  002646  C002  F004         	movff	strlen@s+1,strlen@a+1
  2752  00264A  EF29  F013         	goto	l2265
  2753  00264E                     l2263:
  2754  00264E  4A01               	infsnz	strlen@s^0,f,c
  2755  002650  2A02               	incf	(strlen@s+1)^0,f,c
  2756  002652                     l2265:
  2757  002652  C001  FFD9         	movff	strlen@s,fsr2l
  2758  002656  C002  FFDA         	movff	strlen@s+1,fsr2h
  2759  00265A  50DF               	movf	indf2,w,c
  2760  00265C  A4D8               	btfss	status,2,c
  2761  00265E  EF33  F013         	goto	u1041
  2762  002662  EF35  F013         	goto	u1040
  2763  002666                     u1041:
  2764  002666  EF27  F013         	goto	l2263
  2765  00266A                     u1040:
  2766  00266A  5003               	movf	strlen@a^0,w,c
  2767  00266C  5C01               	subwf	strlen@s^0,w,c
  2768  00266E  6E01               	movwf	?_strlen^0,c
  2769  002670  5004               	movf	(strlen@a+1)^0,w,c
  2770  002672  5802               	subwfb	(strlen@s+1)^0,w,c
  2771  002674  6E02               	movwf	(?_strlen+1)^0,c
  2772  002676  0012               	return		;funcret
  2773  002678                     __end_of_strlen:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _fputs *****************
  2777 ;; Defined at:
  2778 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2781 ;;		 -> dbuf(32), 
  2782 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2783 ;;		 -> sprintf@f(6), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  i               2   14[COMRAM] int 
  2786 ;;  c               1   13[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    9[COMRAM] int 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;Total ram usage:        7 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    3
  2803 ;; This function calls:
  2804 ;;		_fputc
  2805 ;; This function is called by:
  2806 ;;		_pad
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text9
  2811  002588                     __ptext9:
  2812                           	callstack 0
  2813  002588                     _fputs:
  2814                           	callstack 22
  2815  002588  0E00               	movlw	0
  2816  00258A  6E10               	movwf	(fputs@i+1)^0,c
  2817  00258C  0E00               	movlw	0
  2818  00258E  6E0F               	movwf	fputs@i^0,c
  2819  002590  EFD5  F012         	goto	l2259
  2820  002594                     l2255:
  2821  002594  C00E  F001         	movff	fputs@c,fputc@c
  2822  002598  6A02               	clrf	(fputc@c+1)^0,c
  2823  00259A  C00C  F003         	movff	fputs@fp,fputc@fp
  2824  00259E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2825  0025A2  ECEB  F00E         	call	_fputc	;wreg free
  2826  0025A6  4A0F               	infsnz	fputs@i^0,f,c
  2827  0025A8  2A10               	incf	(fputs@i+1)^0,f,c
  2828  0025AA                     l2259:
  2829  0025AA  500F               	movf	fputs@i^0,w,c
  2830  0025AC  240A               	addwf	fputs@s^0,w,c
  2831  0025AE  6ED9               	movwf	fsr2l,c
  2832  0025B0  5010               	movf	(fputs@i+1)^0,w,c
  2833  0025B2  200B               	addwfc	(fputs@s+1)^0,w,c
  2834  0025B4  6EDA               	movwf	fsr2h,c
  2835  0025B6  50DF               	movf	indf2,w,c
  2836  0025B8  6E0E               	movwf	fputs@c^0,c
  2837  0025BA  500E               	movf	fputs@c^0,w,c
  2838  0025BC  A4D8               	btfss	status,2,c
  2839  0025BE  EFE3  F012         	goto	u1031
  2840  0025C2  EFE5  F012         	goto	u1030
  2841  0025C6                     u1031:
  2842  0025C6  EFCA  F012         	goto	l2255
  2843  0025CA                     u1030:
  2844  0025CA  0012               	return		;funcret
  2845  0025CC                     __end_of_fputs:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _fputc *****************
  2849 ;; Defined at:
  2850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  c               2    0[COMRAM] int 
  2853 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2854 ;;		 -> sprintf@f(6), 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  2    0[COMRAM] int 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;Total ram usage:        9 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    2
  2873 ;; This function calls:
  2874 ;;		_putch
  2875 ;; This function is called by:
  2876 ;;		_pad
  2877 ;;		_vfpfcnvrt
  2878 ;;		_fputs
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text10
  2883  001DD6                     __ptext10:
  2884                           	callstack 0
  2885  001DD6                     _fputc:
  2886                           	callstack 22
  2887  001DD6  5003               	movf	fputc@fp^0,w,c
  2888  001DD8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2889  001DDA  B4D8               	btfsc	status,2,c
  2890  001DDC  EFF2  F00E         	goto	u991
  2891  001DE0  EFF4  F00E         	goto	u990
  2892  001DE4                     u991:
  2893  001DE4  EFFD  F00E         	goto	l2243
  2894  001DE8                     u990:
  2895  001DE8  5003               	movf	fputc@fp^0,w,c
  2896  001DEA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2897  001DEC  A4D8               	btfss	status,2,c
  2898  001DEE  EFFB  F00E         	goto	u1001
  2899  001DF2  EFFD  F00E         	goto	u1000
  2900  001DF6                     u1001:
  2901  001DF6  EF02  F00F         	goto	l2245
  2902  001DFA                     u1000:
  2903  001DFA                     l2243:
  2904  001DFA  5001               	movf	fputc@c^0,w,c
  2905  001DFC  ECAD  F013         	call	_putch
  2906  001E00  EF4F  F00F         	goto	l1107
  2907  001E04                     l2245:
  2908  001E04  EE20 F004          	lfsr	2,4
  2909  001E08  5003               	movf	fputc@fp^0,w,c
  2910  001E0A  26D9               	addwf	fsr2l,f,c
  2911  001E0C  5004               	movf	(fputc@fp+1)^0,w,c
  2912  001E0E  22DA               	addwfc	fsr2h,f,c
  2913  001E10  50DE               	movf	postinc2,w,c
  2914  001E12  10DE               	iorwf	postinc2,w,c
  2915  001E14  B4D8               	btfsc	status,2,c
  2916  001E16  EF0F  F00F         	goto	u1011
  2917  001E1A  EF11  F00F         	goto	u1010
  2918  001E1E                     u1011:
  2919  001E1E  EF2C  F00F         	goto	l2249
  2920  001E22                     u1010:
  2921  001E22  EE20 F004          	lfsr	2,4
  2922  001E26  5003               	movf	fputc@fp^0,w,c
  2923  001E28  26D9               	addwf	fsr2l,f,c
  2924  001E2A  5004               	movf	(fputc@fp+1)^0,w,c
  2925  001E2C  22DA               	addwfc	fsr2h,f,c
  2926  001E2E  EE10 F002          	lfsr	1,2
  2927  001E32  5003               	movf	fputc@fp^0,w,c
  2928  001E34  26E1               	addwf	fsr1l,f,c
  2929  001E36  5004               	movf	(fputc@fp+1)^0,w,c
  2930  001E38  22E2               	addwfc	fsr1h,f,c
  2931  001E3A  50DE               	movf	postinc2,w,c
  2932  001E3C  5CE6               	subwf	postinc1,w,c
  2933  001E3E  50E6               	movf	postinc1,w,c
  2934  001E40  0A80               	xorlw	128
  2935  001E42  6E09               	movwf	(??_fputc+4)^0,c
  2936  001E44  50DE               	movf	postinc2,w,c
  2937  001E46  0A80               	xorlw	128
  2938  001E48  5809               	subwfb	(??_fputc+4)^0,w,c
  2939  001E4A  B0D8               	btfsc	status,0,c
  2940  001E4C  EF2A  F00F         	goto	u1021
  2941  001E50  EF2C  F00F         	goto	u1020
  2942  001E54                     u1021:
  2943  001E54  EF4F  F00F         	goto	l1107
  2944  001E58                     u1020:
  2945  001E58                     l2249:
  2946  001E58  EE20 F002          	lfsr	2,2
  2947  001E5C  5003               	movf	fputc@fp^0,w,c
  2948  001E5E  26D9               	addwf	fsr2l,f,c
  2949  001E60  5004               	movf	(fputc@fp+1)^0,w,c
  2950  001E62  22DA               	addwfc	fsr2h,f,c
  2951  001E64  CFDE F005          	movff	postinc2,??_fputc
  2952  001E68  CFDD F006          	movff	postdec2,??_fputc+1
  2953  001E6C  C003  FFD9         	movff	fputc@fp,fsr2l
  2954  001E70  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2955  001E74  CFDE F007          	movff	postinc2,??_fputc+2
  2956  001E78  CFDD F008          	movff	postdec2,??_fputc+3
  2957  001E7C  5005               	movf	??_fputc^0,w,c
  2958  001E7E  2407               	addwf	(??_fputc+2)^0,w,c
  2959  001E80  6ED9               	movwf	fsr2l,c
  2960  001E82  5006               	movf	(??_fputc+1)^0,w,c
  2961  001E84  2008               	addwfc	(??_fputc+3)^0,w,c
  2962  001E86  6EDA               	movwf	fsr2h,c
  2963  001E88  C001  FFDF         	movff	fputc@c,indf2
  2964  001E8C  EE20 F002          	lfsr	2,2
  2965  001E90  5003               	movf	fputc@fp^0,w,c
  2966  001E92  26D9               	addwf	fsr2l,f,c
  2967  001E94  5004               	movf	(fputc@fp+1)^0,w,c
  2968  001E96  22DA               	addwfc	fsr2h,f,c
  2969  001E98  2ADE               	incf	postinc2,f,c
  2970  001E9A  0E00               	movlw	0
  2971  001E9C  22DD               	addwfc	postdec2,f,c
  2972  001E9E                     l1107:
  2973  001E9E  0012               	return		;funcret
  2974  001EA0                     __end_of_fputc:
  2975                           	callstack 0
  2976                           
  2977 ;; *************** function _putch *****************
  2978 ;; Defined at:
  2979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  c               1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  c               1    0[COMRAM] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_fputc
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text11
  3008  00275A                     __ptext11:
  3009                           	callstack 0
  3010  00275A                     _putch:
  3011                           	callstack 22
  3012  00275A  0012               	return		;funcret
  3013  00275C                     __end_of_putch:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function ___lomod *****************
  3017 ;; Defined at:
  3018 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  dividend        8    0[COMRAM] unsigned long long 
  3021 ;;  divisor         8    8[COMRAM] unsigned long long 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  counter         1   16[COMRAM] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  8    0[COMRAM] unsigned long long 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:       17 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_utoa
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text12
  3048  001D06                     __ptext12:
  3049                           	callstack 0
  3050  001D06                     ___lomod:
  3051                           	callstack 25
  3052  001D06  5009               	movf	___lomod@divisor^0,w,c
  3053  001D08  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  3054  001D0A  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  3055  001D0C  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  3056  001D0E  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  3057  001D10  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  3058  001D12  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  3059  001D14  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  3060  001D16  B4D8               	btfsc	status,2,c
  3061  001D18  EF90  F00E         	goto	u1091
  3062  001D1C  EF92  F00E         	goto	u1090
  3063  001D20                     u1091:
  3064  001D20  EFDA  F00E         	goto	l737
  3065  001D24                     u1090:
  3066  001D24  0E01               	movlw	1
  3067  001D26  6E11               	movwf	___lomod@counter^0,c
  3068  001D28  EFA0  F00E         	goto	l2305
  3069  001D2C                     l2303:
  3070  001D2C  90D8               	bcf	status,0,c
  3071  001D2E  3609               	rlcf	___lomod@divisor^0,f,c
  3072  001D30  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  3073  001D32  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  3074  001D34  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  3075  001D36  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  3076  001D38  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  3077  001D3A  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  3078  001D3C  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  3079  001D3E  2A11               	incf	___lomod@counter^0,f,c
  3080  001D40                     l2305:
  3081  001D40  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  3082  001D42  EFA5  F00E         	goto	u1101
  3083  001D46  EFA7  F00E         	goto	u1100
  3084  001D4A                     u1101:
  3085  001D4A  EF96  F00E         	goto	l2303
  3086  001D4E                     u1100:
  3087  001D4E                     l2307:
  3088  001D4E  5009               	movf	___lomod@divisor^0,w,c
  3089  001D50  5C01               	subwf	___lomod@dividend^0,w,c
  3090  001D52  500A               	movf	(___lomod@divisor+1)^0,w,c
  3091  001D54  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  3092  001D56  500B               	movf	(___lomod@divisor+2)^0,w,c
  3093  001D58  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  3094  001D5A  500C               	movf	(___lomod@divisor+3)^0,w,c
  3095  001D5C  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  3096  001D5E  500D               	movf	(___lomod@divisor+4)^0,w,c
  3097  001D60  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  3098  001D62  500E               	movf	(___lomod@divisor+5)^0,w,c
  3099  001D64  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  3100  001D66  500F               	movf	(___lomod@divisor+6)^0,w,c
  3101  001D68  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  3102  001D6A  5010               	movf	(___lomod@divisor+7)^0,w,c
  3103  001D6C  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  3104  001D6E  A0D8               	btfss	status,0,c
  3105  001D70  EFBC  F00E         	goto	u1111
  3106  001D74  EFBE  F00E         	goto	u1110
  3107  001D78                     u1111:
  3108  001D78  EFCE  F00E         	goto	l2311
  3109  001D7C                     u1110:
  3110  001D7C  5009               	movf	___lomod@divisor^0,w,c
  3111  001D7E  5E01               	subwf	___lomod@dividend^0,f,c
  3112  001D80  500A               	movf	(___lomod@divisor+1)^0,w,c
  3113  001D82  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  3114  001D84  500B               	movf	(___lomod@divisor+2)^0,w,c
  3115  001D86  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  3116  001D88  500C               	movf	(___lomod@divisor+3)^0,w,c
  3117  001D8A  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  3118  001D8C  500D               	movf	(___lomod@divisor+4)^0,w,c
  3119  001D8E  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  3120  001D90  500E               	movf	(___lomod@divisor+5)^0,w,c
  3121  001D92  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  3122  001D94  500F               	movf	(___lomod@divisor+6)^0,w,c
  3123  001D96  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  3124  001D98  5010               	movf	(___lomod@divisor+7)^0,w,c
  3125  001D9A  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  3126  001D9C                     l2311:
  3127  001D9C  90D8               	bcf	status,0,c
  3128  001D9E  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  3129  001DA0  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  3130  001DA2  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  3131  001DA4  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  3132  001DA6  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  3133  001DA8  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  3134  001DAA  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  3135  001DAC  3209               	rrcf	___lomod@divisor^0,f,c
  3136  001DAE  2E11               	decfsz	___lomod@counter^0,f,c
  3137  001DB0  EFA7  F00E         	goto	l2307
  3138  001DB4                     l737:
  3139  001DB4  C001  F001         	movff	___lomod@dividend,?___lomod
  3140  001DB8  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  3141  001DBC  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  3142  001DC0  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  3143  001DC4  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  3144  001DC8  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  3145  001DCC  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  3146  001DD0  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  3147  001DD4  0012               	return		;funcret
  3148  001DD6                     __end_of___lomod:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function ___lodiv *****************
  3152 ;; Defined at:
  3153 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  dividend        8    0[COMRAM] unsigned long long 
  3156 ;;  divisor         8    8[COMRAM] unsigned long long 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  quotient        8   16[COMRAM] unsigned long long 
  3159 ;;  counter         1   24[COMRAM] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  8    0[COMRAM] unsigned long long 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:       25 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    1
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_utoa
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text13
  3184  001B30                     __ptext13:
  3185                           	callstack 0
  3186  001B30                     ___lodiv:
  3187                           	callstack 25
  3188  001B30  EE20  F011         	lfsr	2,___lodiv@quotient
  3189  001B34  0E07               	movlw	7
  3190  001B36                     u1051:
  3191  001B36  6ADE               	clrf	postinc2,c
  3192  001B38  06E8               	decf	wreg,f,c
  3193  001B3A  E2FD               	bc	u1051
  3194  001B3C  5009               	movf	___lodiv@divisor^0,w,c
  3195  001B3E  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  3196  001B40  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  3197  001B42  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  3198  001B44  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  3199  001B46  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  3200  001B48  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  3201  001B4A  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  3202  001B4C  B4D8               	btfsc	status,2,c
  3203  001B4E  EFAB  F00D         	goto	u1061
  3204  001B52  EFAD  F00D         	goto	u1060
  3205  001B56                     u1061:
  3206  001B56  EFFF  F00D         	goto	l727
  3207  001B5A                     u1060:
  3208  001B5A  0E01               	movlw	1
  3209  001B5C  6E19               	movwf	___lodiv@counter^0,c
  3210  001B5E  EFBB  F00D         	goto	l2285
  3211  001B62                     l2283:
  3212  001B62  90D8               	bcf	status,0,c
  3213  001B64  3609               	rlcf	___lodiv@divisor^0,f,c
  3214  001B66  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  3215  001B68  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  3216  001B6A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  3217  001B6C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  3218  001B6E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  3219  001B70  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  3220  001B72  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  3221  001B74  2A19               	incf	___lodiv@counter^0,f,c
  3222  001B76                     l2285:
  3223  001B76  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  3224  001B78  EFC0  F00D         	goto	u1071
  3225  001B7C  EFC2  F00D         	goto	u1070
  3226  001B80                     u1071:
  3227  001B80  EFB1  F00D         	goto	l2283
  3228  001B84                     u1070:
  3229  001B84                     l2287:
  3230  001B84  90D8               	bcf	status,0,c
  3231  001B86  3611               	rlcf	___lodiv@quotient^0,f,c
  3232  001B88  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  3233  001B8A  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  3234  001B8C  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  3235  001B8E  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  3236  001B90  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  3237  001B92  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  3238  001B94  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  3239  001B96  5009               	movf	___lodiv@divisor^0,w,c
  3240  001B98  5C01               	subwf	___lodiv@dividend^0,w,c
  3241  001B9A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3242  001B9C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  3243  001B9E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3244  001BA0  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  3245  001BA2  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3246  001BA4  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  3247  001BA6  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3248  001BA8  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  3249  001BAA  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3250  001BAC  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  3251  001BAE  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3252  001BB0  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  3253  001BB2  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3254  001BB4  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  3255  001BB6  A0D8               	btfss	status,0,c
  3256  001BB8  EFE0  F00D         	goto	u1081
  3257  001BBC  EFE2  F00D         	goto	u1080
  3258  001BC0                     u1081:
  3259  001BC0  EFF3  F00D         	goto	l2295
  3260  001BC4                     u1080:
  3261  001BC4  5009               	movf	___lodiv@divisor^0,w,c
  3262  001BC6  5E01               	subwf	___lodiv@dividend^0,f,c
  3263  001BC8  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3264  001BCA  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  3265  001BCC  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3266  001BCE  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  3267  001BD0  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3268  001BD2  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  3269  001BD4  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3270  001BD6  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  3271  001BD8  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3272  001BDA  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  3273  001BDC  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3274  001BDE  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  3275  001BE0  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3276  001BE2  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  3277  001BE4  8011               	bsf	___lodiv@quotient^0,0,c
  3278  001BE6                     l2295:
  3279  001BE6  90D8               	bcf	status,0,c
  3280  001BE8  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  3281  001BEA  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  3282  001BEC  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  3283  001BEE  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  3284  001BF0  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  3285  001BF2  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  3286  001BF4  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  3287  001BF6  3209               	rrcf	___lodiv@divisor^0,f,c
  3288  001BF8  2E19               	decfsz	___lodiv@counter^0,f,c
  3289  001BFA  EFC2  F00D         	goto	l2287
  3290  001BFE                     l727:
  3291  001BFE  C011  F001         	movff	___lodiv@quotient,?___lodiv
  3292  001C02  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  3293  001C06  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  3294  001C0A  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  3295  001C0E  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  3296  001C12  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  3297  001C16  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  3298  001C1A  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  3299  001C1E  0012               	return		;funcret
  3300  001C20                     __end_of___lodiv:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _atoi *****************
  3304 ;; Defined at:
  3305 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3308 ;;		 -> STR_1(20), 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  n               2   20[COMRAM] int 
  3311 ;;  neg             2   13[COMRAM] int 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  2    7[COMRAM] int 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;Total ram usage:       15 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    2
  3328 ;; This function calls:
  3329 ;;		___wmul
  3330 ;;		_isdigit
  3331 ;;		_isspace
  3332 ;; This function is called by:
  3333 ;;		_vfpfcnvrt
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text14
  3338  0019A0                     __ptext14:
  3339                           	callstack 0
  3340  0019A0                     _atoi:
  3341                           	callstack 25
  3342  0019A0  0E00               	movlw	0
  3343  0019A2  6E16               	movwf	(atoi@n+1)^0,c
  3344  0019A4  0E00               	movlw	0
  3345  0019A6  6E15               	movwf	atoi@n^0,c
  3346  0019A8  0E00               	movlw	0
  3347  0019AA  6E0F               	movwf	(atoi@neg+1)^0,c
  3348  0019AC  0E00               	movlw	0
  3349  0019AE  6E0E               	movwf	atoi@neg^0,c
  3350  0019B0  EFDC  F00C         	goto	l2393
  3351  0019B4                     l2391:
  3352  0019B4  4A08               	infsnz	atoi@s^0,f,c
  3353  0019B6  2A09               	incf	(atoi@s+1)^0,f,c
  3354  0019B8                     l2393:
  3355  0019B8  0E01               	movlw	1
  3356  0019BA  6E14               	movwf	_atoi$1178^0,c
  3357  0019BC  C008  FFF6         	movff	atoi@s,tblptrl
  3358  0019C0  C009  FFF7         	movff	atoi@s+1,tblptrh
  3359  0019C4                     	if	0	;tblptru may be non-zero
  3360  0019C4                     	endif
  3361  0019C4                     	if	0	;tblptru may be non-zero
  3362  0019C4                     	endif
  3363  0019C4  0008               	tblrd		*
  3364  0019C6  50F5               	movf	tablat,w,c
  3365  0019C8  0A20               	xorlw	32
  3366  0019CA  B4D8               	btfsc	status,2,c
  3367  0019CC  EFEA  F00C         	goto	u1271
  3368  0019D0  EFEC  F00C         	goto	u1270
  3369  0019D4                     u1271:
  3370  0019D4  EF09  F00D         	goto	l2401
  3371  0019D8                     u1270:
  3372  0019D8  0EF7               	movlw	247
  3373  0019DA  6E0A               	movwf	??_atoi^0,c
  3374  0019DC  0EFF               	movlw	255
  3375  0019DE  6E0B               	movwf	(??_atoi+1)^0,c
  3376  0019E0  C008  FFF6         	movff	atoi@s,tblptrl
  3377  0019E4  C009  FFF7         	movff	atoi@s+1,tblptrh
  3378  0019E8                     	if	0	;tblptru may be non-zero
  3379  0019E8                     	endif
  3380  0019E8                     	if	0	;tblptru may be non-zero
  3381  0019E8                     	endif
  3382  0019E8  0008               	tblrd		*
  3383  0019EA  50F5               	movf	tablat,w,c
  3384  0019EC  6E0C               	movwf	(??_atoi+2)^0,c
  3385  0019EE  6A0D               	clrf	(??_atoi+3)^0,c
  3386  0019F0  500A               	movf	??_atoi^0,w,c
  3387  0019F2  260C               	addwf	(??_atoi+2)^0,f,c
  3388  0019F4  500B               	movf	(??_atoi+1)^0,w,c
  3389  0019F6  220D               	addwfc	(??_atoi+3)^0,f,c
  3390  0019F8  500D               	movf	(??_atoi+3)^0,w,c
  3391  0019FA  E109               	bnz	u1280
  3392  0019FC  0E05               	movlw	5
  3393  0019FE  5C0C               	subwf	(??_atoi+2)^0,w,c
  3394  001A00  A0D8               	btfss	status,0,c
  3395  001A02  EF05  F00D         	goto	u1281
  3396  001A06  EF07  F00D         	goto	u1280
  3397  001A0A                     u1281:
  3398  001A0A  EF09  F00D         	goto	l2401
  3399  001A0E                     u1280:
  3400  001A0E  0E00               	movlw	0
  3401  001A10  6E14               	movwf	_atoi$1178^0,c
  3402  001A12                     l2401:
  3403  001A12  C014  F010         	movff	_atoi$1178,_atoi$1177
  3404  001A16  6A11               	clrf	(_atoi$1177+1)^0,c
  3405  001A18  5010               	movf	_atoi$1177^0,w,c
  3406  001A1A  1011               	iorwf	(_atoi$1177+1)^0,w,c
  3407  001A1C  A4D8               	btfss	status,2,c
  3408  001A1E  EF13  F00D         	goto	u1291
  3409  001A22  EF15  F00D         	goto	u1290
  3410  001A26                     u1291:
  3411  001A26  EFDA  F00C         	goto	l2391
  3412  001A2A                     u1290:
  3413  001A2A  EF1F  F00D         	goto	l2411
  3414  001A2E                     l2407:
  3415  001A2E  0E00               	movlw	0
  3416  001A30  6E0F               	movwf	(atoi@neg+1)^0,c
  3417  001A32  0E01               	movlw	1
  3418  001A34  6E0E               	movwf	atoi@neg^0,c
  3419  001A36                     l2409:
  3420  001A36  4A08               	infsnz	atoi@s^0,f,c
  3421  001A38  2A09               	incf	(atoi@s+1)^0,f,c
  3422  001A3A  EF54  F00D         	goto	l2417
  3423  001A3E                     l2411:
  3424  001A3E  C008  FFF6         	movff	atoi@s,tblptrl
  3425  001A42  C009  FFF7         	movff	atoi@s+1,tblptrh
  3426  001A46                     	if	0	;tblptru may be non-zero
  3427  001A46                     	endif
  3428  001A46                     	if	0	;tblptru may be non-zero
  3429  001A46                     	endif
  3430  001A46  0008               	tblrd		*
  3431  001A48  50F5               	movf	tablat,w,c
  3432  001A4A  6E0A               	movwf	??_atoi^0,c
  3433  001A4C  6A0B               	clrf	(??_atoi+1)^0,c
  3434                           
  3435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3436                           ; Switch size 1, requested type "simple"
  3437                           ; Number of cases is 1, Range of values is 0 to 0
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            4     3 (average)
  3441                           ;	Chosen strategy is simple_byte
  3442  001A4E  500B               	movf	(??_atoi+1)^0,w,c
  3443  001A50  0A00               	xorlw	0	; case 0
  3444  001A52  B4D8               	btfsc	status,2,c
  3445  001A54  EF2E  F00D         	goto	l3317
  3446  001A58  EF54  F00D         	goto	l2417
  3447  001A5C                     l3317:
  3448                           
  3449                           ; Switch size 1, requested type "simple"
  3450                           ; Number of cases is 2, Range of values is 43 to 45
  3451                           ; switch strategies available:
  3452                           ; Name         Instructions Cycles
  3453                           ; simple_byte            7     4 (average)
  3454                           ;	Chosen strategy is simple_byte
  3455  001A5C  500A               	movf	??_atoi^0,w,c
  3456  001A5E  0A2B               	xorlw	43	; case 43
  3457  001A60  B4D8               	btfsc	status,2,c
  3458  001A62  EF1B  F00D         	goto	l2409
  3459  001A66  0A06               	xorlw	6	; case 45
  3460  001A68  B4D8               	btfsc	status,2,c
  3461  001A6A  EF17  F00D         	goto	l2407
  3462  001A6E  EF54  F00D         	goto	l2417
  3463  001A72                     l2413:
  3464  001A72  C015  F001         	movff	atoi@n,___wmul@multiplier
  3465  001A76  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3466  001A7A  0E00               	movlw	0
  3467  001A7C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3468  001A7E  0E0A               	movlw	10
  3469  001A80  6E03               	movwf	___wmul@multiplicand^0,c
  3470  001A82  EC7B  F013         	call	___wmul	;wreg free
  3471  001A86  C008  FFF6         	movff	atoi@s,tblptrl
  3472  001A8A  C009  FFF7         	movff	atoi@s+1,tblptrh
  3473  001A8E                     	if	0	;tblptru may be non-zero
  3474  001A8E                     	endif
  3475  001A8E                     	if	0	;tblptru may be non-zero
  3476  001A8E                     	endif
  3477  001A8E  0008               	tblrd		*
  3478  001A90  50F5               	movf	tablat,w,c
  3479  001A92  5E01               	subwf	?___wmul^0,f,c
  3480  001A94  0E00               	movlw	0
  3481  001A96  5A02               	subwfb	(?___wmul+1)^0,f,c
  3482  001A98  0E30               	movlw	48
  3483  001A9A  2401               	addwf	?___wmul^0,w,c
  3484  001A9C  6E15               	movwf	atoi@n^0,c
  3485  001A9E  0E00               	movlw	0
  3486  001AA0  2002               	addwfc	(?___wmul+1)^0,w,c
  3487  001AA2  6E16               	movwf	(atoi@n+1)^0,c
  3488  001AA4  EF1B  F00D         	goto	l2409
  3489  001AA8                     l2417:
  3490  001AA8  0ED0               	movlw	208
  3491  001AAA  6E0A               	movwf	??_atoi^0,c
  3492  001AAC  0EFF               	movlw	255
  3493  001AAE  6E0B               	movwf	(??_atoi+1)^0,c
  3494  001AB0  C008  FFF6         	movff	atoi@s,tblptrl
  3495  001AB4  C009  FFF7         	movff	atoi@s+1,tblptrh
  3496  001AB8                     	if	0	;tblptru may be non-zero
  3497  001AB8                     	endif
  3498  001AB8                     	if	0	;tblptru may be non-zero
  3499  001AB8                     	endif
  3500  001AB8  0008               	tblrd		*
  3501  001ABA  50F5               	movf	tablat,w,c
  3502  001ABC  6E0C               	movwf	(??_atoi+2)^0,c
  3503  001ABE  6A0D               	clrf	(??_atoi+3)^0,c
  3504  001AC0  500A               	movf	??_atoi^0,w,c
  3505  001AC2  260C               	addwf	(??_atoi+2)^0,f,c
  3506  001AC4  500B               	movf	(??_atoi+1)^0,w,c
  3507  001AC6  220D               	addwfc	(??_atoi+3)^0,f,c
  3508  001AC8  500D               	movf	(??_atoi+3)^0,w,c
  3509  001ACA  E10A               	bnz	u1300
  3510  001ACC  0E0A               	movlw	10
  3511  001ACE  5C0C               	subwf	(??_atoi+2)^0,w,c
  3512  001AD0  A0D8               	btfss	status,0,c
  3513  001AD2  EF6D  F00D         	goto	u1301
  3514  001AD6  EF70  F00D         	goto	u1300
  3515  001ADA                     u1301:
  3516  001ADA  0E01               	movlw	1
  3517  001ADC  EF71  F00D         	goto	u1310
  3518  001AE0                     u1300:
  3519  001AE0  0E00               	movlw	0
  3520  001AE2                     u1310:
  3521  001AE2  6E12               	movwf	_atoi$1179^0,c
  3522  001AE4  6A13               	clrf	(_atoi$1179+1)^0,c
  3523  001AE6  5012               	movf	_atoi$1179^0,w,c
  3524  001AE8  1013               	iorwf	(_atoi$1179+1)^0,w,c
  3525  001AEA  A4D8               	btfss	status,2,c
  3526  001AEC  EF7A  F00D         	goto	u1321
  3527  001AF0  EF7C  F00D         	goto	u1320
  3528  001AF4                     u1321:
  3529  001AF4  EF39  F00D         	goto	l2413
  3530  001AF8                     u1320:
  3531  001AF8  500E               	movf	atoi@neg^0,w,c
  3532  001AFA  100F               	iorwf	(atoi@neg+1)^0,w,c
  3533  001AFC  A4D8               	btfss	status,2,c
  3534  001AFE  EF83  F00D         	goto	u1331
  3535  001B02  EF85  F00D         	goto	u1330
  3536  001B06                     u1331:
  3537  001B06  EF93  F00D         	goto	l1078
  3538  001B0A                     u1330:
  3539  001B0A  C015  F00A         	movff	atoi@n,??_atoi
  3540  001B0E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  3541  001B12  1E0A               	comf	??_atoi^0,f,c
  3542  001B14  1E0B               	comf	(??_atoi+1)^0,f,c
  3543  001B16  4A0A               	infsnz	??_atoi^0,f,c
  3544  001B18  2A0B               	incf	(??_atoi+1)^0,f,c
  3545  001B1A  C00A  F008         	movff	??_atoi,?_atoi
  3546  001B1E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3547  001B22  EF97  F00D         	goto	l1081
  3548  001B26                     l1078:
  3549  001B26  C015  F008         	movff	atoi@n,?_atoi
  3550  001B2A  C016  F009         	movff	atoi@n+1,?_atoi+1
  3551  001B2E                     l1081:
  3552  001B2E  0012               	return		;funcret
  3553  001B30                     __end_of_atoi:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _isspace *****************
  3557 ;; Defined at:
  3558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  c               2    0[COMRAM] int 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  2    0[COMRAM] int 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;Total ram usage:        7 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_atoi
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text15
  3587  00244C                     __ptext15:
  3588                           	callstack 0
  3589  00244C                     _isspace:
  3590                           	callstack 25
  3591  00244C  0E01               	movlw	1
  3592  00244E  6E07               	movwf	_isspace$1195^0,c
  3593  002450  0E20               	movlw	32
  3594  002452  1801               	xorwf	isspace@c^0,w,c
  3595  002454  1002               	iorwf	(isspace@c+1)^0,w,c
  3596  002456  B4D8               	btfsc	status,2,c
  3597  002458  EF30  F012         	goto	u1181
  3598  00245C  EF32  F012         	goto	u1180
  3599  002460                     u1181:
  3600  002460  EF4B  F012         	goto	l2349
  3601  002464                     u1180:
  3602  002464  0EF7               	movlw	247
  3603  002466  6E03               	movwf	??_isspace^0,c
  3604  002468  0EFF               	movlw	255
  3605  00246A  6E04               	movwf	(??_isspace+1)^0,c
  3606  00246C  C001  F005         	movff	isspace@c,??_isspace+2
  3607  002470  C002  F006         	movff	isspace@c+1,??_isspace+3
  3608  002474  5003               	movf	??_isspace^0,w,c
  3609  002476  2605               	addwf	(??_isspace+2)^0,f,c
  3610  002478  5004               	movf	(??_isspace+1)^0,w,c
  3611  00247A  2206               	addwfc	(??_isspace+3)^0,f,c
  3612  00247C  5006               	movf	(??_isspace+3)^0,w,c
  3613  00247E  E109               	bnz	u1190
  3614  002480  0E05               	movlw	5
  3615  002482  5C05               	subwf	(??_isspace+2)^0,w,c
  3616  002484  A0D8               	btfss	status,0,c
  3617  002486  EF47  F012         	goto	u1191
  3618  00248A  EF49  F012         	goto	u1190
  3619  00248E                     u1191:
  3620  00248E  EF4B  F012         	goto	l2349
  3621  002492                     u1190:
  3622  002492  0E00               	movlw	0
  3623  002494  6E07               	movwf	_isspace$1195^0,c
  3624  002496                     l2349:
  3625  002496  C007  F001         	movff	_isspace$1195,?_isspace
  3626  00249A  6A02               	clrf	(?_isspace+1)^0,c
  3627  00249C  0012               	return		;funcret
  3628  00249E                     __end_of_isspace:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _isdigit *****************
  3632 ;; Defined at:
  3633 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  c               2    0[COMRAM] int 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2    0[COMRAM] int 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;Total ram usage:        6 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_vfpfcnvrt
  3658 ;;		_atoi
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text16
  3663  00260A                     __ptext16:
  3664                           	callstack 0
  3665  00260A                     _isdigit:
  3666                           	callstack 26
  3667  00260A  0ED0               	movlw	208
  3668  00260C  6E03               	movwf	??_isdigit^0,c
  3669  00260E  0EFF               	movlw	255
  3670  002610  6E04               	movwf	(??_isdigit+1)^0,c
  3671  002612  C001  F005         	movff	isdigit@c,??_isdigit+2
  3672  002616  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3673  00261A  5003               	movf	??_isdigit^0,w,c
  3674  00261C  2605               	addwf	(??_isdigit+2)^0,f,c
  3675  00261E  5004               	movf	(??_isdigit+1)^0,w,c
  3676  002620  2206               	addwfc	(??_isdigit+3)^0,f,c
  3677  002622  5006               	movf	(??_isdigit+3)^0,w,c
  3678  002624  E10A               	bnz	u1160
  3679  002626  0E0A               	movlw	10
  3680  002628  5C05               	subwf	(??_isdigit+2)^0,w,c
  3681  00262A  A0D8               	btfss	status,0,c
  3682  00262C  EF1A  F013         	goto	u1161
  3683  002630  EF1D  F013         	goto	u1160
  3684  002634                     u1161:
  3685  002634  0E01               	movlw	1
  3686  002636  EF1E  F013         	goto	u1170
  3687  00263A                     u1160:
  3688  00263A  0E00               	movlw	0
  3689  00263C                     u1170:
  3690  00263C  6E01               	movwf	?_isdigit^0,c
  3691  00263E  6A02               	clrf	(?_isdigit+1)^0,c
  3692  002640  0012               	return		;funcret
  3693  002642                     __end_of_isdigit:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function ___wmul *****************
  3697 ;; Defined at:
  3698 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  multiplier      2    0[COMRAM] unsigned int 
  3701 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  product         2    4[COMRAM] unsigned int 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2    0[COMRAM] unsigned int 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, prodl, prodh
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;Total ram usage:        6 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_atoi
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text17
  3728  0026F6                     __ptext17:
  3729                           	callstack 0
  3730  0026F6                     ___wmul:
  3731                           	callstack 25
  3732  0026F6  5001               	movf	___wmul@multiplier^0,w,c
  3733  0026F8  0203               	mulwf	___wmul@multiplicand^0,c
  3734  0026FA  CFF3 F005          	movff	prodl,___wmul@product
  3735  0026FE  CFF4 F006          	movff	prodh,___wmul@product+1
  3736  002702  5001               	movf	___wmul@multiplier^0,w,c
  3737  002704  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3738  002706  50F3               	movf	243,w,c
  3739  002708  2606               	addwf	(___wmul@product+1)^0,f,c
  3740  00270A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3741  00270C  0203               	mulwf	___wmul@multiplicand^0,c
  3742  00270E  50F3               	movf	243,w,c
  3743  002710  2606               	addwf	(___wmul@product+1)^0,f,c
  3744  002712  C005  F001         	movff	___wmul@product,?___wmul
  3745  002716  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3746  00271A  0012               	return		;funcret
  3747  00271C                     __end_of___wmul:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _hex_to_bit_string *****************
  3751 ;; Defined at:
  3752 ;;		line 317 in file "ece376_hw9_ccp_capt.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  hex_val         1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  hex_val         1    4[COMRAM] unsigned char 
  3757 ;;  i               1    7[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2    0[COMRAM] PTR unsigned char 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;Total ram usage:        8 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    1
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_main
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text18
  3782  002220                     __ptext18:
  3783                           	callstack 0
  3784  002220                     _hex_to_bit_string:
  3785                           	callstack 29
  3786                           
  3787                           ;incstack = 0
  3788                           ;hex_to_bit_string@hex_val stored from wreg
  3789  002220  6E05               	movwf	hex_to_bit_string@hex_val^0,c
  3790  002222                     
  3791                           ;ece376_hw9_ccp_capt.c: 319:     static char bit_string[9];;ece376_hw9_ccp_capt.c: 321: 
      +                              for(uint8_t i=0; i<8; i++){
  3792  002222  0E00               	movlw	0
  3793  002224  6E08               	movwf	hex_to_bit_string@i^0,c
  3794  002226                     l2751:
  3795                           
  3796                           ;ece376_hw9_ccp_capt.c: 322:         bit_string[i] = (hex_val & (0x1 << (7-i))) ? '1' : 
      +                          '0';
  3797  002226  5008               	movf	hex_to_bit_string@i^0,w,c
  3798  002228  0807               	sublw	7
  3799  00222A  6E03               	movwf	??_hex_to_bit_string^0,c
  3800  00222C  0E01               	movlw	1
  3801  00222E  6E04               	movwf	(??_hex_to_bit_string+1)^0,c
  3802  002230  2A03               	incf	??_hex_to_bit_string^0,f,c
  3803  002232  EF1D  F011         	goto	u1564
  3804  002236                     u1565:
  3805  002236  90D8               	bcf	status,0,c
  3806  002238  3604               	rlcf	(??_hex_to_bit_string+1)^0,f,c
  3807  00223A                     u1564:
  3808  00223A  2E03               	decfsz	??_hex_to_bit_string^0,f,c
  3809  00223C  EF1B  F011         	goto	u1565
  3810  002240  5004               	movf	(??_hex_to_bit_string+1)^0,w,c
  3811  002242  1405               	andwf	hex_to_bit_string@hex_val^0,w,c
  3812  002244  0900               	iorlw	0
  3813  002246  A4D8               	btfss	status,2,c
  3814  002248  EF28  F011         	goto	u1571
  3815  00224C  EF2A  F011         	goto	u1570
  3816  002250                     u1571:
  3817  002250  EF30  F011         	goto	l2755
  3818  002254                     u1570:
  3819  002254  0E00               	movlw	0
  3820  002256  6E07               	movwf	(_hex_to_bit_string$630+1)^0,c
  3821  002258  0E30               	movlw	48
  3822  00225A  6E06               	movwf	_hex_to_bit_string$630^0,c
  3823  00225C  EF34  F011         	goto	l2757
  3824  002260                     l2755:
  3825  002260  0E00               	movlw	0
  3826  002262  6E07               	movwf	(_hex_to_bit_string$630+1)^0,c
  3827  002264  0E31               	movlw	49
  3828  002266  6E06               	movwf	_hex_to_bit_string$630^0,c
  3829  002268                     l2757:
  3830  002268  0ECC               	movlw	low hex_to_bit_string@bit_string
  3831  00226A  2408               	addwf	hex_to_bit_string@i^0,w,c
  3832  00226C  6ED9               	movwf	fsr2l,c
  3833  00226E  6ADA               	clrf	fsr2h,c
  3834  002270  0E00               	movlw	high hex_to_bit_string@bit_string
  3835  002272  22DA               	addwfc	fsr2h,f,c
  3836  002274  C006  FFDF         	movff	_hex_to_bit_string$630,indf2
  3837  002278                     
  3838                           ;ece376_hw9_ccp_capt.c: 323:     }
  3839  002278  2A08               	incf	hex_to_bit_string@i^0,f,c
  3840  00227A  0E07               	movlw	7
  3841  00227C  6408               	cpfsgt	hex_to_bit_string@i^0,c
  3842  00227E  EF43  F011         	goto	u1581
  3843  002282  EF45  F011         	goto	u1580
  3844  002286                     u1581:
  3845  002286  EF13  F011         	goto	l2751
  3846  00228A                     u1580:
  3847  00228A                     
  3848                           ;ece376_hw9_ccp_capt.c: 324:     bit_string[8] = '\0';
  3849  00228A  0E00               	movlw	0
  3850  00228C  0100               	movlb	0	; () banked
  3851  00228E  6FD4               	movwf	(hex_to_bit_string@bit_string+8)& (0+255),b
  3852  002290                     
  3853                           ; BSR set to: 0
  3854                           ;ece376_hw9_ccp_capt.c: 326:     return bit_string;
  3855  002290  0ECC               	movlw	low hex_to_bit_string@bit_string
  3856  002292  6E01               	movwf	?_hex_to_bit_string^0,c
  3857  002294  0E00               	movlw	high hex_to_bit_string@bit_string
  3858  002296  6E02               	movwf	(?_hex_to_bit_string+1)^0,c
  3859  002298                     
  3860                           ; BSR set to: 0
  3861  002298  0012               	return		;funcret
  3862  00229A                     __end_of_hex_to_bit_string:
  3863                           	callstack 0
  3864                           
  3865 ;; *************** function ___lwdiv *****************
  3866 ;; Defined at:
  3867 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  dividend        2    9[COMRAM] unsigned int 
  3870 ;;  divisor         2   11[COMRAM] unsigned int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  quotient        2   13[COMRAM] unsigned int 
  3873 ;;  counter         1   15[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    9[COMRAM] unsigned int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        7 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text19
  3898  00229A                     __ptext19:
  3899                           	callstack 0
  3900  00229A                     ___lwdiv:
  3901                           	callstack 29
  3902  00229A  0E00               	movlw	0
  3903  00229C  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  3904  00229E  0E00               	movlw	0
  3905  0022A0  6E0E               	movwf	___lwdiv@quotient^0,c
  3906  0022A2  500C               	movf	___lwdiv@divisor^0,w,c
  3907  0022A4  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3908  0022A6  B4D8               	btfsc	status,2,c
  3909  0022A8  EF58  F011         	goto	u1651
  3910  0022AC  EF5A  F011         	goto	u1650
  3911  0022B0                     u1651:
  3912  0022B0  EF82  F011         	goto	l780
  3913  0022B4                     u1650:
  3914  0022B4  0E01               	movlw	1
  3915  0022B6  6E10               	movwf	___lwdiv@counter^0,c
  3916  0022B8  EF62  F011         	goto	l2831
  3917  0022BC                     l2829:
  3918  0022BC  90D8               	bcf	status,0,c
  3919  0022BE  360C               	rlcf	___lwdiv@divisor^0,f,c
  3920  0022C0  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3921  0022C2  2A10               	incf	___lwdiv@counter^0,f,c
  3922  0022C4                     l2831:
  3923  0022C4  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  3924  0022C6  EF67  F011         	goto	u1661
  3925  0022CA  EF69  F011         	goto	u1660
  3926  0022CE                     u1661:
  3927  0022CE  EF5E  F011         	goto	l2829
  3928  0022D2                     u1660:
  3929  0022D2                     l2833:
  3930  0022D2  90D8               	bcf	status,0,c
  3931  0022D4  360E               	rlcf	___lwdiv@quotient^0,f,c
  3932  0022D6  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3933  0022D8  500C               	movf	___lwdiv@divisor^0,w,c
  3934  0022DA  5C0A               	subwf	___lwdiv@dividend^0,w,c
  3935  0022DC  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3936  0022DE  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3937  0022E0  A0D8               	btfss	status,0,c
  3938  0022E2  EF75  F011         	goto	u1671
  3939  0022E6  EF77  F011         	goto	u1670
  3940  0022EA                     u1671:
  3941  0022EA  EF7C  F011         	goto	l2841
  3942  0022EE                     u1670:
  3943  0022EE  500C               	movf	___lwdiv@divisor^0,w,c
  3944  0022F0  5E0A               	subwf	___lwdiv@dividend^0,f,c
  3945  0022F2  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3946  0022F4  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3947  0022F6  800E               	bsf	___lwdiv@quotient^0,0,c
  3948  0022F8                     l2841:
  3949  0022F8  90D8               	bcf	status,0,c
  3950  0022FA  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3951  0022FC  320C               	rrcf	___lwdiv@divisor^0,f,c
  3952  0022FE  2E10               	decfsz	___lwdiv@counter^0,f,c
  3953  002300  EF69  F011         	goto	l2833
  3954  002304                     l780:
  3955  002304  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  3956  002308  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3957  00230C  0012               	return		;funcret
  3958  00230E                     __end_of___lwdiv:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function ___llmod *****************
  3962 ;; Defined at:
  3963 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\llmod.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  dividend        4    0[COMRAM] unsigned long 
  3966 ;;  divisor         4    4[COMRAM] unsigned long 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  counter         1    8[COMRAM] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  4    0[COMRAM] unsigned long 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:        9 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    1
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_main
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text20
  3993  002198                     __ptext20:
  3994                           	callstack 0
  3995  002198                     ___llmod:
  3996                           	callstack 29
  3997  002198  5005               	movf	___llmod@divisor^0,w,c
  3998  00219A  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3999  00219C  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  4000  00219E  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  4001  0021A0  B4D8               	btfsc	status,2,c
  4002  0021A2  EFD5  F010         	goto	u1621
  4003  0021A6  EFD7  F010         	goto	u1620
  4004  0021AA                     u1621:
  4005  0021AA  EF07  F011         	goto	l709
  4006  0021AE                     u1620:
  4007  0021AE  0E01               	movlw	1
  4008  0021B0  6E09               	movwf	___llmod@counter^0,c
  4009  0021B2  EFE1  F010         	goto	l2813
  4010  0021B6                     l2811:
  4011  0021B6  90D8               	bcf	status,0,c
  4012  0021B8  3605               	rlcf	___llmod@divisor^0,f,c
  4013  0021BA  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  4014  0021BC  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  4015  0021BE  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  4016  0021C0  2A09               	incf	___llmod@counter^0,f,c
  4017  0021C2                     l2813:
  4018  0021C2  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  4019  0021C4  EFE6  F010         	goto	u1631
  4020  0021C8  EFE8  F010         	goto	u1630
  4021  0021CC                     u1631:
  4022  0021CC  EFDB  F010         	goto	l2811
  4023  0021D0                     u1630:
  4024  0021D0                     l2815:
  4025  0021D0  5005               	movf	___llmod@divisor^0,w,c
  4026  0021D2  5C01               	subwf	___llmod@dividend^0,w,c
  4027  0021D4  5006               	movf	(___llmod@divisor+1)^0,w,c
  4028  0021D6  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  4029  0021D8  5007               	movf	(___llmod@divisor+2)^0,w,c
  4030  0021DA  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  4031  0021DC  5008               	movf	(___llmod@divisor+3)^0,w,c
  4032  0021DE  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  4033  0021E0  A0D8               	btfss	status,0,c
  4034  0021E2  EFF5  F010         	goto	u1641
  4035  0021E6  EFF7  F010         	goto	u1640
  4036  0021EA                     u1641:
  4037  0021EA  EFFF  F010         	goto	l2819
  4038  0021EE                     u1640:
  4039  0021EE  5005               	movf	___llmod@divisor^0,w,c
  4040  0021F0  5E01               	subwf	___llmod@dividend^0,f,c
  4041  0021F2  5006               	movf	(___llmod@divisor+1)^0,w,c
  4042  0021F4  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  4043  0021F6  5007               	movf	(___llmod@divisor+2)^0,w,c
  4044  0021F8  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  4045  0021FA  5008               	movf	(___llmod@divisor+3)^0,w,c
  4046  0021FC  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  4047  0021FE                     l2819:
  4048  0021FE  90D8               	bcf	status,0,c
  4049  002200  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  4050  002202  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  4051  002204  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  4052  002206  3205               	rrcf	___llmod@divisor^0,f,c
  4053  002208  2E09               	decfsz	___llmod@counter^0,f,c
  4054  00220A  EFE8  F010         	goto	l2815
  4055  00220E                     l709:
  4056  00220E  C001  F001         	movff	___llmod@dividend,?___llmod
  4057  002212  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4058  002216  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4059  00221A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4060  00221E  0012               	return		;funcret
  4061  002220                     __end_of___llmod:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function ___lldiv *****************
  4065 ;; Defined at:
  4066 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  dividend        4    9[COMRAM] unsigned long 
  4069 ;;  divisor         4   13[COMRAM] unsigned long 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  quotient        4   17[COMRAM] unsigned long 
  4072 ;;  counter         1   21[COMRAM] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  4    9[COMRAM] unsigned long 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4082 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;Total ram usage:       13 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    1
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text21
  4097  0020F4                     __ptext21:
  4098                           	callstack 0
  4099  0020F4                     ___lldiv:
  4100                           	callstack 29
  4101  0020F4  0E00               	movlw	0
  4102  0020F6  6E12               	movwf	___lldiv@quotient^0,c
  4103  0020F8  0E00               	movlw	0
  4104  0020FA  6E13               	movwf	(___lldiv@quotient+1)^0,c
  4105  0020FC  0E00               	movlw	0
  4106  0020FE  6E14               	movwf	(___lldiv@quotient+2)^0,c
  4107  002100  0E00               	movlw	0
  4108  002102  6E15               	movwf	(___lldiv@quotient+3)^0,c
  4109  002104  500E               	movf	___lldiv@divisor^0,w,c
  4110  002106  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
  4111  002108  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
  4112  00210A  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
  4113  00210C  B4D8               	btfsc	status,2,c
  4114  00210E  EF8B  F010         	goto	u1591
  4115  002112  EF8D  F010         	goto	u1590
  4116  002116                     u1591:
  4117  002116  EFC3  F010         	goto	l316
  4118  00211A                     u1590:
  4119  00211A  0E01               	movlw	1
  4120  00211C  6E16               	movwf	___lldiv@counter^0,c
  4121  00211E  EF97  F010         	goto	l2793
  4122  002122                     l2791:
  4123  002122  90D8               	bcf	status,0,c
  4124  002124  360E               	rlcf	___lldiv@divisor^0,f,c
  4125  002126  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
  4126  002128  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
  4127  00212A  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
  4128  00212C  2A16               	incf	___lldiv@counter^0,f,c
  4129  00212E                     l2793:
  4130  00212E  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
  4131  002130  EF9C  F010         	goto	u1601
  4132  002134  EF9E  F010         	goto	u1600
  4133  002138                     u1601:
  4134  002138  EF91  F010         	goto	l2791
  4135  00213C                     u1600:
  4136  00213C                     l2795:
  4137  00213C  90D8               	bcf	status,0,c
  4138  00213E  3612               	rlcf	___lldiv@quotient^0,f,c
  4139  002140  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
  4140  002142  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
  4141  002144  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
  4142  002146  500E               	movf	___lldiv@divisor^0,w,c
  4143  002148  5C0A               	subwf	___lldiv@dividend^0,w,c
  4144  00214A  500F               	movf	(___lldiv@divisor+1)^0,w,c
  4145  00214C  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
  4146  00214E  5010               	movf	(___lldiv@divisor+2)^0,w,c
  4147  002150  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
  4148  002152  5011               	movf	(___lldiv@divisor+3)^0,w,c
  4149  002154  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
  4150  002156  A0D8               	btfss	status,0,c
  4151  002158  EFB0  F010         	goto	u1611
  4152  00215C  EFB2  F010         	goto	u1610
  4153  002160                     u1611:
  4154  002160  EFBB  F010         	goto	l2803
  4155  002164                     u1610:
  4156  002164  500E               	movf	___lldiv@divisor^0,w,c
  4157  002166  5E0A               	subwf	___lldiv@dividend^0,f,c
  4158  002168  500F               	movf	(___lldiv@divisor+1)^0,w,c
  4159  00216A  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
  4160  00216C  5010               	movf	(___lldiv@divisor+2)^0,w,c
  4161  00216E  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
  4162  002170  5011               	movf	(___lldiv@divisor+3)^0,w,c
  4163  002172  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
  4164  002174  8012               	bsf	___lldiv@quotient^0,0,c
  4165  002176                     l2803:
  4166  002176  90D8               	bcf	status,0,c
  4167  002178  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
  4168  00217A  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
  4169  00217C  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
  4170  00217E  320E               	rrcf	___lldiv@divisor^0,f,c
  4171  002180  2E16               	decfsz	___lldiv@counter^0,f,c
  4172  002182  EF9E  F010         	goto	l2795
  4173  002186                     l316:
  4174  002186  C012  F00A         	movff	___lldiv@quotient,?___lldiv
  4175  00218A  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
  4176  00218E  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
  4177  002192  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
  4178  002196  0012               	return		;funcret
  4179  002198                     __end_of___lldiv:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function _Timer1_Init_Default *****************
  4183 ;; Defined at:
  4184 ;;		line 31 in file "src/timer.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;Total ram usage:        0 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text22
  4213  002748                     __ptext22:
  4214                           	callstack 0
  4215  002748                     _Timer1_Init_Default:
  4216                           	callstack 29
  4217  002748                     
  4218                           ;src/timer.c: 32:     T1CON = 0x80;
  4219  002748  0E80               	movlw	128
  4220  00274A  6ECD               	movwf	205,c	;volatile
  4221  00274C  0012               	return		;funcret
  4222  00274E                     __end_of_Timer1_Init_Default:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _Timer1_Enable *****************
  4226 ;; Defined at:
  4227 ;;		line 43 in file "src/timer.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    1
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text23
  4256  002752                     __ptext23:
  4257                           	callstack 0
  4258  002752                     _Timer1_Enable:
  4259                           	callstack 29
  4260  002752                     
  4261                           ;src/timer.c: 44:     T1CON |= 0x01;
  4262  002752  80CD               	bsf	205,0,c	;volatile
  4263  002754  0012               	return		;funcret
  4264  002756                     __end_of_Timer1_Enable:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _Timer1_Disable *****************
  4268 ;; Defined at:
  4269 ;;		line 55 in file "src/timer.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text24
  4298  002756                     __ptext24:
  4299                           	callstack 0
  4300  002756                     _Timer1_Disable:
  4301                           	callstack 29
  4302  002756                     
  4303                           ;src/timer.c: 56:     T1CON &= ~0x01;
  4304  002756  90CD               	bcf	205,0,c	;volatile
  4305  002758  0012               	return		;funcret
  4306  00275A                     __end_of_Timer1_Disable:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _LCD_write_data_byte_4bit *****************
  4310 ;; Defined at:
  4311 ;;		line 126 in file "src/lcd_driver.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  data            1    wreg     unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  data            1    3[COMRAM] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;Total ram usage:        2 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    2
  4332 ;; This function calls:
  4333 ;;		_LCD_enable_toggle
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;;		_LCD_write_characters
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text25
  4341  0024EC                     __ptext25:
  4342                           	callstack 0
  4343  0024EC                     _LCD_write_data_byte_4bit:
  4344                           	callstack 28
  4345                           
  4346                           ;incstack = 0
  4347                           ;LCD_write_data_byte_4bit@data stored from wreg
  4348  0024EC  6E04               	movwf	LCD_write_data_byte_4bit@data^0,c
  4349  0024EE                     
  4350                           ;src/lcd_driver.c: 128:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4351  0024EE  0EFC               	movlw	252
  4352  0024F0  1694               	andwf	148,f,c	;volatile
  4353  0024F2  9295               	bcf	149,1,c	;volatile
  4354  0024F4                     
  4355                           ;src/lcd_driver.c: 129:     (TRISD &= 0x0Fu);
  4356  0024F4  0E0F               	movlw	15
  4357  0024F6  1695               	andwf	149,f,c	;volatile
  4358  0024F8                     
  4359                           ;src/lcd_driver.c: 130:     (LATCbits.LATC0 = 1u);
  4360  0024F8  808B               	bsf	139,0,c	;volatile
  4361  0024FA                     
  4362                           ;src/lcd_driver.c: 131:     (LATCbits.LATC1 = 0u);
  4363  0024FA  928B               	bcf	139,1,c	;volatile
  4364  0024FC                     
  4365                           ;src/lcd_driver.c: 134:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
  4366  0024FC  C004  F003         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  4367  002500  0EF0               	movlw	240
  4368  002502  1603               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4369  002504  5083               	movf	131,w,c	;volatile
  4370  002506  0B0F               	andlw	15
  4371  002508  1003               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  4372  00250A  6E83               	movwf	131,c	;volatile
  4373  00250C                     
  4374                           ;src/lcd_driver.c: 135:     LCD_enable_toggle();
  4375  00250C  ECB5  F00F         	call	_LCD_enable_toggle	;wreg free
  4376  002510                     
  4377                           ;src/lcd_driver.c: 136:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
  4378  002510  C004  F003         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  4379  002514  3A03               	swapf	??_LCD_write_data_byte_4bit^0,f,c
  4380  002516  0EF0               	movlw	240
  4381  002518  1603               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4382  00251A  0EF0               	movlw	240
  4383  00251C  1603               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4384  00251E  5083               	movf	131,w,c	;volatile
  4385  002520  0B0F               	andlw	15
  4386  002522  1003               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  4387  002524  6E83               	movwf	131,c	;volatile
  4388  002526                     
  4389                           ;src/lcd_driver.c: 137:     LCD_enable_toggle();
  4390  002526  ECB5  F00F         	call	_LCD_enable_toggle	;wreg free
  4391  00252A                     
  4392                           ;src/lcd_driver.c: 139:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4393  00252A  0E82               	movlw	130
  4394  00252C  6E03               	movwf	??_LCD_write_data_byte_4bit^0,c
  4395  00252E  0EDE               	movlw	222
  4396  002530                     u2047:
  4397  002530  2EE8               	decfsz	wreg,f,c
  4398  002532  D7FE               	bra	u2047
  4399  002534  2E03               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
  4400  002536  D7FC               	bra	u2047
  4401  002538  0012               	return		;funcret
  4402  00253A                     __end_of_LCD_write_data_byte_4bit:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _LCD_set_cursor_position *****************
  4406 ;; Defined at:
  4407 ;;		line 500 in file "src/lcd_driver.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  line            1    wreg     unsigned char 
  4410 ;;  pos_on_line     1    4[COMRAM] unsigned char 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  line            1    6[COMRAM] unsigned char 
  4413 ;;  ddram_addr      1    5[COMRAM] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      unsigned char 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:        3 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    3
  4430 ;; This function calls:
  4431 ;;		_LCD_write_instr_byte_4bit
  4432 ;;		_LCD_write_instr_byte_8bit
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text26
  4439  001EA0                     __ptext26:
  4440                           	callstack 0
  4441  001EA0                     _LCD_set_cursor_position:
  4442                           	callstack 27
  4443                           
  4444                           ;incstack = 0
  4445                           ;LCD_set_cursor_position@line stored from wreg
  4446  001EA0  6E07               	movwf	LCD_set_cursor_position@line^0,c
  4447  001EA2                     
  4448                           ;src/lcd_driver.c: 502:     if(line > 2u || pos_on_line > 2u * 16u){
  4449  001EA2  0E03               	movlw	3
  4450  001EA4  6007               	cpfslt	LCD_set_cursor_position@line^0,c
  4451  001EA6  EF57  F00F         	goto	u1471
  4452  001EAA  EF59  F00F         	goto	u1470
  4453  001EAE                     u1471:
  4454  001EAE  EFB4  F00F         	goto	l125
  4455  001EB2                     u1470:
  4456  001EB2  0E20               	movlw	32
  4457  001EB4  6405               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  4458  001EB6  EF5F  F00F         	goto	u1481
  4459  001EBA  EF61  F00F         	goto	u1480
  4460  001EBE                     u1481:
  4461  001EBE  EF63  F00F         	goto	l2711
  4462  001EC2                     u1480:
  4463  001EC2  EFB4  F00F         	goto	l125
  4464  001EC6                     l2711:
  4465                           
  4466                           ;src/lcd_driver.c: 511:         if(line == 1u && pos_on_line < 16u){
  4467  001EC6  0407               	decf	LCD_set_cursor_position@line^0,w,c
  4468  001EC8  A4D8               	btfss	status,2,c
  4469  001ECA  EF69  F00F         	goto	u1491
  4470  001ECE  EF6B  F00F         	goto	u1490
  4471  001ED2                     u1491:
  4472  001ED2  EF77  F00F         	goto	l2717
  4473  001ED6                     u1490:
  4474  001ED6  0E10               	movlw	16
  4475  001ED8  6005               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  4476  001EDA  EF71  F00F         	goto	u1501
  4477  001EDE  EF73  F00F         	goto	u1500
  4478  001EE2                     u1501:
  4479  001EE2  EF77  F00F         	goto	l2717
  4480  001EE6                     u1500:
  4481  001EE6                     
  4482                           ;src/lcd_driver.c: 512:             ddram_addr = 0x00u + pos_on_line - 1;
  4483  001EE6  0405               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
  4484  001EE8  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4485                           
  4486                           ;src/lcd_driver.c: 514:         } else if(line == 2u && pos_on_line < 16u){
  4487  001EEA  EFA0  F00F         	goto	l2729
  4488  001EEE                     l2717:
  4489  001EEE  0E02               	movlw	2
  4490  001EF0  1807               	xorwf	LCD_set_cursor_position@line^0,w,c
  4491  001EF2  A4D8               	btfss	status,2,c
  4492  001EF4  EF7E  F00F         	goto	u1511
  4493  001EF8  EF80  F00F         	goto	u1510
  4494  001EFC                     u1511:
  4495  001EFC  EF8D  F00F         	goto	l2723
  4496  001F00                     u1510:
  4497  001F00  0E10               	movlw	16
  4498  001F02  6005               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  4499  001F04  EF86  F00F         	goto	u1521
  4500  001F08  EF88  F00F         	goto	u1520
  4501  001F0C                     u1521:
  4502  001F0C  EF8D  F00F         	goto	l2723
  4503  001F10                     u1520:
  4504  001F10                     
  4505                           ;src/lcd_driver.c: 515:             ddram_addr = 0x40u + pos_on_line - 1;
  4506  001F10  5005               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  4507  001F12  0F3F               	addlw	63
  4508  001F14  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4509                           
  4510                           ;src/lcd_driver.c: 517:         } else if(line == 1u && pos_on_line > 16u){
  4511  001F16  EFA0  F00F         	goto	l2729
  4512  001F1A                     l2723:
  4513  001F1A  0407               	decf	LCD_set_cursor_position@line^0,w,c
  4514  001F1C  A4D8               	btfss	status,2,c
  4515  001F1E  EF93  F00F         	goto	u1531
  4516  001F22  EF95  F00F         	goto	u1530
  4517  001F26                     u1531:
  4518  001F26  EFB4  F00F         	goto	l125
  4519  001F2A                     u1530:
  4520  001F2A  0E10               	movlw	16
  4521  001F2C  6405               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  4522  001F2E  EF9B  F00F         	goto	u1541
  4523  001F32  EF9D  F00F         	goto	u1540
  4524  001F36                     u1541:
  4525  001F36  EFB4  F00F         	goto	l125
  4526  001F3A                     u1540:
  4527  001F3A                     
  4528                           ;src/lcd_driver.c: 518:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
  4529  001F3A  5005               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  4530  001F3C  0F2F               	addlw	47
  4531  001F3E  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4532  001F40                     l2729:
  4533                           
  4534                           ;src/lcd_driver.c: 525:     if(DISP_BIT_MODE == MODE_4BIT){
  4535  001F40  5079               	movf	_DISP_BIT_MODE^0,w,c
  4536  001F42  A4D8               	btfss	status,2,c
  4537  001F44  EFA6  F00F         	goto	u1551
  4538  001F48  EFA8  F00F         	goto	u1550
  4539  001F4C                     u1551:
  4540  001F4C  EFAE  F00F         	goto	l2733
  4541  001F50                     u1550:
  4542  001F50                     
  4543                           ;src/lcd_driver.c: 526:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
  4544  001F50  5006               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  4545  001F52  0980               	iorlw	128
  4546  001F54  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4547                           
  4548                           ;src/lcd_driver.c: 527:     } else{
  4549  001F58  EFB2  F00F         	goto	l2735
  4550  001F5C                     l2733:
  4551                           
  4552                           ;src/lcd_driver.c: 528:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
  4553  001F5C  5006               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  4554  001F5E  0980               	iorlw	128
  4555  001F60  EC54  F013         	call	_LCD_write_instr_byte_8bit
  4556  001F64                     l2735:
  4557                           
  4558                           ;src/lcd_driver.c: 531:     address_counter = ddram_addr;
  4559  001F64  C006  F076         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
  4560  001F68                     l125:
  4561  001F68  0012               	return		;funcret
  4562  001F6A                     __end_of_LCD_set_cursor_position:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _LCD_clear_display *****************
  4566 ;; Defined at:
  4567 ;;		line 427 in file "src/lcd_driver.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        1 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    3
  4588 ;; This function calls:
  4589 ;;		_LCD_write_instr_byte_4bit
  4590 ;;		_LCD_write_instr_byte_8bit
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;;		_LCD_Init_amazonLCD
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text27
  4598  002678                     __ptext27:
  4599                           	callstack 0
  4600  002678                     _LCD_clear_display:
  4601                           	callstack 27
  4602  002678                     
  4603                           ;src/lcd_driver.c: 428:     if(DISP_BIT_MODE == MODE_4BIT){
  4604  002678  5079               	movf	_DISP_BIT_MODE^0,w,c
  4605  00267A  A4D8               	btfss	status,2,c
  4606  00267C  EF42  F013         	goto	u1461
  4607  002680  EF44  F013         	goto	u1460
  4608  002684                     u1461:
  4609  002684  EF49  F013         	goto	l2701
  4610  002688                     u1460:
  4611  002688                     
  4612                           ;src/lcd_driver.c: 429:         LCD_write_instr_byte_4bit(0x01u);
  4613  002688  0E01               	movlw	1
  4614  00268A  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4615                           
  4616                           ;src/lcd_driver.c: 430:     } else{
  4617  00268E  EF4C  F013         	goto	l2703
  4618  002692                     l2701:
  4619                           
  4620                           ;src/lcd_driver.c: 431:         LCD_write_instr_byte_8bit(0x01u);
  4621  002692  0E01               	movlw	1
  4622  002694  EC54  F013         	call	_LCD_write_instr_byte_8bit
  4623  002698                     l2703:
  4624                           
  4625                           ;src/lcd_driver.c: 434:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4626  002698  0E82               	movlw	130
  4627  00269A  6E05               	movwf	??_LCD_clear_display^0,c
  4628  00269C  0EDE               	movlw	222
  4629  00269E                     u2057:
  4630  00269E  2EE8               	decfsz	wreg,f,c
  4631  0026A0  D7FE               	bra	u2057
  4632  0026A2  2E05               	decfsz	??_LCD_clear_display^0,f,c
  4633  0026A4  D7FC               	bra	u2057
  4634  0026A6  0012               	return		;funcret
  4635  0026A8                     __end_of_LCD_clear_display:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _LCD_write_instr_byte_8bit *****************
  4639 ;; Defined at:
  4640 ;;		line 200 in file "src/lcd_driver.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  instr           1    wreg     unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  instr           1    3[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        2 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    2
  4661 ;; This function calls:
  4662 ;;		_LCD_enable_toggle
  4663 ;; This function is called by:
  4664 ;;		_LCD_clear_display
  4665 ;;		_LCD_set_cursor_position
  4666 ;;		_LCD_Init_amazonLCD
  4667 ;;		_LCD_return_home
  4668 ;;		_LCD_write_characters
  4669 ;;		_LCD_turn_off_cursor
  4670 ;;		_LCD_turn_on_cursor
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text28
  4675  0026A8                     __ptext28:
  4676                           	callstack 0
  4677  0026A8                     _LCD_write_instr_byte_8bit:
  4678                           	callstack 27
  4679                           
  4680                           ;incstack = 0
  4681                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  4682  0026A8  6E04               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  4683  0026AA                     
  4684                           ;src/lcd_driver.c: 202:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4685  0026AA  0EFC               	movlw	252
  4686  0026AC  1694               	andwf	148,f,c	;volatile
  4687  0026AE  9295               	bcf	149,1,c	;volatile
  4688  0026B0                     
  4689                           ;src/lcd_driver.c: 203:     (TRISD = 0x00u);
  4690  0026B0  0E00               	movlw	0
  4691  0026B2  6E95               	movwf	149,c	;volatile
  4692  0026B4                     
  4693                           ;src/lcd_driver.c: 204:     (LATCbits.LATC0 = 0u);
  4694  0026B4  908B               	bcf	139,0,c	;volatile
  4695  0026B6                     
  4696                           ;src/lcd_driver.c: 205:     (LATCbits.LATC1 = 0u);
  4697  0026B6  928B               	bcf	139,1,c	;volatile
  4698  0026B8                     
  4699                           ;src/lcd_driver.c: 208:     PORTD = instr;
  4700  0026B8  C004  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  4701  0026BC                     
  4702                           ;src/lcd_driver.c: 209:     LCD_enable_toggle();
  4703  0026BC  ECB5  F00F         	call	_LCD_enable_toggle	;wreg free
  4704  0026C0                     
  4705                           ;src/lcd_driver.c: 211:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4706  0026C0  0E82               	movlw	130
  4707  0026C2  6E03               	movwf	??_LCD_write_instr_byte_8bit^0,c
  4708  0026C4  0EDE               	movlw	222
  4709  0026C6                     u2067:
  4710  0026C6  2EE8               	decfsz	wreg,f,c
  4711  0026C8  D7FE               	bra	u2067
  4712  0026CA  2E03               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  4713  0026CC  D7FC               	bra	u2067
  4714  0026CE  0012               	return		;funcret
  4715  0026D0                     __end_of_LCD_write_instr_byte_8bit:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _LCD_Init_ECE376 *****************
  4719 ;; Defined at:
  4720 ;;		line 224 in file "src/lcd_driver.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;Total ram usage:        2 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    3
  4741 ;; This function calls:
  4742 ;;		_LCD_write_instr_byte_4bit
  4743 ;; This function is called by:
  4744 ;;		_main
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text29
  4749  001C20                     __ptext29:
  4750                           	callstack 0
  4751  001C20                     _LCD_Init_ECE376:
  4752                           	callstack 27
  4753  001C20                     
  4754                           ;src/lcd_driver.c: 227:     PORTC = 0x00; PORTD = 0x00;
  4755  001C20  0E00               	movlw	0
  4756  001C22  6E82               	movwf	130,c	;volatile
  4757  001C24  0E00               	movlw	0
  4758  001C26  6E83               	movwf	131,c	;volatile
  4759  001C28                     
  4760                           ;src/lcd_driver.c: 229:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4761  001C28  0EFC               	movlw	252
  4762  001C2A  1694               	andwf	148,f,c	;volatile
  4763  001C2C  9295               	bcf	149,1,c	;volatile
  4764  001C2E                     
  4765                           ;src/lcd_driver.c: 230:     (TRISD |= 0xF0u);
  4766  001C2E  0EF0               	movlw	240
  4767  001C30  1295               	iorwf	149,f,c	;volatile
  4768  001C32                     
  4769                           ;src/lcd_driver.c: 234:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  4770  001C32  0ECB               	movlw	203
  4771  001C34  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4772  001C36  0EEC               	movlw	236
  4773  001C38  6E05               	movwf	??_LCD_Init_ECE376^0,c
  4774  001C3A  0E84               	movlw	132
  4775  001C3C                     u2077:
  4776  001C3C  2EE8               	decfsz	wreg,f,c
  4777  001C3E  D7FE               	bra	u2077
  4778  001C40  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  4779  001C42  D7FC               	bra	u2077
  4780  001C44  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4781  001C46  D7FA               	bra	u2077
  4782  001C48  D000               	nop2	
  4783  001C4A                     
  4784                           ;src/lcd_driver.c: 235:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  4785  001C4A  0ECB               	movlw	203
  4786  001C4C  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4787  001C4E  0EEC               	movlw	236
  4788  001C50  6E05               	movwf	??_LCD_Init_ECE376^0,c
  4789  001C52  0E84               	movlw	132
  4790  001C54                     u2087:
  4791  001C54  2EE8               	decfsz	wreg,f,c
  4792  001C56  D7FE               	bra	u2087
  4793  001C58  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  4794  001C5A  D7FC               	bra	u2087
  4795  001C5C  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4796  001C5E  D7FA               	bra	u2087
  4797  001C60  D000               	nop2	
  4798  001C62                     
  4799                           ;src/lcd_driver.c: 236:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  4800  001C62  0E66               	movlw	102
  4801  001C64  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4802  001C66  0E76               	movlw	118
  4803  001C68  6E05               	movwf	??_LCD_Init_ECE376^0,c
  4804  001C6A  0EC1               	movlw	193
  4805  001C6C                     u2097:
  4806  001C6C  2EE8               	decfsz	wreg,f,c
  4807  001C6E  D7FE               	bra	u2097
  4808  001C70  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  4809  001C72  D7FC               	bra	u2097
  4810  001C74  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4811  001C76  D7FA               	bra	u2097
  4812  001C78  F000               	nop	
  4813  001C7A                     
  4814                           ;src/lcd_driver.c: 241:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  4815  001C7A  0E06               	movlw	6
  4816  001C7C  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4817  001C7E  0E13               	movlw	19
  4818  001C80  6E05               	movwf	??_LCD_Init_ECE376^0,c
  4819  001C82  0EAE               	movlw	174
  4820  001C84                     u2107:
  4821  001C84  2EE8               	decfsz	wreg,f,c
  4822  001C86  D7FE               	bra	u2107
  4823  001C88  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  4824  001C8A  D7FC               	bra	u2107
  4825  001C8C  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4826  001C8E  D7FA               	bra	u2107
  4827  001C90                     
  4828                           ;src/lcd_driver.c: 242:     LCD_write_instr_byte_4bit(0x30u);
  4829  001C90  0E30               	movlw	48
  4830  001C92  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4831  001C96                     
  4832                           ;src/lcd_driver.c: 243:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  4833  001C96  0E41               	movlw	65
  4834  001C98  6E05               	movwf	??_LCD_Init_ECE376^0,c
  4835  001C9A  0EEE               	movlw	238
  4836  001C9C                     u2117:
  4837  001C9C  2EE8               	decfsz	wreg,f,c
  4838  001C9E  D7FE               	bra	u2117
  4839  001CA0  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  4840  001CA2  D7FC               	bra	u2117
  4841  001CA4  D000               	nop2	
  4842  001CA6                     
  4843                           ;src/lcd_driver.c: 244:     LCD_write_instr_byte_4bit(0x30u);
  4844  001CA6  0E30               	movlw	48
  4845  001CA8  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4846  001CAC                     
  4847                           ;src/lcd_driver.c: 245:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  4848  001CAC  0ED6               	movlw	214
  4849  001CAE                     u2127:
  4850  001CAE  D000               	nop2	
  4851  001CB0  D000               	nop2	
  4852  001CB2  2EE8               	decfsz	wreg,f,c
  4853  001CB4  D7FC               	bra	u2127
  4854  001CB6  D000               	nop2	
  4855  001CB8                     
  4856                           ;src/lcd_driver.c: 246:     LCD_write_instr_byte_4bit(0x30u);
  4857  001CB8  0E30               	movlw	48
  4858  001CBA  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4859  001CBE                     
  4860                           ;src/lcd_driver.c: 248:     LCD_write_instr_byte_4bit(0x28u);
  4861  001CBE  0E28               	movlw	40
  4862  001CC0  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4863  001CC4                     
  4864                           ;src/lcd_driver.c: 249:     LCD_write_instr_byte_4bit(0x0Eu);
  4865  001CC4  0E0E               	movlw	14
  4866  001CC6  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4867  001CCA                     
  4868                           ;src/lcd_driver.c: 250:     LCD_write_instr_byte_4bit(0x01u);
  4869  001CCA  0E01               	movlw	1
  4870  001CCC  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4871  001CD0                     
  4872                           ;src/lcd_driver.c: 251:     LCD_write_instr_byte_4bit(0x06u);
  4873  001CD0  0E06               	movlw	6
  4874  001CD2  EC9D  F012         	call	_LCD_write_instr_byte_4bit
  4875  001CD6                     
  4876                           ;src/lcd_driver.c: 253:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  4877  001CD6  0E06               	movlw	6
  4878  001CD8  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4879  001CDA  0E13               	movlw	19
  4880  001CDC  6E05               	movwf	??_LCD_Init_ECE376^0,c
  4881  001CDE  0EAE               	movlw	174
  4882  001CE0                     u2137:
  4883  001CE0  2EE8               	decfsz	wreg,f,c
  4884  001CE2  D7FE               	bra	u2137
  4885  001CE4  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  4886  001CE6  D7FC               	bra	u2137
  4887  001CE8  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4888  001CEA  D7FA               	bra	u2137
  4889  001CEC                     
  4890                           ;src/lcd_driver.c: 256:     CURRENT_DISP = QAPASS_EBAY;
  4891  001CEC  0E00               	movlw	0
  4892  001CEE  6E7A               	movwf	_CURRENT_DISP^0,c
  4893  001CF0                     
  4894                           ;src/lcd_driver.c: 257:     DISP_BIT_MODE = MODE_4BIT;
  4895  001CF0  0E00               	movlw	0
  4896  001CF2  6E79               	movwf	_DISP_BIT_MODE^0,c
  4897  001CF4                     
  4898                           ;src/lcd_driver.c: 258:     init_complete = 0x01u;
  4899  001CF4  0E01               	movlw	1
  4900  001CF6  6E78               	movwf	_init_complete^0,c
  4901  001CF8                     
  4902                           ;src/lcd_driver.c: 259:     current_entry_mode = 0x06u;
  4903  001CF8  0E06               	movlw	6
  4904  001CFA  6E7C               	movwf	_current_entry_mode^0,c
  4905  001CFC                     
  4906                           ;src/lcd_driver.c: 260:     current_disp_ctrl = 0x0Eu;
  4907  001CFC  0E0E               	movlw	14
  4908  001CFE  6E7E               	movwf	_current_disp_ctrl^0,c
  4909  001D00                     
  4910                           ;src/lcd_driver.c: 261:     current_func_set = 0x28u;
  4911  001D00  0E28               	movlw	40
  4912  001D02  6E7B               	movwf	_current_func_set^0,c
  4913  001D04  0012               	return		;funcret
  4914  001D06                     __end_of_LCD_Init_ECE376:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function _LCD_write_instr_byte_4bit *****************
  4918 ;; Defined at:
  4919 ;;		line 175 in file "src/lcd_driver.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  instr           1    wreg     unsigned char 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  instr           1    3[COMRAM] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;Total ram usage:        2 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    2
  4940 ;; This function calls:
  4941 ;;		_LCD_enable_toggle
  4942 ;; This function is called by:
  4943 ;;		_LCD_Init_ECE376
  4944 ;;		_LCD_clear_display
  4945 ;;		_LCD_set_cursor_position
  4946 ;;		_LCD_Init_amazonLCD
  4947 ;;		_LCD_return_home
  4948 ;;		_LCD_write_characters
  4949 ;;		_LCD_turn_off_cursor
  4950 ;;		_LCD_turn_on_cursor
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text30
  4955  00253A                     __ptext30:
  4956                           	callstack 0
  4957  00253A                     _LCD_write_instr_byte_4bit:
  4958                           	callstack 27
  4959                           
  4960                           ;incstack = 0
  4961                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  4962  00253A  6E04               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  4963  00253C                     
  4964                           ;src/lcd_driver.c: 177:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4965  00253C  0EFC               	movlw	252
  4966  00253E  1694               	andwf	148,f,c	;volatile
  4967  002540  9295               	bcf	149,1,c	;volatile
  4968  002542                     
  4969                           ;src/lcd_driver.c: 178:     (TRISD &= 0x0Fu);
  4970  002542  0E0F               	movlw	15
  4971  002544  1695               	andwf	149,f,c	;volatile
  4972  002546                     
  4973                           ;src/lcd_driver.c: 179:     (LATCbits.LATC0 = 0u);
  4974  002546  908B               	bcf	139,0,c	;volatile
  4975  002548                     
  4976                           ;src/lcd_driver.c: 180:     (LATCbits.LATC1 = 0u);
  4977  002548  928B               	bcf	139,1,c	;volatile
  4978  00254A                     
  4979                           ;src/lcd_driver.c: 183:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  4980  00254A  C004  F003         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  4981  00254E  0EF0               	movlw	240
  4982  002550  1603               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  4983  002552  5083               	movf	131,w,c	;volatile
  4984  002554  0B0F               	andlw	15
  4985  002556  1003               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  4986  002558  6E83               	movwf	131,c	;volatile
  4987  00255A                     
  4988                           ;src/lcd_driver.c: 184:     LCD_enable_toggle();
  4989  00255A  ECB5  F00F         	call	_LCD_enable_toggle	;wreg free
  4990  00255E                     
  4991                           ;src/lcd_driver.c: 185:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  4992  00255E  C004  F003         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  4993  002562  3A03               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  4994  002564  0EF0               	movlw	240
  4995  002566  1603               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  4996  002568  0EF0               	movlw	240
  4997  00256A  1603               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  4998  00256C  5083               	movf	131,w,c	;volatile
  4999  00256E  0B0F               	andlw	15
  5000  002570  1003               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  5001  002572  6E83               	movwf	131,c	;volatile
  5002  002574                     
  5003                           ;src/lcd_driver.c: 186:     LCD_enable_toggle();
  5004  002574  ECB5  F00F         	call	_LCD_enable_toggle	;wreg free
  5005  002578                     
  5006                           ;src/lcd_driver.c: 188:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  5007  002578  0E82               	movlw	130
  5008  00257A  6E03               	movwf	??_LCD_write_instr_byte_4bit^0,c
  5009  00257C  0EDE               	movlw	222
  5010  00257E                     u2147:
  5011  00257E  2EE8               	decfsz	wreg,f,c
  5012  002580  D7FE               	bra	u2147
  5013  002582  2E03               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  5014  002584  D7FC               	bra	u2147
  5015  002586  0012               	return		;funcret
  5016  002588                     __end_of_LCD_write_instr_byte_4bit:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _LCD_enable_toggle *****************
  5020 ;; Defined at:
  5021 ;;		line 45 in file "src/lcd_driver.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;Total ram usage:        2 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    1
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_LCD_write_data_byte_4bit
  5046 ;;		_LCD_write_instr_byte_4bit
  5047 ;;		_LCD_write_instr_byte_8bit
  5048 ;;		_LCD_wait_for_BF
  5049 ;;		_LCD_write_data_byte_8bit
  5050 ;;		_LCD_Init
  5051 ;;		_LCD_read_current_address_counter
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text31
  5056  001F6A                     __ptext31:
  5057                           	callstack 0
  5058  001F6A                     _LCD_enable_toggle:
  5059                           	callstack 28
  5060  001F6A                     
  5061                           ;src/lcd_driver.c: 46:     switch(CURRENT_DISP){
  5062  001F6A  EFFB  F00F         	goto	l2459
  5063  001F6E                     l66:
  5064                           
  5065                           ;src/lcd_driver.c: 49:             (LATDbits.LATD1 = 0u);
  5066  001F6E  928C               	bcf	140,1,c	;volatile
  5067  001F70                     
  5068                           ;src/lcd_driver.c: 50:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5069  001F70  0E06               	movlw	6
  5070  001F72                     u2157:
  5071  001F72  2EE8               	decfsz	wreg,f,c
  5072  001F74  D7FE               	bra	u2157
  5073  001F76  D000               	nop2	
  5074  001F78                     
  5075                           ;src/lcd_driver.c: 51:             (LATDbits.LATD1 = 1u);
  5076  001F78  828C               	bsf	140,1,c	;volatile
  5077                           
  5078                           ;src/lcd_driver.c: 52:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5079  001F7A  0E06               	movlw	6
  5080  001F7C                     u2167:
  5081  001F7C  2EE8               	decfsz	wreg,f,c
  5082  001F7E  D7FE               	bra	u2167
  5083  001F80  D000               	nop2	
  5084  001F82                     
  5085                           ;src/lcd_driver.c: 53:             (LATDbits.LATD1 = 0u);
  5086  001F82  928C               	bcf	140,1,c	;volatile
  5087                           
  5088                           ;src/lcd_driver.c: 54:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5089  001F84  0E06               	movlw	6
  5090  001F86                     u2177:
  5091  001F86  2EE8               	decfsz	wreg,f,c
  5092  001F88  D7FE               	bra	u2177
  5093  001F8A  D000               	nop2	
  5094                           
  5095                           ;src/lcd_driver.c: 55:             break;
  5096  001F8C  EF18  F010         	goto	l71
  5097  001F90                     l68:
  5098                           
  5099                           ;src/lcd_driver.c: 58:             (LATDbits.LATD1 = 0u);
  5100  001F90  928C               	bcf	140,1,c	;volatile
  5101  001F92                     
  5102                           ;src/lcd_driver.c: 59:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  5103  001F92  0E03               	movlw	3
  5104  001F94                     u2187:
  5105  001F94  2EE8               	decfsz	wreg,f,c
  5106  001F96  D7FE               	bra	u2187
  5107  001F98  F000               	nop	
  5108  001F9A                     
  5109                           ;src/lcd_driver.c: 60:             (LATDbits.LATD1 = 1u);
  5110  001F9A  828C               	bsf	140,1,c	;volatile
  5111                           
  5112                           ;src/lcd_driver.c: 61:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  5113  001F9C  0E03               	movlw	3
  5114  001F9E                     u2197:
  5115  001F9E  2EE8               	decfsz	wreg,f,c
  5116  001FA0  D7FE               	bra	u2197
  5117  001FA2  F000               	nop	
  5118  001FA4                     
  5119                           ;src/lcd_driver.c: 62:             (LATDbits.LATD1 = 0u);
  5120  001FA4  928C               	bcf	140,1,c	;volatile
  5121                           
  5122                           ;src/lcd_driver.c: 63:             _delay((unsigned long)((100u)*(40000000u/4000000.0)))
      +                          ;
  5123  001FA6  0EC8               	movlw	200
  5124  001FA8                     u2207:
  5125  001FA8  D000               	nop2	
  5126  001FAA  2EE8               	decfsz	wreg,f,c
  5127  001FAC  D7FD               	bra	u2207
  5128                           
  5129                           ;src/lcd_driver.c: 64:             break;
  5130  001FAE  EF18  F010         	goto	l71
  5131  001FB2                     l69:
  5132                           
  5133                           ;src/lcd_driver.c: 67:             (LATDbits.LATD1 = 0u);
  5134  001FB2  928C               	bcf	140,1,c	;volatile
  5135  001FB4                     
  5136                           ;src/lcd_driver.c: 68:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5137  001FB4  0E06               	movlw	6
  5138  001FB6                     u2217:
  5139  001FB6  2EE8               	decfsz	wreg,f,c
  5140  001FB8  D7FE               	bra	u2217
  5141  001FBA  D000               	nop2	
  5142  001FBC                     
  5143                           ;src/lcd_driver.c: 69:             (LATDbits.LATD1 = 1u);
  5144  001FBC  828C               	bsf	140,1,c	;volatile
  5145                           
  5146                           ;src/lcd_driver.c: 70:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5147  001FBE  0E06               	movlw	6
  5148  001FC0                     u2227:
  5149  001FC0  2EE8               	decfsz	wreg,f,c
  5150  001FC2  D7FE               	bra	u2227
  5151  001FC4  D000               	nop2	
  5152  001FC6                     
  5153                           ;src/lcd_driver.c: 71:             (LATDbits.LATD1 = 0u);
  5154  001FC6  928C               	bcf	140,1,c	;volatile
  5155                           
  5156                           ;src/lcd_driver.c: 72:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5157  001FC8  0E06               	movlw	6
  5158  001FCA                     u2237:
  5159  001FCA  2EE8               	decfsz	wreg,f,c
  5160  001FCC  D7FE               	bra	u2237
  5161  001FCE  D000               	nop2	
  5162                           
  5163                           ;src/lcd_driver.c: 73:             break;
  5164  001FD0  EF18  F010         	goto	l71
  5165  001FD4                     l70:
  5166                           
  5167                           ;src/lcd_driver.c: 76:             (LATDbits.LATD1 = 0u);
  5168  001FD4  928C               	bcf	140,1,c	;volatile
  5169  001FD6                     
  5170                           ;src/lcd_driver.c: 77:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5171  001FD6  0E06               	movlw	6
  5172  001FD8                     u2247:
  5173  001FD8  2EE8               	decfsz	wreg,f,c
  5174  001FDA  D7FE               	bra	u2247
  5175  001FDC  D000               	nop2	
  5176  001FDE                     
  5177                           ;src/lcd_driver.c: 78:             (LATDbits.LATD1 = 1u);
  5178  001FDE  828C               	bsf	140,1,c	;volatile
  5179                           
  5180                           ;src/lcd_driver.c: 79:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5181  001FE0  0E06               	movlw	6
  5182  001FE2                     u2257:
  5183  001FE2  2EE8               	decfsz	wreg,f,c
  5184  001FE4  D7FE               	bra	u2257
  5185  001FE6  D000               	nop2	
  5186  001FE8                     
  5187                           ;src/lcd_driver.c: 80:             (LATDbits.LATD1 = 0u);
  5188  001FE8  928C               	bcf	140,1,c	;volatile
  5189                           
  5190                           ;src/lcd_driver.c: 81:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5191  001FEA  0E06               	movlw	6
  5192  001FEC                     u2267:
  5193  001FEC  2EE8               	decfsz	wreg,f,c
  5194  001FEE  D7FE               	bra	u2267
  5195  001FF0  D000               	nop2	
  5196                           
  5197                           ;src/lcd_driver.c: 82:             break;
  5198  001FF2  EF18  F010         	goto	l71
  5199  001FF6                     l2459:
  5200  001FF6  507A               	movf	_CURRENT_DISP^0,w,c
  5201  001FF8  6E01               	movwf	??_LCD_enable_toggle^0,c
  5202  001FFA  6A02               	clrf	(??_LCD_enable_toggle+1)^0,c
  5203                           
  5204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5205                           ; Switch size 1, requested type "simple"
  5206                           ; Number of cases is 1, Range of values is 0 to 0
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte            4     3 (average)
  5210                           ;	Chosen strategy is simple_byte
  5211  001FFC  5002               	movf	(??_LCD_enable_toggle+1)^0,w,c
  5212  001FFE  0A00               	xorlw	0	; case 0
  5213  002000  B4D8               	btfsc	status,2,c
  5214  002002  EF05  F010         	goto	l3319
  5215  002006  EF18  F010         	goto	l71
  5216  00200A                     l3319:
  5217                           
  5218                           ; Switch size 1, requested type "simple"
  5219                           ; Number of cases is 4, Range of values is 0 to 3
  5220                           ; switch strategies available:
  5221                           ; Name         Instructions Cycles
  5222                           ; simple_byte           13     7 (average)
  5223                           ;	Chosen strategy is simple_byte
  5224  00200A  5001               	movf	??_LCD_enable_toggle^0,w,c
  5225  00200C  0A00               	xorlw	0	; case 0
  5226  00200E  B4D8               	btfsc	status,2,c
  5227  002010  EFB7  F00F         	goto	l66
  5228  002014  0A01               	xorlw	1	; case 1
  5229  002016  B4D8               	btfsc	status,2,c
  5230  002018  EFC8  F00F         	goto	l68
  5231  00201C  0A03               	xorlw	3	; case 2
  5232  00201E  B4D8               	btfsc	status,2,c
  5233  002020  EFD9  F00F         	goto	l69
  5234  002024  0A01               	xorlw	1	; case 3
  5235  002026  B4D8               	btfsc	status,2,c
  5236  002028  EFEA  F00F         	goto	l70
  5237  00202C  EF18  F010         	goto	l71
  5238  002030                     l71:
  5239  002030  0012               	return		;funcret
  5240  002032                     __end_of_LCD_enable_toggle:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _CCP1_Capture_Init_Default *****************
  5244 ;; Defined at:
  5245 ;;		line 66 in file "src/ccp.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_main
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text32
  5274  00273C                     __ptext32:
  5275                           	callstack 0
  5276  00273C                     _CCP1_Capture_Init_Default:
  5277                           	callstack 29
  5278  00273C                     
  5279                           ;src/ccp.c: 67:     (CCP1CON = 0x5);
  5280  00273C  0E05               	movlw	5
  5281  00273E  6EBD               	movwf	189,c	;volatile
  5282  002740                     
  5283                           ;src/ccp.c: 68:     (T3CON &= ~0x48);
  5284  002740  0EB7               	movlw	183
  5285  002742  16B1               	andwf	177,f,c	;volatile
  5286  002744                     
  5287                           ;src/ccp.c: 69:     (PIE1bits.CCP1IE = 1u);
  5288  002744  849D               	bsf	157,2,c	;volatile
  5289  002746  0012               	return		;funcret
  5290  002748                     __end_of_CCP1_Capture_Init_Default:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _isr *****************
  5294 ;; Defined at:
  5295 ;;		line 142 in file "ece376_hw9_ccp_capt.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;		None
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;Total ram usage:        0 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		Interrupt level 2
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	intcode
  5323  000808                     __pintcode:
  5324                           	callstack 0
  5325  000808                     _isr:
  5326                           	callstack 22
  5327                           
  5328                           ;incstack = 0
  5329  000808  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5330  00080A  EDC0  F011         	call	int_func,f	;refresh shadow registers
  5331                           
  5332                           	psect	intcode_body
  5333  002380                     __pintcode_body:
  5334                           	callstack 22
  5335  002380                     int_func:
  5336                           	callstack 22
  5337  002380  0006               	pop		; remove dummy address from shadow register refresh
  5338  002382                     
  5339                           ;ece376_hw9_ccp_capt.c: 148:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  5340  002382  A09E               	btfss	158,0,c	;volatile
  5341  002384  EFC6  F011         	goto	i2u182_41
  5342  002388  EFC8  F011         	goto	i2u182_40
  5343  00238C                     i2u182_41:
  5344  00238C  EFD9  F011         	goto	i2l3075
  5345  002390                     i2u182_40:
  5346  002390  A09D               	btfss	157,0,c	;volatile
  5347  002392  EFCD  F011         	goto	i2u183_41
  5348  002396  EFCF  F011         	goto	i2u183_40
  5349  00239A                     i2u183_41:
  5350  00239A  EFD9  F011         	goto	i2l3075
  5351  00239E                     i2u183_40:
  5352  00239E                     
  5353                           ;ece376_hw9_ccp_capt.c: 150:         elapsed_time += 0x10000u;
  5354  00239E  0E00               	movlw	0
  5355  0023A0  0100               	movlb	0	; () banked
  5356  0023A2  27B4               	addwf	_elapsed_time& (0+255),f,b	;volatile
  5357  0023A4  0E00               	movlw	0
  5358  0023A6  23B5               	addwfc	(_elapsed_time+1)& (0+255),f,b	;volatile
  5359  0023A8  0E01               	movlw	1
  5360  0023AA  23B6               	addwfc	(_elapsed_time+2)& (0+255),f,b	;volatile
  5361  0023AC  0E00               	movlw	0
  5362  0023AE  23B7               	addwfc	(_elapsed_time+3)& (0+255),f,b	;volatile
  5363  0023B0                     
  5364                           ; BSR set to: 0
  5365                           ;ece376_hw9_ccp_capt.c: 152:         (PIR1bits.TMR1IF = 0u);
  5366  0023B0  909E               	bcf	158,0,c	;volatile
  5367  0023B2                     i2l3075:
  5368                           
  5369                           ;ece376_hw9_ccp_capt.c: 160:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  5370  0023B2  A49E               	btfss	158,2,c	;volatile
  5371  0023B4  EFDE  F011         	goto	i2u184_41
  5372  0023B8  EFE0  F011         	goto	i2u184_40
  5373  0023BC                     i2u184_41:
  5374  0023BC  EFF3  F011         	goto	i2l244
  5375  0023C0                     i2u184_40:
  5376  0023C0  A49D               	btfss	157,2,c	;volatile
  5377  0023C2  EFE5  F011         	goto	i2u185_41
  5378  0023C6  EFE7  F011         	goto	i2u185_40
  5379  0023CA                     i2u185_41:
  5380  0023CA  EFF3  F011         	goto	i2l244
  5381  0023CE                     i2u185_40:
  5382  0023CE                     
  5383                           ;ece376_hw9_ccp_capt.c: 161:         elapsed_time += (uint32_t) CCPR1;
  5384  0023CE  50BE               	movf	190,w,c	;volatile
  5385  0023D0  0100               	movlb	0	; () banked
  5386  0023D2  27B4               	addwf	_elapsed_time& (0+255),f,b	;volatile
  5387  0023D4  50BF               	movf	191,w,c	;volatile
  5388  0023D6  23B5               	addwfc	(_elapsed_time+1)& (0+255),f,b	;volatile
  5389  0023D8  0E00               	movlw	0
  5390  0023DA  23B6               	addwfc	(_elapsed_time+2)& (0+255),f,b	;volatile
  5391  0023DC  0E00               	movlw	0
  5392  0023DE  23B7               	addwfc	(_elapsed_time+3)& (0+255),f,b	;volatile
  5393  0023E0                     
  5394                           ; BSR set to: 0
  5395                           ;ece376_hw9_ccp_capt.c: 162:   game_done_flag = 0x01u;
  5396  0023E0  0E01               	movlw	1
  5397  0023E2  6FBA               	movwf	_game_done_flag& (0+255),b	;volatile
  5398  0023E4                     
  5399                           ; BSR set to: 0
  5400                           ;ece376_hw9_ccp_capt.c: 165:   (PIR1bits.CCP1IF = 0u);
  5401  0023E4  949E               	bcf	158,2,c	;volatile
  5402  0023E6                     i2l244:
  5403  0023E6  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5404  0023E8  0011               	retfie		f
  5405  0023EA                     __end_of_isr:
  5406                           	callstack 0
  5407                           
  5408                           	psect	rparam
  5409  0000                     
  5410                           	psect	temp
  5411  00007F                     btemp:
  5412                           	callstack 0
  5413  00007F                     	ds	1
  5414  0000                     int$flags	set	btemp
  5415  0000                     wtemp8	set	btemp+1
  5416  0000                     ttemp5	set	btemp+1
  5417  0000                     ttemp6	set	btemp+4
  5418  0000                     ttemp7	set	btemp+8
  5419                           
  5420                           	psect	idloc
  5421                           
  5422                           ;Config register IDLOC0 @ 0x200000
  5423                           ;	unspecified, using default values
  5424  200000                     	org	2097152
  5425  200000  FF                 	db	255
  5426                           
  5427                           ;Config register IDLOC1 @ 0x200001
  5428                           ;	unspecified, using default values
  5429  200001                     	org	2097153
  5430  200001  FF                 	db	255
  5431                           
  5432                           ;Config register IDLOC2 @ 0x200002
  5433                           ;	unspecified, using default values
  5434  200002                     	org	2097154
  5435  200002  FF                 	db	255
  5436                           
  5437                           ;Config register IDLOC3 @ 0x200003
  5438                           ;	unspecified, using default values
  5439  200003                     	org	2097155
  5440  200003  FF                 	db	255
  5441                           
  5442                           ;Config register IDLOC4 @ 0x200004
  5443                           ;	unspecified, using default values
  5444  200004                     	org	2097156
  5445  200004  FF                 	db	255
  5446                           
  5447                           ;Config register IDLOC5 @ 0x200005
  5448                           ;	unspecified, using default values
  5449  200005                     	org	2097157
  5450  200005  FF                 	db	255
  5451                           
  5452                           ;Config register IDLOC6 @ 0x200006
  5453                           ;	unspecified, using default values
  5454  200006                     	org	2097158
  5455  200006  FF                 	db	255
  5456                           
  5457                           ;Config register IDLOC7 @ 0x200007
  5458                           ;	unspecified, using default values
  5459  200007                     	org	2097159
  5460  200007  FF                 	db	255
  5461                           
  5462                           	psect	config
  5463                           
  5464                           ; Padding undefined space
  5465  300000                     	org	3145728
  5466  300000  FF                 	db	255
  5467                           
  5468                           ;Config register CONFIG1H @ 0x300001
  5469                           ;	Oscillator Selection bits
  5470                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  5471                           ;	Fail-Safe Clock Monitor Enable bit
  5472                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5473                           ;	Internal/External Oscillator Switchover bit
  5474                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5475  300001                     	org	3145729
  5476  300001  06                 	db	6
  5477                           
  5478                           ;Config register CONFIG2L @ 0x300002
  5479                           ;	Power-up Timer Enable bit
  5480                           ;	PWRT = OFF, PWRT disabled
  5481                           ;	Brown-out Reset Enable bits
  5482                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5483                           ;	Brown Out Reset Voltage bits
  5484                           ;	BORV = 3, Minimum setting
  5485  300002                     	org	3145730
  5486  300002  1F                 	db	31
  5487                           
  5488                           ;Config register CONFIG2H @ 0x300003
  5489                           ;	Watchdog Timer Enable bit
  5490                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5491                           ;	Watchdog Timer Postscale Select bits
  5492                           ;	WDTPS = 32768, 1:32768
  5493  300003                     	org	3145731
  5494  300003  1E                 	db	30
  5495                           
  5496                           ; Padding undefined space
  5497  300004                     	org	3145732
  5498  300004  FF                 	db	255
  5499                           
  5500                           ;Config register CONFIG3H @ 0x300005
  5501                           ;	CCP2 MUX bit
  5502                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5503                           ;	PORTB A/D Enable bit
  5504                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5505                           ;	Low-Power Timer1 Oscillator Enable bit
  5506                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5507                           ;	MCLR Pin Enable bit
  5508                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5509  300005                     	org	3145733
  5510  300005  81                 	db	129
  5511                           
  5512                           ;Config register CONFIG4L @ 0x300006
  5513                           ;	Stack Full/Underflow Reset Enable bit
  5514                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5515                           ;	Single-Supply ICSP Enable bit
  5516                           ;	LVP = OFF, Single-Supply ICSP disabled
  5517                           ;	Extended Instruction Set Enable bit
  5518                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5519                           ;	Background Debugger Enable bit
  5520                           ;	DEBUG = 0x1, unprogrammed default
  5521  300006                     	org	3145734
  5522  300006  81                 	db	129
  5523                           
  5524                           ; Padding undefined space
  5525  300007                     	org	3145735
  5526  300007  FF                 	db	255
  5527                           
  5528                           ;Config register CONFIG5L @ 0x300008
  5529                           ;	Code Protection bit
  5530                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5531                           ;	Code Protection bit
  5532                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5533                           ;	Code Protection bit
  5534                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5535                           ;	Code Protection bit
  5536                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5537  300008                     	org	3145736
  5538  300008  0F                 	db	15
  5539                           
  5540                           ;Config register CONFIG5H @ 0x300009
  5541                           ;	Boot Block Code Protection bit
  5542                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5543                           ;	Data EEPROM Code Protection bit
  5544                           ;	CPD = OFF, Data EEPROM not code-protected
  5545  300009                     	org	3145737
  5546  300009  C0                 	db	192
  5547                           
  5548                           ;Config register CONFIG6L @ 0x30000A
  5549                           ;	Write Protection bit
  5550                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5551                           ;	Write Protection bit
  5552                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5553                           ;	Write Protection bit
  5554                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5555                           ;	Write Protection bit
  5556                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5557  30000A                     	org	3145738
  5558  30000A  0F                 	db	15
  5559                           
  5560                           ;Config register CONFIG6H @ 0x30000B
  5561                           ;	Configuration Register Write Protection bit
  5562                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5563                           ;	Boot Block Write Protection bit
  5564                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5565                           ;	Data EEPROM Write Protection bit
  5566                           ;	WRTD = OFF, Data EEPROM not write-protected
  5567  30000B                     	org	3145739
  5568  30000B  E0                 	db	224
  5569                           
  5570                           ;Config register CONFIG7L @ 0x30000C
  5571                           ;	Table Read Protection bit
  5572                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5573                           ;	Table Read Protection bit
  5574                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5575                           ;	Table Read Protection bit
  5576                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5577                           ;	Table Read Protection bit
  5578                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5579  30000C                     	org	3145740
  5580  30000C  0F                 	db	15
  5581                           
  5582                           ;Config register CONFIG7H @ 0x30000D
  5583                           ;	Boot Block Table Read Protection bit
  5584                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5585  30000D                     	org	3145741
  5586  30000D  40                 	db	64
  5587                           tosu	equ	0xFFF
  5588                           tosh	equ	0xFFE
  5589                           tosl	equ	0xFFD
  5590                           stkptr	equ	0xFFC
  5591                           pclatu	equ	0xFFB
  5592                           pclath	equ	0xFFA
  5593                           pcl	equ	0xFF9
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           indf0	equ	0xFEF
  5601                           postinc0	equ	0xFEE
  5602                           postdec0	equ	0xFED
  5603                           preinc0	equ	0xFEC
  5604                           plusw0	equ	0xFEB
  5605                           fsr0h	equ	0xFEA
  5606                           fsr0l	equ	0xFE9
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           postinc1	equ	0xFE6
  5610                           postdec1	equ	0xFE5
  5611                           preinc1	equ	0xFE4
  5612                           plusw1	equ	0xFE3
  5613                           fsr1h	equ	0xFE2
  5614                           fsr1l	equ	0xFE1
  5615                           bsr	equ	0xFE0
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           preinc2	equ	0xFDC
  5620                           plusw2	equ	0xFDB
  5621                           fsr2h	equ	0xFDA
  5622                           fsr2l	equ	0xFD9
  5623                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    34
    Data        36
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    111     126
    BANK0           128     48     117
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1068_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    sp__hex_to_bit_string	PTR unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _strcat->_strcpy
    _strcpy->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    ___lwdiv->___llmod
    ___lldiv->___llmod
    _LCD_write_data_byte_4bit->_LCD_enable_toggle
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_write_instr_byte_8bit->_LCD_enable_toggle
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit
    _LCD_write_instr_byte_4bit->_LCD_enable_toggle

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   11758
                                            109 COMRAM     2     2      0
                                              0 BANK0     48    48      0
          _CCP1_Capture_Init_Default
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
                     _Timer1_Disable
                      _Timer1_Enable
                _Timer1_Init_Default
                            ___lldiv
                            ___llmod
                            ___lwdiv
                  _hex_to_bit_string
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     0      4     866
                                             12 COMRAM     4     0      4
                  _hex_to_bit_string (ARG)
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              4 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    7700
                                             89 COMRAM    20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7347
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6975
                                             59 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3835
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2785
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _hex_to_bit_string                                    8     6      2     136
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              9 COMRAM     7     3      4
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                              9 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      44
                                              2 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              3     2      1     909
                                              4 COMRAM     3     2      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      66
                                              4 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      22
                                              2 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      44
                                              4 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      44
                                              2 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Capture_Init_Default                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Capture_Init_Default
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _Timer1_Disable
   _Timer1_Enable
   _Timer1_Init_Default
   ___lldiv
     ___llmod (ARG)
   ___llmod
   ___lwdiv
     ___llmod (ARG)
   _hex_to_bit_string
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _strcat
     _hex_to_bit_string (ARG)
     _strcpy (ARG)
       _strlen (ARG)
     _strlen (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     30      75       5       91.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6F      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      34        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 10 21:19:16 2021

        ?_CCP1_Capture_Init_Default 0001                                  l23 2746  
                                l70 1FD4                                  l71 2030  
                                l80 2538                                  l66 1F6E  
                                l68 1F90                                  l92 1D04  
                                l69 1FB2                                  l86 2586  
                                l89 26CE                 ___wmul@multiplicand 0003  
                               l110 26A6                                 l125 1F68  
                               l250 108A                                 l163 274C  
                               l323 2196                                 l316 2186  
                               l166 2754                                 l169 2758  
                               l259 1178                                 l286 2298  
                               l289 271A                                 l716 221E  
                               l709 220E                                 l734 1C1E  
                               l727 1BFE                                 l744 1DD4  
                               l737 1DB4                                 l780 2304  
                               l787 230C                                 l967 24EA  
                               l996 2076                                 l999 20B8  
                               u990 1DE8                                 u991 1DE4  
                               _pad 2032                                 _isr 0808  
                               wreg 000FE8                  _current_entry_mode 007C  
                              l1001 20F2                                l1006 17D6  
                              l1030 154A                                l1016 199E  
                              l1008 17DE                                l1050 244A  
                              l1107 1E9E                                l1115 25CA  
                              l1043 179E                                l1131 2608  
                              l1125 26F4                                l1118 275A  
                              l1081 1B2E                                l1137 2676  
                              l1049 2442                                l1084 2640  
                              l1092 249C                                l2301 1D24  
                              l3101 104E                                l1078 1B26  
                              l2311 1D9C                                l2303 1D2C  
                              l3111 1062                                l3103 1052  
                              l2401 1A12                                l2313 1DAE  
                              l2305 1D40                                l2241 1DE8  
                              l2321 2062                                l3201 1230  
                              l3121 10A6                                l3113 1076  
                              l3105 105C                                l2411 1A3E  
                              l2307 1D4E                                l2243 1DFA  
                              l2331 20C6                                l2323 206E  
                              l2315 2032                                l3211 1364  
                              l3203 1248                                l3131 10F2  
                              l3123 10AA                                l3115 107A  
                              l2341 244C                                l2421 1AE6  
                              l2413 1A72                                l2405 1A18  
                              l2309 1D7C                                l2245 1E04  
                              l2253 2588                                l2261 2642  
                              l2333 20DA                                l2325 2082  
                              l2317 2040                                l2501 1538  
                              l3221 13B4                                l3213 1390  
                              l3205 1260                                l3141 111C  
                              l3133 110C                                l3125 10B4  
                              l3117 108C                                l2431 1F6A  
                              l2271 26F6                                l2343 2450  
                              l2423 1AF8                                l2407 1A2E  
                              l2247 1E22                                l2239 1DD6  
                              l2255 2594                                l2263 264E  
                              l2327 2096                                l2319 2054  
                              l2511 15C2                                l2503 1558  
                              l3231 13E0                                l3223 13C8  
                              l3215 139A                                l3207 1262  
                              l3143 112E                                l3135 1116  
                              l3127 10C6                                l3119 10A4  
                              l2441 1F9A                                l2433 1F70  
                              l2273 2712                                l2337 260A  
                              l2345 2464                                l2425 1B0A  
                              l2417 1AA8                                l2409 1A36  
                              l2281 1B5A                                l2249 1E58  
                              l2257 25A6                                l2265 2652  
                              l2329 209A                                l2361 1806  
                              l2353 17A0                                l2521 1644  
                              l2513 15D0                                l2505 155A  
                              l2601 2426                                l3241 140E  
                              l3217 13A0                                l3209 1274  
                              l3161 1186                                l3145 1132  
                              l3129 10D8                                l2611 2744  
                              l2451 1FD6                                l2443 1FA4  
                              l2435 1F78                                l2347 2492  
                              l2291 1BC4                                l2283 1B62  
                              l2259 25AA                                l2267 266A  
                              l2371 189A                                l2363 180E  
                              l2355 17AE                                l2531 16FC  
                              l2515 15F0                                l2523 1656  
                              l2507 157E                                l3315 150A  
                              l2603 25CC                                l3251 144E  
                              l3243 143E                                l3235 13F4  
                              l3227 13D0                                l3171 11B8  
                              l3163 1194                                l3155 1152  
                              l3147 1142                                l3091 103E  
                              l2453 1FDE                                l2445 1FB4  
                              l2437 1F82                                l2701 2692  
                              l2621 24FA                                l2613 24EE  
                              l2349 2496                                l3317 1A5C  
                              l2293 1BE4                                l2285 1B76  
                              l2277 1B30                                l2381 194E  
                              l2373 18A0                                l2365 1818  
                              l2357 17B0                                l2533 1720  
                              l2541 174E                                l2525 167A  
                              l2517 15FE                                l2509 15B4  
                              l2605 25DC                                l3253 1450  
                              l3245 1440                                l3237 1406  
                              l3229 13DA                                l3181 11E4  
                              l3173 11BC                                l3165 11AC  
                              l3157 1164                                l3149 114C  
                              l3093 1040                                l2607 273C  
                              l3319 200A                                l2455 1FE8  
                              l2447 1FBC                                l2439 1F92  
                              l2703 2698                                l2711 1EC6  
                              l2631 252A                                l2623 24FC  
                              l2615 24F2                                l2391 19B4  
                              l2295 1BE6                                l2287 1B84  
                              l2279 1B3C                                l2383 1968  
                              l2367 181E                                l2375 1904  
                              l2359 17CA                                l2543 175C  
                              l2535 172E                                l2527 16C4  
                              l2471 149C                                l3247 1444  
                              l3191 11EE                                l3183 11E6  
                              l3175 11C0                                l3167 11B0  
                              l3159 1168                                l3095 1042  
                              l3087 1038                                l2609 2740  
                              l2449 1FC6                                l2561 2540  
                              l2721 1F10                                l2713 1ED6  
                              l2625 250C                                l2617 24F4  
                              l2801 2174                                l2393 19B8  
                              l2297 1BF8                                l2289 1B96  
                              l2377 1916                                l2385 1976  
                              l2369 1894                                l2537 1742  
                              l2473 14A0                                l2465 145A  
                              l3249 144A                                l3193 1202  
                              l3185 11E8                                l3177 11CE  
                              l3169 11B4                                l3097 1046  
                              l3089 103A                                l2459 1FF6  
                              l2571 255A                                l2563 2542  
                              l2651 1C28                                l2731 1F50  
                              l2723 1F1A                                l2715 1EE6  
                              l2707 1EA2                                l2627 2510  
                              l2619 24F8                                l2803 2176  
                              l2811 21B6                                l2395 19BC  
                              l2299 1D06                                l2379 1934  
                              l2491 14D2                                l2483 14C6  
                              l2475 14AC                                l2467 147E  
                              l2547 1768                                l3195 1206  
                              l3179 11E0                                l3099 104A  
                              l2573 255E                                l2565 2546  
                              l2661 1C62                                l2653 1C2C  
                              l2581 26AE                                l2733 1F5C  
                              l2725 1F2A                                l2717 1EEE  
                              l2709 1EB2                                l2629 2526  
                              l2741 2752                                l2805 2180  
                              l2821 2208                                l2813 21C2  
                              l2397 19D8                                l2389 19A0  
                              l2549 178C                                l2477 14AE  
                              l2469 148C                                l3197 1216  
                              l2575 2574                                l2567 2548  
                              l2559 253C                                l2671 1CAC  
                              l2663 1C7A                                l2655 1C2E  
                              l2591 26BC                                l2583 26B0  
                              l2735 1F64                                l2727 1F3A  
                              l2719 1F00                                l2743 2756  
                              l2815 21D0                                l2807 2198  
                              l2831 22C4                                l2823 229A  
                              l2751 2226                                l2399 1A0E  
                              l2495 14D8                                l2487 14CC  
                              l2479 14C0                                l3199 122C  
                              l2577 2578                                l2569 254A  
                              l2681 1CD0                                l2673 1CB8  
                              l2665 1C90                                l2657 1C32  
                              l2649 1C20                                l2593 26C0  
                              l2585 26B4                                l2729 1F40  
                              l2817 21EE                                l2809 21AE  
                              l2841 22F8                                l2833 22D2  
                              l2825 22A2                                l2761 227A  
                              l2753 2254                                l2745 2222  
                              l2691 1CF8                                l2683 1CD6  
                              l2675 1CBE                                l2667 1C96  
                              l2659 1C4A                                l2587 26B6  
                              l2579 26AA                                l2739 2748  
                              l2819 21FE                                l2843 22FE  
                              l2835 22D8                                l2827 22B4  
                              l2763 228A                                l2755 2260  
                              l2499 14E4                                l2595 23EA  
                              l2693 1CFC                                l2685 1CEC  
                              l2677 1CC4                                l2669 1CA6  
                              l2589 26B8                                l2837 22EE  
                              l2829 22BC                                l2765 2290  
                              l2757 2268                                l2597 23F2  
                              l2781 24DA                                l2773 249E  
                              ?_pad 0011                                l2695 1D00  
                              l2687 1CF0                                l2679 1CCA  
                              l2791 2122                                l2839 22F6  
                              l2759 2278                                l2599 2400  
                              l2775 24AE                                l2689 1CF4  
                              l2697 2678                                l2793 212E  
                              l2785 20F4                                l2777 24B6  
                              l2769 26D0                                l2699 2688  
                              l2795 213C                                l2787 2104  
                              l2779 24BE                                l2797 2146  
                              l2789 211A                                l2799 2164  
                              ?_isr 0001                                STR_1 1023  
                              u1000 1DFA                                u1001 1DF6  
                              u1010 1E22                                u1011 1E1E  
                              u1100 1D4E                                u1020 1E58  
                              u1101 1D4A                                u1021 1E54  
                              u1110 1D7C                                u1030 25CA  
                              u1111 1D78                                u1031 25C6  
                              u1040 266A                                u1120 2040  
                              u1200 17AE                                u1041 2666  
                              u1121 203C                                u1201 17AA  
                              u1130 2062                                u1210 17CA  
                              u1051 1B36                                u1131 205E  
                              u1211 17C6                                u1300 1AE0  
                              u1060 1B5A                                u1140 20B8  
                              u1220 1916                                u1301 1ADA  
                              u1061 1B56                                u1141 20B4  
                              u1221 1912                                u1310 1AE2  
                              u1070 1B84                                u1150 20C6  
                              u1230 1934                                u1071 1B80  
                              u1151 20C2                                u1231 1930  
                              u2007 123A                                u1160 263A  
                              u1320 1AF8                                u1080 1BC4  
                              u1240 194E                                u1400 1640  
                              u1161 2634                                u1321 1AF4  
                              u1081 1BC0                                u1241 194A  
                              u2017 1252                                u1170 263C  
                              u1330 1B0A                                u1090 1D24  
                              u1250 1968                                u1410 1656  
                              u2107 1C84                                u1331 1B06  
                              u1091 1D20                                u1251 1964  
                              u1411 1652                                u2027 1418  
                              u1500 1EE6                                u1180 2464  
                              u1260 1976                                u1420 167A  
                              u1340 147E                                u2117 1C9C  
                              u1501 1EE2                                u1181 2460  
                              u1261 1972                                u1421 1676  
                              u1341 147A                                u2037 1430  
                              u1510 1F00                                u1190 2492  
                              u1270 19D8                                u1430 1720  
                              u1350 154A                                u2207 1FA8  
                              u2127 1CAE                                u1511 1EFC  
                              u2047 2530                                u1191 248E  
                              u1271 19D4                                u1431 171C  
                              u1351 1546                                u1520 1F10  
                              u1600 213C                                u1280 1A0E  
                              u1360 1558                                u1440 2442  
                              u2217 1FB6                                u2137 1CE0  
                              u2057 269E                                u1521 1F0C  
                              u1601 2138                                u1281 1A0A  
                              u1361 1554                                u1441 243E  
                              u1530 1F2A                                u1610 2164  
                              u1290 1A2A                                u1370 157E  
                              u1450 2608                                u2227 1FC0  
                              u2147 257E                                u2067 26C6  
                              u1531 1F26                                u1611 2160  
                              u1291 1A26                                u1371 157A  
                              u1451 2604                                u1460 2688  
                              u1540 1F3A                                u1620 21AE  
                              u1380 15C2                                u2237 1FCA  
                              u2157 1F72                                u2077 1C3C  
                              u1461 2684                                u1541 1F36  
                              u1621 21AA                                u1381 15BE  
                              u1550 1F50                                u1470 1EB2  
                              u1630 21D0                                u1390 163E  
                              u2247 1FD8                                u2167 1F7C  
                              u2087 1C54                                u1551 1F4C  
                              u1471 1EAE                                u1631 21CC  
                              u1391 1638                                u1480 1EC2  
                              u1640 21EE                                u2257 1FE2  
                              u2177 1F86                                u2097 1C6C  
                              u1481 1EBE                                u1641 21EA  
                              u1490 1ED6                                u1650 22B4  
                              u1570 2254                                u2267 1FEC  
                              u2187 1F94                                u1491 1ED2  
                              u1651 22B0                                u1571 2250  
                              u1660 22D2                                u1580 228A  
                              u1564 223A                                u1900 1178  
                              u2197 1F9E                                u1661 22CE  
                              u1581 2286                                u1565 2236  
                              u1901 1174                                u1590 211A  
                              u1670 22EE                                u1910 1186  
                              u1591 2116                                u1671 22EA  
                              u1911 1182                                u1920 11CE  
                              u1921 11CA                                u1930 1216  
                              u1931 1212                                u1940 1274  
                              u1860 108A                                u1941 1270  
                              u1861 1086                                u1950 13B0  
                              u1951 13AC                                u1871 10BE  
                              u1960 13F0                                u1961 13EC  
                              u1881 10D0                                u1890 1142  
                              u1891 113E                                u1977 1096  
                              u1987 119E                                u1997 1220  
                              _RCON 000FD0                                _dbuf 0100  
                              _atoi 19A0                                _main 1038  
                              _prec 0072                                _nout 00B8  
                              pad@i 0018                                pad@p 0015  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001A  
                              fsr2l 000FD9                                btemp 007F  
                              _utoa 17A0                                prodh 000FF4  
                              prodl 000FF3                                start 080E  
                      ___param_bank 000000   __end_of_CCP1_Capture_Init_Default 2748  
                             ??_pad 0017                               ??_isr 0001  
           __end_of_LCD_Init_ECE376 1D06                               ?_atoi 0008  
                             ?_main 0001                               _CCPR1 000FBE  
                             _CCPR2 000FBB                     __end_of___lldiv 2198  
                             ?_utoa 001C                     __end_of___lodiv 1C20  
                             _T1CON 000FCD                     __end_of___llmod 2220  
                             _T3CON 000FB1                     __end_of___lomod 1DD6  
                   __end_of___lwdiv 230E                               i2l244 23E6  
                      vfpfcnvrt@fmt 003E                        vfpfcnvrt@llu 0046  
                             _PORTB 000F81                               _PORTC 000F82  
                             _PORTD 000F83                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
 LCD_set_cursor_position@ddram_addr 0006            __end_of_result_msg_title 1023  
                             _flags 0074                               _fputc 1DD6  
                             _fputs 2588                     __end_of_isdigit 2642  
                             atoi@n 0015                               pad@fp 0011  
                             atoi@s 0008                               _width 0070  
                             _putch 275A                               main@i 00AA  
  __size_of_LCD_set_cursor_position 00CA                  main@num_of_seconds 00A4  
                   __end_of_isspace 249E                               tablat 000FF5  
      LCD_write_data_byte_4bit@data 0004               __end_of_Timer1_Enable 2756  
                             plusw1 000FE3                               plusw2 000FDB  
                             ttemp5 0080                               ttemp6 0083  
                             ttemp7 0087                               utoa@d 001E  
                             utoa@i 003A                               utoa@n 0032  
                             utoa@p 002E                               utoa@w 0030  
                             status 000FD8                               wtemp8 0080  
                   __end_of_sprintf 24EC         LCD_set_cursor_position@line 0007  
                  ___lodiv@dividend 0001         __end_of_Timer1_Init_Default 274E  
                   __initialization 230E                        __end_of_atoi 1B30  
                      __end_of_main 145A                        __end_of_utoa 19A0  
                            ??_atoi 000A                              ??_main 006E  
       ??_LCD_write_instr_byte_4bit 0003         ??_LCD_write_instr_byte_8bit 0003  
                            ??_utoa 0026                       __activetblptr 000002  
                  ___lodiv@quotient 0011                              _ADCON1 000FC1  
                    _Timer1_Disable 2756                              ?_fputc 0001  
                  ___llmod@dividend 0001                              ?_fputs 000A  
                            ?_putch 0001                              i2l3071 239E  
                            i2l3081 23E0                              i2l3073 23B0  
                            i2l3083 23E4                              i2l3075 23B2  
                            i2l3067 2382                              i2l3077 23C0  
                            i2l3069 2390                              i2l3079 23CE  
                     vfpfcnvrt@done 004E                      _start_game_msg 100F  
                            _STKPTR 000FFC                        vfprintf@cfmt 0058  
                            ___wmul 26F6                           ??___lldiv 0012  
                         ??___lodiv 0011                           ??___llmod 0009  
                         ??___lomod 0011                           ??___lwdiv 000E  
                  __end_of_init_msg 100F                              clear_0 2354  
                            clear_1 2360                              clear_2 236C  
                  ?_LCD_Init_ECE376 0001                              pad@buf 0013  
                            _strcat 26D0                              _strcpy 25CC  
                            _strlen 2642    __end_of_LCD_write_data_byte_4bit 253A  
                     main@num_of_ms 00A6                       main@num_of_us 00A8  
                            fputc@c 0001                              fputs@c 000E  
                            fputs@i 000F                        __pdataCOMRAM 007B  
                            fputs@s 000A                           ??_isdigit 0003  
            __end_of_Timer1_Disable 275A                        __mediumconst 0000  
                         ??_isspace 0003                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                            putch@c 0001                    __end_of_vfprintf 244C  
                            utoa@fp 001C                           ??_sprintf 0064  
            __end_of_start_game_msg 101B                          __accesstop 0080  
           __end_of__initialization 2372           _LCD_write_instr_byte_4bit 253A  
         _LCD_write_instr_byte_8bit 26A8                       ___rparam_used 000001  
             main@stkptr_reg_string 0090                      __pcstackCOMRAM 0001  
                      __pidataBANK0 271C         ??_CCP1_Capture_Init_Default 0001  
                     __end_of_fputc 1EA0                       __end_of_fputs 25CC  
                     __end_of_putch 275C                     ?_Timer1_Disable 0001  
                     _init_complete 0078               _timer1_overflow_count 00B0  
           _LCD_set_cursor_position 1EA0                             ??_fputc 0005  
                           ??_fputs 000E                             ??_putch 0001  
                        __pbssBANK0 00B0                          __pbssBANK1 0100  
                    _game_done_flag 00BA                             ?___wmul 0001  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
               main@rcon_reg_string 0080                             ?_strcat 000D  
                           ?_strcpy 0005                             ?_strlen 0001  
                __size_of_vfpfcnvrt 0346            _LCD_write_data_byte_4bit 24EC  
         _CCP1_Capture_Init_Default 273C                    ___lomod@dividend 0001  
                           __Hparam 0000                             __Lparam 0000  
                           ___lldiv 20F4                     __size_of___wmul 0026  
                           ___lodiv 1B30                             ___llmod 2198  
                           ___lomod 1D06                             ___lwdiv 229A  
                         ?_vfprintf 0052                        __psmallconst 1000  
                           __pcinit 230E                             __ramtop 1000  
                           __ptext0 1038                             __ptext1 26D0  
                           __ptext2 25CC                             __ptext3 249E  
                           __ptext4 23EA                             __ptext5 145A  
                           __ptext6 17A0                             __ptext7 2032  
                           __ptext8 2642                             __ptext9 2588  
                   __size_of_strcat 0026                     __size_of_strcpy 003E  
                   __size_of_strlen 0036                        __size_of_pad 00C2  
                           _isdigit 260A                        __size_of_isr 1BE2  
         ??_LCD_set_cursor_position 0006                             _isspace 244C  
                      _elapsed_time 00B4                             atoi@neg 000E  
                           _sprintf 249E                      __pintcode_body 2380  
              end_of_initialization 2372                             fputc@fp 0003  
                     __Lmediumconst 0000                             int_func 2380  
                           fputs@fp 000C                     ___lldiv@divisor 000E  
                   ___lldiv@counter 0016                          _shift_mode 0077  
                 __end_of_vfpfcnvrt 17A0                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
      __size_of_Timer1_Init_Default 0006                          ??_vfprintf 0058  
                           strcpy@d 000B                             strlen@a 0003  
                           strcpy@s 0009                             strlen@s 0001  
                        _result_msg 00BB                           _PORTBbits 000F81  
                         _PORTDbits 000F83              __size_of_Timer1_Enable 0004  
LCD_set_cursor_position@pos_on_line 0005                     _address_counter 0076  
                      _CURRENT_DISP 007A                    _current_func_set 007B  
                 _LCD_clear_display 2678                         vfpfcnvrt@ap 0040  
                 _hex_to_bit_string 2220                         vfpfcnvrt@fp 003C  
                    __end_of___wmul 271C                       __pidataCOMRAM 274E  
                  ??_Timer1_Disable 0001                  ?_LCD_clear_display 0001  
                ?_hex_to_bit_string 0001                      __end_of_strcat 26F6  
                    __end_of_strcpy 260A                      __end_of_strlen 2678  
               start_initialization 230E                     ___lodiv@divisor 0009  
                   ___lodiv@counter 0019                 ??_LCD_clear_display 0005  
                       __end_of_pad 20F4                         __end_of_isr 23EA  
               ??_hex_to_bit_string 0003            __size_of_LCD_Init_ECE376 00E6  
                     _Timer1_Enable 2752                     ___llmod@divisor 0005  
                   ___llmod@counter 0009                         vfprintf@fmt 0054  
         __end_of_LCD_clear_display 26A8           __end_of_hex_to_bit_string 229A  
                          ??___wmul 0005                         __pdataBANK0 00D5  
        ??_LCD_write_data_byte_4bit 0003                            ??_strcat 0011  
                          ??_strcpy 0009                            ??_strlen 0003  
                       __pbssCOMRAM 0070                       __pcstackBANK0 0080  
                    ?_Timer1_Enable 0001                           _atoi$1177 0010  
                         _atoi$1178 0014                           _atoi$1179 0012  
                         _main$1491 00A0                    ___lwdiv@dividend 000A  
                         __pintcode 0808                           _disp_16x2 007D  
                 _LCD_enable_toggle 1F6A                            ?___lldiv 000A  
                          ?___lodiv 0001                            ?___llmod 0001  
                          ?___lomod 0001                            ?___lwdiv 000A  
                ?_LCD_enable_toggle 0001                   __size_of_vfprintf 0062  
                   ___lomod@divisor 0009                         __smallconst 1000  
                   ___lomod@counter 0011                            ?_isdigit 0001  
               ??_LCD_enable_toggle 0001                            ?_isspace 0001  
                  ___lwdiv@quotient 000E                            ?_sprintf 005A  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
               _Timer1_Init_Default 2748                      __size_of_putch 0002  
                    ___wmul@product 0005               _hex_to_bit_string$630 0006  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                 ??_LCD_Init_ECE376 0005                            _PIE1bits 000F9D  
                          _PIE2bits 000FA0                       _DISP_BIT_MODE 0079  
                          i2u182_40 2390                            i2u182_41 238C  
                          i2u183_40 239E                            i2u183_41 239A  
                          i2u184_40 23C0                            i2u184_41 23BC  
         __end_of_LCD_enable_toggle 2032                            i2u185_40 23CE  
                          i2u185_41 23CA                            _PIR1bits 000F9E  
        __size_of_LCD_clear_display 0030          __size_of_hex_to_bit_string 007A  
                         main@F3014 00E5                           main@F3016 00D5  
              ?_Timer1_Init_Default 0001                           _vfpfcnvrt 145A  
                         main@i_623 00AE                           main@i_624 00AF  
                         main@i_618 00AD                           main@i_597 00AB  
                         main@i_598 00AC                   ___wmul@multiplier 0001  
    LCD_write_instr_byte_4bit@instr 0004                        _isspace$1195 0007  
                   ??_Timer1_Enable 0001                           copy_data0 2322  
                         copy_data1 2342      LCD_write_instr_byte_8bit@instr 0004  
                          __Hrparam 0000                          vfprintf@ap 0056  
                          __Lrparam 0000                          vfprintf@fp 0052  
             ??_Timer1_Init_Default 0001            hex_to_bit_string@hex_val 0005  
                  __size_of___lldiv 00A4                    __size_of___lodiv 00F0  
                  __size_of___llmod 0088                    __size_of___lomod 00D0  
                        ?_vfpfcnvrt 003C                    __size_of___lwdiv 0074  
          ?_LCD_set_cursor_position 0005                  hex_to_bit_string@i 0008  
                        sprintf@fmt 005C                          strcat@dest 000D  
                  __size_of_isdigit 0038                     ___lwdiv@divisor 000C  
                  __size_of_isspace 0052                     ___lwdiv@counter 0010  
                          __ptext10 1DD6                            __ptext11 275A  
                          __ptext20 2198                            __ptext12 1D06  
                          __ptext21 20F4                            __ptext13 1B30  
                          __ptext30 253A                            __ptext22 2748  
                          __ptext14 19A0                            __ptext31 1F6A  
                          __ptext23 2752                            __ptext15 244C  
                          __ptext32 273C                            __ptext24 2756  
                          __ptext16 260A                            __ptext25 24EC  
                          __ptext17 26F6                            __ptext26 1EA0  
                          __ptext18 2220                            __ptext27 2678  
                          __ptext19 229A                            __ptext28 26A8  
                          __ptext29 1C20                    __size_of_sprintf 004E  
                        strcpy@dest 0005                       __size_of_atoi 0190  
                     __size_of_main 0422                            _init_msg 1001  
                     __size_of_utoa 0200          __size_of_LCD_enable_toggle 00C8  
                  _result_msg_title 101B                            int$flags 007F  
                          _vfprintf 23EA  __size_of_LCD_write_instr_byte_4bit 004E  
__size_of_LCD_write_instr_byte_8bit 0028          ?_LCD_write_instr_byte_4bit 0001  
        ?_LCD_write_instr_byte_8bit 0001                      _vfpfcnvrt$1159 0050  
                        _INTCONbits 000FF2                            isdigit@c 0001  
                          intlevel2 0000                           sprintf@ap 0066  
                         strcat@src 000F                            isspace@c 0001  
                  ___lldiv@dividend 000A                           strcpy@src 0007  
   __end_of_LCD_set_cursor_position 1F6A                         ??_vfpfcnvrt 0042  
       hex_to_bit_string@bit_string 00CC   __end_of_LCD_write_instr_byte_4bit 2588  
                          sprintf@f 0068                            sprintf@s 005A  
 __end_of_LCD_write_instr_byte_8bit 26D0                    ___lldiv@quotient 0012  
                   _LCD_Init_ECE376 1C20             __size_of_Timer1_Disable 0004  
 __size_of_LCD_write_data_byte_4bit 004E           ?_LCD_write_data_byte_4bit 0001  
                 _current_disp_ctrl 007E  __size_of_CCP1_Capture_Init_Default 000C  
