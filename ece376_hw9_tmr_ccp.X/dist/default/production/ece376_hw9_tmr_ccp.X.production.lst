

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Nov 11 01:24:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4620 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  00279A                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for _current_disp_ctrl
    97  00279A  08                 	db	8
    98                           
    99                           	psect	idataBANK0
   100  002760                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for main@F3020
   104  002760  52                 	db	82
   105  002761  43                 	db	67
   106  002762  4F                 	db	79
   107  002763  4E                 	db	78
   108  002764  3A                 	db	58
   109  002765  20                 	db	32
   110  002766  00                 	db	0
   111  002767  00                 	db	0
   112  002768  00                 	db	0
   113  002769  00                 	db	0
   114  00276A  00                 	db	0
   115  00276B  00                 	db	0
   116  00276C  00                 	db	0
   117  00276D  00                 	db	0
   118  00276E  00                 	db	0
   119  00276F  00                 	db	0
   120                           
   121                           ;initializer for _isr_count
   122  002770  01                 	db	1
   123                           
   124                           ;initializer for _current_func_set
   125  002771  30                 	db	48
   126                           
   127                           ;initializer for _current_entry_mode
   128  002772  06                 	db	6
   129                           
   130                           ;initializer for _disp_16x2
   131  002773  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134  002774                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for main@F3022
   138  002774  53                 	db	83
   139  002775  54                 	db	84
   140  002776  4B                 	db	75
   141  002777  50                 	db	80
   142  002778  54                 	db	84
   143  002779  52                 	db	82
   144  00277A  3A                 	db	58
   145  00277B  20                 	db	32
   146  00277C  00                 	db	0
   147  00277D  00                 	db	0
   148  00277E  00                 	db	0
   149  00277F  00                 	db	0
   150  002780  00                 	db	0
   151  002781  00                 	db	0
   152  002782  00                 	db	0
   153  002783  00                 	db	0
   154                           
   155                           	psect	smallconst
   156  001000                     __psmallconst:
   157                           	callstack 0
   158  001000  00                 	db	0
   159  001001                     _init_msg:
   160                           	callstack 0
   161  001001  49                 	db	73
   162  001002  6E                 	db	110
   163  001003  69                 	db	105
   164  001004  74                 	db	116
   165  001005  20                 	db	32
   166  001006  73                 	db	115
   167  001007  75                 	db	117
   168  001008  63                 	db	99
   169  001009  63                 	db	99
   170  00100A  65                 	db	101
   171  00100B  73                 	db	115
   172  00100C  73                 	db	115
   173  00100D  21                 	db	33
   174  00100E  00                 	db	0
   175  00100F                     __end_of_init_msg:
   176                           	callstack 0
   177  00100F                     _start_game_msg:
   178                           	callstack 0
   179  00100F  47                 	db	71
   180  001010  61                 	db	97
   181  001011  6D                 	db	109
   182  001012  65                 	db	101
   183  001013  20                 	db	32
   184  001014  62                 	db	98
   185  001015  65                 	db	101
   186  001016  67                 	db	103
   187  001017  75                 	db	117
   188  001018  6E                 	db	110
   189  001019  21                 	db	33
   190  00101A  00                 	db	0
   191  00101B                     __end_of_start_game_msg:
   192                           	callstack 0
   193  00101B                     _result_msg_title:
   194                           	callstack 0
   195  00101B  52                 	db	82
   196  00101C  65                 	db	101
   197  00101D  73                 	db	115
   198  00101E  75                 	db	117
   199  00101F  6C                 	db	108
   200  001020  74                 	db	116
   201  001021  3A                 	db	58
   202  001022  00                 	db	0
   203  001023                     __end_of_result_msg_title:
   204                           	callstack 0
   205  0000                     _CCPR2	set	4027
   206  0000                     _CCPR1	set	4030
   207  0000                     _INTCONbits	set	4082
   208  0000                     _PORTBbits	set	3969
   209  0000                     _RCONbits	set	4048
   210  0000                     _STKPTR	set	4092
   211  0000                     _RCON	set	4048
   212  0000                     _PORTB	set	3969
   213  0000                     _TRISB	set	3987
   214  0000                     _ADCON1	set	4033
   215  0000                     _PIR1bits	set	3998
   216  0000                     _T1CON	set	4045
   217  0000                     _PORTC	set	3970
   218  0000                     _PORTD	set	3971
   219  0000                     _TRISC	set	3988
   220  0000                     _PORTDbits	set	3971
   221  0000                     _LATCbits	set	3979
   222  0000                     _TRISD	set	3989
   223  0000                     _LATDbits	set	3980
   224  0000                     _PIE2bits	set	4000
   225  0000                     _CCP2CON	set	4026
   226  0000                     _PIE1bits	set	3997
   227  0000                     _T3CON	set	4017
   228  0000                     _CCP1CON	set	4029
   229  001023                     STR_1:
   230  001023  25                 	db	37
   231  001024  2D                 	db	45
   232  001025  33                 	db	51	;'3'
   233  001026  75                 	db	117	;'u'
   234  001027  73                 	db	115	;'s'
   235  001028  3A                 	db	58	;':'
   236  001029  25                 	db	37
   237  00102A  2D                 	db	45
   238  00102B  33                 	db	51	;'3'
   239  00102C  75                 	db	117	;'u'
   240  00102D  6D                 	db	109	;'m'
   241  00102E  73                 	db	115	;'s'
   242  00102F  3A                 	db	58	;':'
   243  001030  25                 	db	37
   244  001031  2D                 	db	45
   245  001032  33                 	db	51	;'3'
   246  001033  75                 	db	117	;'u'
   247  001034  75                 	db	117	;'u'
   248  001035  73                 	db	115	;'s'
   249  001036  00                 	db	0
   250  001037  00                 	db	0	; dummy byte at the end
   251  0000                     
   252                           ; #config settings
   253                           
   254                           	psect	cinit
   255  0022B8                     __pcinit:
   256                           	callstack 0
   257  0022B8                     start_initialization:
   258                           	callstack 0
   259  0022B8                     __initialization:
   260                           	callstack 0
   261                           
   262                           ; Initialize objects allocated to BANK1 (16 bytes)
   263                           ; load TBLPTR registers with __pidataBANK1
   264  0022B8  0E74               	movlw	low __pidataBANK1
   265  0022BA  6EF6               	movwf	tblptrl,c
   266  0022BC  0E27               	movlw	high __pidataBANK1
   267  0022BE  6EF7               	movwf	tblptrh,c
   268  0022C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   269  0022C2  6EF8               	movwf	tblptru,c
   270  0022C4  EE01  F020         	lfsr	0,__pdataBANK1
   271  0022C8  EE10 F010          	lfsr	1,16
   272  0022CC                     copy_data0:
   273  0022CC  0009               	tblrd		*+
   274  0022CE  CFF5 FFEE          	movff	tablat,postinc0
   275  0022D2  50E5               	movf	postdec1,w,c
   276  0022D4  50E1               	movf	fsr1l,w,c
   277  0022D6  E1FA               	bnz	copy_data0
   278                           
   279                           ; Initialize objects allocated to BANK0 (20 bytes)
   280                           ; load TBLPTR registers with __pidataBANK0
   281  0022D8  0E60               	movlw	low __pidataBANK0
   282  0022DA  6EF6               	movwf	tblptrl,c
   283  0022DC  0E27               	movlw	high __pidataBANK0
   284  0022DE  6EF7               	movwf	tblptrh,c
   285  0022E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   286  0022E2  6EF8               	movwf	tblptru,c
   287  0022E4  EE00  F0EA         	lfsr	0,__pdataBANK0
   288  0022E8  EE10 F014          	lfsr	1,20
   289  0022EC                     copy_data1:
   290  0022EC  0009               	tblrd		*+
   291  0022EE  CFF5 FFEE          	movff	tablat,postinc0
   292  0022F2  50E5               	movf	postdec1,w,c
   293  0022F4  50E1               	movf	fsr1l,w,c
   294  0022F6  E1FA               	bnz	copy_data1
   295                           
   296                           ; Initialize objects allocated to COMRAM (1 bytes)
   297                           ; load TBLPTR registers with __pidataCOMRAM
   298  0022F8  0E9A               	movlw	low __pidataCOMRAM
   299  0022FA  6EF6               	movwf	tblptrl,c
   300  0022FC  0E27               	movlw	high __pidataCOMRAM
   301  0022FE  6EF7               	movwf	tblptrh,c
   302  002300  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   303  002302  6EF8               	movwf	tblptru,c
   304  002304  0009               	tblrd		*+	;fetch initializer
   305  002306  CFF5 F074          	movff	tablat,__pdataCOMRAM
   306                           
   307                           ; Clear objects allocated to BANK1 (32 bytes)
   308  00230A  EE01  F000         	lfsr	0,__pbssBANK1
   309  00230E  0E20               	movlw	32
   310  002310                     clear_0:
   311  002310  6AEE               	clrf	postinc0,c
   312  002312  06E8               	decf	wreg,f,c
   313  002314  E1FD               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK0 (54 bytes)
   316  002316  EE00  F080         	lfsr	0,__pbssBANK0
   317  00231A  0E36               	movlw	54
   318  00231C                     clear_1:
   319  00231C  6AEE               	clrf	postinc0,c
   320  00231E  06E8               	decf	wreg,f,c
   321  002320  E1FD               	bnz	clear_1
   322                           
   323                           ; Clear objects allocated to COMRAM (10 bytes)
   324  002322  EE00  F06A         	lfsr	0,__pbssCOMRAM
   325  002326  0E0A               	movlw	10
   326  002328                     clear_2:
   327  002328  6AEE               	clrf	postinc0,c
   328  00232A  06E8               	decf	wreg,f,c
   329  00232C  E1FD               	bnz	clear_2
   330  00232E                     end_of_initialization:
   331                           	callstack 0
   332  00232E                     __end_of__initialization:
   333                           	callstack 0
   334  00232E  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  002330  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  002332  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  002334  6EF8               	movwf	tblptru,c
   338  002336  0100               	movlb	0
   339  002338  EF1C  F008         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342  00006A                     __pbssCOMRAM:
   343                           	callstack 0
   344  00006A                     _width:
   345                           	callstack 0
   346  00006A                     	ds	2
   347  00006C                     _prec:
   348                           	callstack 0
   349  00006C                     	ds	2
   350  00006E                     _flags:
   351                           	callstack 0
   352  00006E                     	ds	2
   353  000070                     	ds	1
   354  000071                     _init_complete:
   355                           	callstack 0
   356  000071                     	ds	1
   357  000072                     _DISP_BIT_MODE:
   358                           	callstack 0
   359  000072                     	ds	1
   360  000073                     _CURRENT_DISP:
   361                           	callstack 0
   362  000073                     	ds	1
   363                           
   364                           	psect	dataCOMRAM
   365  000074                     __pdataCOMRAM:
   366                           	callstack 0
   367  000074                     _current_disp_ctrl:
   368                           	callstack 0
   369  000074                     	ds	1
   370                           
   371                           	psect	bssBANK0
   372  000080                     __pbssBANK0:
   373                           	callstack 0
   374  000080                     	ds	10
   375  00008A                     _timer1_overflow_count:
   376                           	callstack 0
   377  00008A                     	ds	4
   378  00008E                     _elapsed_time:
   379                           	callstack 0
   380  00008E                     	ds	4
   381  000092                     _nout:
   382                           	callstack 0
   383  000092                     	ds	2
   384  000094                     _num_of_us:
   385                           	callstack 0
   386  000094                     	ds	2
   387  000096                     _num_of_ms:
   388                           	callstack 0
   389  000096                     	ds	2
   390  000098                     _num_of_seconds:
   391                           	callstack 0
   392  000098                     	ds	2
   393  00009A                     _game_done_flag:
   394                           	callstack 0
   395  00009A                     	ds	1
   396  00009B                     _address_counter:
   397                           	callstack 0
   398  00009B                     	ds	1
   399  00009C                     _result_msg:
   400                           	callstack 0
   401  00009C                     	ds	17
   402  0000AD                     hex_to_bit_string@bit_string:
   403                           	callstack 0
   404  0000AD                     	ds	9
   405                           
   406                           	psect	dataBANK0
   407  0000EA                     __pdataBANK0:
   408                           	callstack 0
   409  0000EA                     main@F3020:
   410                           	callstack 0
   411  0000EA                     	ds	16
   412  0000FA                     _isr_count:
   413                           	callstack 0
   414  0000FA                     	ds	1
   415  0000FB                     _current_func_set:
   416                           	callstack 0
   417  0000FB                     	ds	1
   418  0000FC                     _current_entry_mode:
   419                           	callstack 0
   420  0000FC                     	ds	1
   421  0000FD                     	ds	1
   422                           
   423                           	psect	bssBANK1
   424  000100                     __pbssBANK1:
   425                           	callstack 0
   426  000100                     _dbuf:
   427                           	callstack 0
   428  000100                     	ds	32
   429                           
   430                           	psect	dataBANK1
   431  000120                     __pdataBANK1:
   432                           	callstack 0
   433  000120                     main@F3022:
   434                           	callstack 0
   435  000120                     	ds	16
   436                           
   437                           	psect	cstackBANK0
   438  0000B6                     __pcstackBANK0:
   439                           	callstack 0
   440  0000B6                     	ds	2
   441  0000B8                     sprintf@ap:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2
   445  0000B8                     	ds	2
   446  0000BA                     sprintf@f:
   447                           	callstack 0
   448                           
   449                           ; 6 bytes @ 0x4
   450  0000BA                     	ds	6
   451  0000C0                     main@rcon_reg_string:
   452                           	callstack 0
   453                           
   454                           ; 16 bytes @ 0xA
   455  0000C0                     	ds	16
   456  0000D0                     main@stkptr_reg_string:
   457                           	callstack 0
   458                           
   459                           ; 16 bytes @ 0x1A
   460  0000D0                     	ds	16
   461  0000E0                     _main$1590:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x2A
   465  0000E0                     	ds	4
   466  0000E4                     main@i:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x2E
   470  0000E4                     	ds	1
   471  0000E5                     main@i_691:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x2F
   475  0000E5                     	ds	1
   476  0000E6                     main@i_692:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x30
   480  0000E6                     	ds	1
   481  0000E7                     main@i_716:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x31
   485  0000E7                     	ds	1
   486  0000E8                     main@i_718:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x32
   490  0000E8                     	ds	1
   491  0000E9                     main@i_719:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x33
   495  0000E9                     	ds	1
   496                           
   497                           	psect	cstackCOMRAM
   498  000001                     __pcstackCOMRAM:
   499                           	callstack 0
   500  000001                     ??_isr:
   501  000001                     
   502                           ; 1 bytes @ 0x0
   503  000001                     	ds	4
   504  000005                     ??_LCD_enable_toggle:
   505  000005                     ?_hex_to_bit_string:
   506                           	callstack 0
   507  000005                     ?_strlen:
   508                           	callstack 0
   509  000005                     ?_isdigit:
   510                           	callstack 0
   511  000005                     ?_isspace:
   512                           	callstack 0
   513  000005                     ?___wmul:
   514                           	callstack 0
   515  000005                     ?___llmod:
   516                           	callstack 0
   517  000005                     ?___lodiv:
   518                           	callstack 0
   519  000005                     ?___lomod:
   520                           	callstack 0
   521  000005                     ___wmul@multiplier:
   522                           	callstack 0
   523  000005                     isdigit@c:
   524                           	callstack 0
   525  000005                     isspace@c:
   526                           	callstack 0
   527  000005                     fputc@c:
   528                           	callstack 0
   529  000005                     strlen@s:
   530                           	callstack 0
   531  000005                     ___llmod@dividend:
   532                           	callstack 0
   533  000005                     ___lodiv@dividend:
   534                           	callstack 0
   535  000005                     ___lomod@dividend:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x4
   539  000005                     	ds	2
   540  000007                     ??_hex_to_bit_string:
   541  000007                     ??_isdigit:
   542  000007                     ??_isspace:
   543  000007                     ??_LCD_write_data_byte_4bit:
   544  000007                     ??_LCD_write_instr_byte_4bit:
   545  000007                     ??_LCD_write_instr_byte_8bit:
   546  000007                     ___wmul@multiplicand:
   547                           	callstack 0
   548  000007                     fputc@fp:
   549                           	callstack 0
   550  000007                     strlen@a:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x6
   554  000007                     	ds	1
   555  000008                     LCD_write_data_byte_4bit@data:
   556                           	callstack 0
   557  000008                     LCD_write_instr_byte_4bit@instr:
   558                           	callstack 0
   559  000008                     LCD_write_instr_byte_8bit@instr:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x7
   563  000008                     	ds	1
   564  000009                     ??_LCD_clear_display:
   565  000009                     ??_fputc:
   566  000009                     ??_LCD_Init_ECE376:
   567  000009                     LCD_set_cursor_position@pos_on_line:
   568                           	callstack 0
   569  000009                     hex_to_bit_string@hex_val:
   570                           	callstack 0
   571  000009                     ___wmul@product:
   572                           	callstack 0
   573  000009                     strcpy@dest:
   574                           	callstack 0
   575  000009                     ___llmod@divisor:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0x8
   579  000009                     	ds	1
   580  00000A                     LCD_set_cursor_position@ddram_addr:
   581                           	callstack 0
   582  00000A                     _hex_to_bit_string$724:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x9
   586  00000A                     	ds	1
   587  00000B                     LCD_set_cursor_position@line:
   588                           	callstack 0
   589  00000B                     _isspace$1289:
   590                           	callstack 0
   591  00000B                     strcpy@src:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xA
   595  00000B                     	ds	1
   596  00000C                     ?_atoi:
   597                           	callstack 0
   598  00000C                     hex_to_bit_string@i:
   599                           	callstack 0
   600  00000C                     atoi@s:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0xB
   604  00000C                     	ds	1
   605  00000D                     ___llmod@counter:
   606                           	callstack 0
   607  00000D                     strcpy@s:
   608                           	callstack 0
   609  00000D                     ___lodiv@divisor:
   610                           	callstack 0
   611  00000D                     ___lomod@divisor:
   612                           	callstack 0
   613                           
   614                           ; 8 bytes @ 0xC
   615  00000D                     	ds	1
   616  00000E                     ??_atoi:
   617  00000E                     ?___lwdiv:
   618                           	callstack 0
   619  00000E                     ?___lldiv:
   620                           	callstack 0
   621  00000E                     ___lwdiv@dividend:
   622                           	callstack 0
   623  00000E                     fputs@s:
   624                           	callstack 0
   625  00000E                     ___lldiv@dividend:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0xD
   629  00000E                     	ds	1
   630  00000F                     strcpy@d:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xE
   634  00000F                     	ds	1
   635  000010                     ___lwdiv@divisor:
   636                           	callstack 0
   637  000010                     fputs@fp:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0xF
   641  000010                     	ds	1
   642  000011                     strcat@dest:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x10
   646  000011                     	ds	1
   647  000012                     fputs@c:
   648                           	callstack 0
   649  000012                     ___lwdiv@quotient:
   650                           	callstack 0
   651  000012                     atoi@neg:
   652                           	callstack 0
   653  000012                     ___lldiv@divisor:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x11
   657  000012                     	ds	1
   658  000013                     fputs@i:
   659                           	callstack 0
   660  000013                     strcat@src:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x12
   664  000013                     	ds	1
   665  000014                     ___lwdiv@counter:
   666                           	callstack 0
   667  000014                     _atoi$1271:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x13
   671  000014                     	ds	1
   672  000015                     ?_pad:
   673                           	callstack 0
   674  000015                     ___lomod@counter:
   675                           	callstack 0
   676  000015                     pad@fp:
   677                           	callstack 0
   678  000015                     ___lodiv@quotient:
   679                           	callstack 0
   680                           
   681                           ; 8 bytes @ 0x14
   682  000015                     	ds	1
   683  000016                     _atoi$1273:
   684                           	callstack 0
   685  000016                     ___lldiv@quotient:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x15
   689  000016                     	ds	1
   690  000017                     pad@buf:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x16
   694  000017                     	ds	1
   695  000018                     _atoi$1272:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x17
   699  000018                     	ds	1
   700  000019                     pad@p:
   701                           	callstack 0
   702  000019                     atoi@n:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x18
   706  000019                     	ds	1
   707  00001A                     ___lldiv@counter:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x19
   711  00001A                     	ds	1
   712  00001B                     ??_pad:
   713                           
   714                           ; 1 bytes @ 0x1A
   715  00001B                     	ds	1
   716  00001C                     pad@i:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x1B
   720  00001C                     	ds	1
   721  00001D                     ___lodiv@counter:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x1C
   725  00001D                     	ds	1
   726  00001E                     pad@w:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x1D
   730  00001E                     	ds	2
   731  000020                     ?_utoa:
   732                           	callstack 0
   733  000020                     utoa@fp:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x1F
   737  000020                     	ds	2
   738  000022                     utoa@d:
   739                           	callstack 0
   740                           
   741                           ; 8 bytes @ 0x21
   742  000022                     	ds	8
   743  00002A                     ??_utoa:
   744                           
   745                           ; 1 bytes @ 0x29
   746  00002A                     	ds	8
   747  000032                     utoa@p:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x31
   751  000032                     	ds	2
   752  000034                     utoa@w:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x33
   756  000034                     	ds	2
   757  000036                     utoa@n:
   758                           	callstack 0
   759                           
   760                           ; 8 bytes @ 0x35
   761  000036                     	ds	8
   762  00003E                     utoa@i:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x3D
   766  00003E                     	ds	2
   767  000040                     ?_vfpfcnvrt:
   768                           	callstack 0
   769  000040                     vfpfcnvrt@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x3F
   773  000040                     	ds	2
   774  000042                     vfpfcnvrt@fmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x41
   778  000042                     	ds	2
   779  000044                     vfpfcnvrt@ap:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x43
   783  000044                     	ds	2
   784  000046                     ??_vfpfcnvrt:
   785                           
   786                           ; 1 bytes @ 0x45
   787  000046                     	ds	4
   788  00004A                     vfpfcnvrt@llu:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x49
   792  00004A                     	ds	8
   793  000052                     vfpfcnvrt@done:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x51
   797  000052                     	ds	2
   798  000054                     _vfpfcnvrt$1253:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x53
   802  000054                     	ds	2
   803  000056                     ?_vfprintf:
   804                           	callstack 0
   805  000056                     vfprintf@fp:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x55
   809  000056                     	ds	2
   810  000058                     vfprintf@fmt:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x57
   814  000058                     	ds	2
   815  00005A                     vfprintf@ap:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x59
   819  00005A                     	ds	2
   820  00005C                     vfprintf@cfmt:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x5B
   824  00005C                     	ds	2
   825  00005E                     ?_sprintf:
   826                           	callstack 0
   827  00005E                     sprintf@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x5D
   831  00005E                     	ds	2
   832  000060                     sprintf@fmt:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x5F
   836  000060                     	ds	8
   837  000068                     ??_main:
   838                           
   839                           ; 1 bytes @ 0x67
   840  000068                     	ds	2
   841                           
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 187 in file "ece376_hw9_ccp_capt.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  i               1   51[BANK0 ] unsigned char 
   852 ;;  i               1   50[BANK0 ] unsigned char 
   853 ;;  i               1   49[BANK0 ] unsigned char 
   854 ;;  i               1   48[BANK0 ] unsigned char 
   855 ;;  i               1   47[BANK0 ] unsigned char 
   856 ;;  i               1   46[BANK0 ] unsigned char 
   857 ;;  stkptr_reg_s   16   26[BANK0 ] unsigned char [16]
   858 ;;  rcon_reg_str   16   10[BANK0 ] unsigned char [16]
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Totals:         2      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;Total ram usage:       44 bytes
   873 ;; Hardware stack levels required when called:    9
   874 ;; This function calls:
   875 ;;		_CCP1_Capture_Init_Default
   876 ;;		_LCD_Init_ECE376
   877 ;;		_LCD_clear_display
   878 ;;		_LCD_set_cursor_position
   879 ;;		_LCD_write_data_byte_4bit
   880 ;;		_Timer1_Init_Default
   881 ;;		___lldiv
   882 ;;		___llmod
   883 ;;		___lwdiv
   884 ;;		_hex_to_bit_string
   885 ;;		_sprintf
   886 ;;		_strcat
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  001038                     __ptext0:
   894                           	callstack 0
   895  001038                     _main:
   896                           	callstack 22
   897  001038                     
   898                           ;ece376_hw9_ccp_capt.c: 195:  TRISC |= (1u << 2);
   899  001038  8494               	bsf	148,2,c	;volatile
   900  00103A                     
   901                           ;ece376_hw9_ccp_capt.c: 196:  ADCON1 |= 0x0F;
   902  00103A  0E0F               	movlw	15
   903  00103C  12C1               	iorwf	193,f,c	;volatile
   904  00103E                     
   905                           ;ece376_hw9_ccp_capt.c: 197:  TRISB |= (1u << 0);
   906  00103E  8093               	bsf	147,0,c	;volatile
   907  001040                     
   908                           ;ece376_hw9_ccp_capt.c: 198:     TRISD &= ~(1u << 0);
   909  001040  9095               	bcf	149,0,c	;volatile
   910  001042                     
   911                           ;ece376_hw9_ccp_capt.c: 200:     PORTB = 0x00;
   912  001042  0E00               	movlw	0
   913  001044  6E81               	movwf	129,c	;volatile
   914  001046                     
   915                           ;ece376_hw9_ccp_capt.c: 201:     PORTC = 0x00;
   916  001046  0E00               	movlw	0
   917  001048  6E82               	movwf	130,c	;volatile
   918  00104A                     
   919                           ;ece376_hw9_ccp_capt.c: 202:     PORTD = 0x00;
   920  00104A  0E00               	movlw	0
   921  00104C  6E83               	movwf	131,c	;volatile
   922  00104E                     
   923                           ;ece376_hw9_ccp_capt.c: 205:  LCD_Init_ECE376();
   924  00104E  EC15  F00E         	call	_LCD_Init_ECE376	;wreg free
   925  001052                     
   926                           ;ece376_hw9_ccp_capt.c: 206:     LCD_set_cursor_position(1,1);
   927  001052  0E01               	movlw	1
   928  001054  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   929  001056  0E01               	movlw	1
   930  001058  EC56  F00F         	call	_LCD_set_cursor_position
   931  00105C                     
   932                           ;ece376_hw9_ccp_capt.c: 207:     for(uint8_t i=0; i<13; i++){
   933  00105C  0E00               	movlw	0
   934  00105E  0100               	movlb	0	; () banked
   935  001060  6FE4               	movwf	main@i& (0+255),b
   936  001062                     l3808:
   937                           
   938                           ; BSR set to: 0
   939                           ;ece376_hw9_ccp_capt.c: 208:         LCD_write_data_byte_4bit(init_msg[i]);
   940  001062  0E01               	movlw	low _init_msg
   941  001064  25E4               	addwf	main@i& (0+255),w,b
   942  001066  6EF6               	movwf	tblptrl,c
   943  001068  6AF7               	clrf	tblptrh,c
   944  00106A  0E10               	movlw	high _init_msg
   945  00106C  22F7               	addwfc	tblptrh,f,c
   946  00106E                     	if	0	;There are less than 3 active tblptr bytes
   947  00106E                     	endif
   948  00106E  0008               	tblrd		*
   949  001070  50F5               	movf	tablat,w,c
   950  001072  EC98  F012         	call	_LCD_write_data_byte_4bit
   951  001076                     
   952                           ;ece376_hw9_ccp_capt.c: 209:     }
   953  001076  0100               	movlb	0	; () banked
   954  001078  2BE4               	incf	main@i& (0+255),f,b
   955  00107A                     
   956                           ; BSR set to: 0
   957  00107A  0E0C               	movlw	12
   958  00107C  65E4               	cpfsgt	main@i& (0+255),b
   959  00107E  EF43  F008         	goto	u2691
   960  001082  EF45  F008         	goto	u2690
   961  001086                     u2691:
   962  001086  EF31  F008         	goto	l3808
   963  00108A                     u2690:
   964  00108A                     
   965                           ; BSR set to: 0
   966                           ;ece376_hw9_ccp_capt.c: 210:     LATDbits.LATD0 = 1u;
   967  00108A  808C               	bsf	140,0,c	;volatile
   968  00108C                     
   969                           ; BSR set to: 0
   970                           ;ece376_hw9_ccp_capt.c: 211:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
   971  00108C  0E66               	movlw	102
   972  00108E  6E69               	movwf	(??_main+1)^0,c
   973  001090  0E76               	movlw	118
   974  001092  6E68               	movwf	??_main^0,c
   975  001094  0EC1               	movlw	193
   976  001096                     u2807:
   977  001096  2EE8               	decfsz	wreg,f,c
   978  001098  D7FE               	bra	u2807
   979  00109A  2E68               	decfsz	??_main^0,f,c
   980  00109C  D7FC               	bra	u2807
   981  00109E  2E69               	decfsz	(??_main+1)^0,f,c
   982  0010A0  D7FA               	bra	u2807
   983  0010A2  F000               	nop	
   984  0010A4                     
   985                           ;ece376_hw9_ccp_capt.c: 212:     LATDbits.LATD0 = 0u;
   986  0010A4  908C               	bcf	140,0,c	;volatile
   987  0010A6                     
   988                           ;ece376_hw9_ccp_capt.c: 213:     LCD_clear_display();
   989  0010A6  EC5E  F013         	call	_LCD_clear_display	;wreg free
   990  0010AA                     
   991                           ;ece376_hw9_ccp_capt.c: 214:     LCD_set_cursor_position(1,1);
   992  0010AA  0E01               	movlw	1
   993  0010AC  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   994  0010AE  0E01               	movlw	1
   995  0010B0  EC56  F00F         	call	_LCD_set_cursor_position
   996  0010B4                     
   997                           ;ece376_hw9_ccp_capt.c: 243:     char rcon_reg_string[16] = "RCON: ";
   998  0010B4  EE20  F0EA         	lfsr	2,main@F3020
   999  0010B8  EE10  F0C0         	lfsr	1,main@rcon_reg_string
  1000  0010BC  0E0F               	movlw	15
  1001  0010BE                     u2701:
  1002  0010BE  CFDB FFE3          	movff	plusw2,plusw1
  1003  0010C2  06E8               	decf	wreg,f,c
  1004  0010C4  E2FC               	bc	u2701
  1005  0010C6                     
  1006                           ;ece376_hw9_ccp_capt.c: 244:     char stkptr_reg_string[16] = "STKPTR: ";
  1007  0010C6  EE21  F020         	lfsr	2,main@F3022
  1008  0010CA  EE10  F0D0         	lfsr	1,main@stkptr_reg_string
  1009  0010CE  0E0F               	movlw	15
  1010  0010D0                     u2711:
  1011  0010D0  CFDB FFE3          	movff	plusw2,plusw1
  1012  0010D4  06E8               	decf	wreg,f,c
  1013  0010D6  E2FC               	bc	u2711
  1014  0010D8                     
  1015                           ;ece376_hw9_ccp_capt.c: 245:     strcat(rcon_reg_string, hex_to_bit_string( (uint8_t)RCO
      +                          N ) );
  1016  0010D8  0EC0               	movlw	low main@rcon_reg_string
  1017  0010DA  6E11               	movwf	strcat@dest^0,c
  1018  0010DC  0E00               	movlw	high main@rcon_reg_string
  1019  0010DE  6E12               	movwf	(strcat@dest+1)^0,c
  1020  0010E0  50D0               	movf	208,w,c	;volatile
  1021  0010E2  EC9E  F011         	call	_hex_to_bit_string
  1022  0010E6  C005  F013         	movff	?_hex_to_bit_string,strcat@src
  1023  0010EA  C006  F014         	movff	?_hex_to_bit_string+1,strcat@src+1
  1024  0010EE  EC8A  F013         	call	_strcat	;wreg free
  1025  0010F2                     
  1026                           ;ece376_hw9_ccp_capt.c: 246:     strcat(stkptr_reg_string, hex_to_bit_string( (uint8_t)S
      +                          TKPTR ) );
  1027  0010F2  0ED0               	movlw	low main@stkptr_reg_string
  1028  0010F4  6E11               	movwf	strcat@dest^0,c
  1029  0010F6  0E00               	movlw	high main@stkptr_reg_string
  1030  0010F8  6E12               	movwf	(strcat@dest+1)^0,c
  1031  0010FA  50FC               	movf	252,w,c	;volatile
  1032  0010FC  EC9E  F011         	call	_hex_to_bit_string
  1033  001100  C005  F013         	movff	?_hex_to_bit_string,strcat@src
  1034  001104  C006  F014         	movff	?_hex_to_bit_string+1,strcat@src+1
  1035  001108  EC8A  F013         	call	_strcat	;wreg free
  1036  00110C                     
  1037                           ;ece376_hw9_ccp_capt.c: 248:     LCD_set_cursor_position(1,1);
  1038  00110C  0E01               	movlw	1
  1039  00110E  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1040  001110  0E01               	movlw	1
  1041  001112  EC56  F00F         	call	_LCD_set_cursor_position
  1042  001116                     
  1043                           ;ece376_hw9_ccp_capt.c: 249:     for(uint8_t i=0; i<14; i++) LCD_write_data_byte_4bit(rc
      +                          on_reg_string[i]);
  1044  001116  0E00               	movlw	0
  1045  001118  0100               	movlb	0	; () banked
  1046  00111A  6FE5               	movwf	main@i_691& (0+255),b
  1047  00111C                     l3838:
  1048                           
  1049                           ; BSR set to: 0
  1050  00111C  0EC0               	movlw	low main@rcon_reg_string
  1051  00111E  25E5               	addwf	main@i_691& (0+255),w,b
  1052  001120  6ED9               	movwf	fsr2l,c
  1053  001122  6ADA               	clrf	fsr2h,c
  1054  001124  0E00               	movlw	high main@rcon_reg_string
  1055  001126  22DA               	addwfc	fsr2h,f,c
  1056  001128  50DF               	movf	indf2,w,c
  1057  00112A  EC98  F012         	call	_LCD_write_data_byte_4bit
  1058  00112E  0100               	movlb	0	; () banked
  1059  001130  2BE5               	incf	main@i_691& (0+255),f,b
  1060  001132                     
  1061                           ; BSR set to: 0
  1062  001132  0E0D               	movlw	13
  1063  001134  65E5               	cpfsgt	main@i_691& (0+255),b
  1064  001136  EF9F  F008         	goto	u2721
  1065  00113A  EFA1  F008         	goto	u2720
  1066  00113E                     u2721:
  1067  00113E  EF8E  F008         	goto	l3838
  1068  001142                     u2720:
  1069  001142                     
  1070                           ; BSR set to: 0
  1071                           ;ece376_hw9_ccp_capt.c: 250:     LCD_set_cursor_position(2,1);
  1072  001142  0E01               	movlw	1
  1073  001144  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1074  001146  0E02               	movlw	2
  1075  001148  EC56  F00F         	call	_LCD_set_cursor_position
  1076  00114C                     
  1077                           ;ece376_hw9_ccp_capt.c: 251:     for(uint8_t i=0; i<16; i++) LCD_write_data_byte_4bit(st
      +                          kptr_reg_string[i]);
  1078  00114C  0E00               	movlw	0
  1079  00114E  0100               	movlb	0	; () banked
  1080  001150  6FE6               	movwf	main@i_692& (0+255),b
  1081  001152                     l3852:
  1082                           
  1083                           ; BSR set to: 0
  1084  001152  0ED0               	movlw	low main@stkptr_reg_string
  1085  001154  25E6               	addwf	main@i_692& (0+255),w,b
  1086  001156  6ED9               	movwf	fsr2l,c
  1087  001158  6ADA               	clrf	fsr2h,c
  1088  00115A  0E00               	movlw	high main@stkptr_reg_string
  1089  00115C  22DA               	addwfc	fsr2h,f,c
  1090  00115E  50DF               	movf	indf2,w,c
  1091  001160  EC98  F012         	call	_LCD_write_data_byte_4bit
  1092  001164  0100               	movlb	0	; () banked
  1093  001166  2BE6               	incf	main@i_692& (0+255),f,b
  1094  001168                     
  1095                           ; BSR set to: 0
  1096  001168  0E0F               	movlw	15
  1097  00116A  65E6               	cpfsgt	main@i_692& (0+255),b
  1098  00116C  EFBA  F008         	goto	u2731
  1099  001170  EFBC  F008         	goto	u2730
  1100  001174                     u2731:
  1101  001174  EFA9  F008         	goto	l3852
  1102  001178                     u2730:
  1103  001178                     
  1104                           ; BSR set to: 0
  1105                           ;ece376_hw9_ccp_capt.c: 254:     RCONbits.POR = 1u;
  1106  001178  82D0               	bsf	208,1,c	;volatile
  1107                           
  1108                           ;ece376_hw9_ccp_capt.c: 255:     RCONbits.BOR = 1u;
  1109  00117A  80D0               	bsf	208,0,c	;volatile
  1110  00117C                     l298:
  1111  00117C  A081               	btfss	129,0,c	;volatile
  1112  00117E  EFC3  F008         	goto	u2741
  1113  001182  EFC5  F008         	goto	u2740
  1114  001186                     u2741:
  1115  001186  EFBE  F008         	goto	l298
  1116  00118A                     u2740:
  1117  00118A                     
  1118                           ;ece376_hw9_ccp_capt.c: 258:     LCD_clear_display();
  1119  00118A  EC5E  F013         	call	_LCD_clear_display	;wreg free
  1120                           
  1121                           ;ece376_hw9_ccp_capt.c: 259:     LCD_set_cursor_position(1,1);
  1122  00118E  0E01               	movlw	1
  1123  001190  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1124  001192  0E01               	movlw	1
  1125  001194  EC56  F00F         	call	_LCD_set_cursor_position
  1126  001198                     
  1127                           ;ece376_hw9_ccp_capt.c: 260:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  1128  001198  0E66               	movlw	102
  1129  00119A  6E69               	movwf	(??_main+1)^0,c
  1130  00119C  0E76               	movlw	118
  1131  00119E  6E68               	movwf	??_main^0,c
  1132  0011A0  0EC1               	movlw	193
  1133  0011A2                     u2817:
  1134  0011A2  2EE8               	decfsz	wreg,f,c
  1135  0011A4  D7FE               	bra	u2817
  1136  0011A6  2E68               	decfsz	??_main^0,f,c
  1137  0011A8  D7FC               	bra	u2817
  1138  0011AA  2E69               	decfsz	(??_main+1)^0,f,c
  1139  0011AC  D7FA               	bra	u2817
  1140  0011AE  F000               	nop	
  1141  0011B0                     
  1142                           ;ece376_hw9_ccp_capt.c: 267:  Timer1_Init_Default();
  1143  0011B0  ECC8  F013         	call	_Timer1_Init_Default	;wreg free
  1144  0011B4                     
  1145                           ;ece376_hw9_ccp_capt.c: 268:     CCP1_Capture_Init_Default();
  1146  0011B4  ECC2  F013         	call	_CCP1_Capture_Init_Default	;wreg free
  1147  0011B8                     
  1148                           ;ece376_hw9_ccp_capt.c: 276:     PORTB = 0x00;
  1149  0011B8  0E00               	movlw	0
  1150  0011BA  6E81               	movwf	129,c	;volatile
  1151  0011BC                     
  1152                           ;ece376_hw9_ccp_capt.c: 277:     PORTC = 0x00;
  1153  0011BC  0E00               	movlw	0
  1154  0011BE  6E82               	movwf	130,c	;volatile
  1155  0011C0                     
  1156                           ;ece376_hw9_ccp_capt.c: 278:     PORTD = 0x00;
  1157  0011C0  0E00               	movlw	0
  1158  0011C2  6E83               	movwf	131,c	;volatile
  1159  0011C4                     l3872:
  1160                           
  1161                           ;ece376_hw9_ccp_capt.c: 283:   if(PORTBbits.RB0) {
  1162  0011C4  A081               	btfss	129,0,c	;volatile
  1163  0011C6  EFE7  F008         	goto	u2751
  1164  0011CA  EFE9  F008         	goto	u2750
  1165  0011CE                     u2751:
  1166  0011CE  EFE2  F008         	goto	l3872
  1167  0011D2                     u2750:
  1168  0011D2                     
  1169                           ;ece376_hw9_ccp_capt.c: 284:             elapsed_time = 0u;
  1170  0011D2  0E00               	movlw	0
  1171  0011D4  0100               	movlb	0	; () banked
  1172  0011D6  6F8E               	movwf	_elapsed_time& (0+255),b	;volatile
  1173  0011D8  0E00               	movlw	0
  1174  0011DA  6F8F               	movwf	(_elapsed_time+1)& (0+255),b	;volatile
  1175  0011DC  0E00               	movlw	0
  1176  0011DE  6F90               	movwf	(_elapsed_time+2)& (0+255),b	;volatile
  1177  0011E0  0E00               	movlw	0
  1178  0011E2  6F91               	movwf	(_elapsed_time+3)& (0+255),b	;volatile
  1179  0011E4                     
  1180                           ; BSR set to: 0
  1181                           ;ece376_hw9_ccp_capt.c: 285:             T1CON |= 0x01;
  1182  0011E4  80CD               	bsf	205,0,c	;volatile
  1183  0011E6                     
  1184                           ; BSR set to: 0
  1185                           ;ece376_hw9_ccp_capt.c: 286:             (INTCONbits.PEIE = 1u);
  1186  0011E6  8CF2               	bsf	242,6,c	;volatile
  1187  0011E8                     
  1188                           ; BSR set to: 0
  1189                           ;ece376_hw9_ccp_capt.c: 287:             (INTCONbits.GIE = 1);
  1190  0011E8  8EF2               	bsf	242,7,c	;volatile
  1191  0011EA                     
  1192                           ; BSR set to: 0
  1193                           ;ece376_hw9_ccp_capt.c: 290:             for(uint8_t i=0; i<11; i++) LCD_write_data_byte
      +                          _4bit(start_game_msg[i]);
  1194  0011EA  0E00               	movlw	0
  1195  0011EC  6FE7               	movwf	main@i_716& (0+255),b
  1196  0011EE                     l3888:
  1197                           
  1198                           ; BSR set to: 0
  1199  0011EE  0E0F               	movlw	low _start_game_msg
  1200  0011F0  25E7               	addwf	main@i_716& (0+255),w,b
  1201  0011F2  6EF6               	movwf	tblptrl,c
  1202  0011F4  6AF7               	clrf	tblptrh,c
  1203  0011F6  0E10               	movlw	high _start_game_msg
  1204  0011F8  22F7               	addwfc	tblptrh,f,c
  1205  0011FA                     	if	0	;There are less than 3 active tblptr bytes
  1206  0011FA                     	endif
  1207  0011FA  0008               	tblrd		*
  1208  0011FC  50F5               	movf	tablat,w,c
  1209  0011FE  EC98  F012         	call	_LCD_write_data_byte_4bit
  1210  001202  0100               	movlb	0	; () banked
  1211  001204  2BE7               	incf	main@i_716& (0+255),f,b
  1212  001206                     
  1213                           ; BSR set to: 0
  1214  001206  0E0A               	movlw	10
  1215  001208  65E7               	cpfsgt	main@i_716& (0+255),b
  1216  00120A  EF09  F009         	goto	u2761
  1217  00120E  EF0B  F009         	goto	u2760
  1218  001212                     u2761:
  1219  001212  EFF7  F008         	goto	l3888
  1220  001216                     u2760:
  1221  001216                     
  1222                           ; BSR set to: 0
  1223                           ;ece376_hw9_ccp_capt.c: 291:             _delay((unsigned long)((1000)*(40000000u/4000.0
      +                          )));
  1224  001216  0E33               	movlw	51
  1225  001218  6E69               	movwf	(??_main+1)^0,c
  1226  00121A  0EBB               	movlw	187
  1227  00121C  6E68               	movwf	??_main^0,c
  1228  00121E  0EE0               	movlw	224
  1229  001220                     u2827:
  1230  001220  2EE8               	decfsz	wreg,f,c
  1231  001222  D7FE               	bra	u2827
  1232  001224  2E68               	decfsz	??_main^0,f,c
  1233  001226  D7FC               	bra	u2827
  1234  001228  2E69               	decfsz	(??_main+1)^0,f,c
  1235  00122A  D7FA               	bra	u2827
  1236  00122C                     
  1237                           ;ece376_hw9_ccp_capt.c: 292:             LCD_clear_display();
  1238  00122C  EC5E  F013         	call	_LCD_clear_display	;wreg free
  1239  001230                     
  1240                           ;ece376_hw9_ccp_capt.c: 293:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1241  001230  0E66               	movlw	102
  1242  001232  6E69               	movwf	(??_main+1)^0,c
  1243  001234  0E76               	movlw	118
  1244  001236  6E68               	movwf	??_main^0,c
  1245  001238  0EC1               	movlw	193
  1246  00123A                     u2837:
  1247  00123A  2EE8               	decfsz	wreg,f,c
  1248  00123C  D7FE               	bra	u2837
  1249  00123E  2E68               	decfsz	??_main^0,f,c
  1250  001240  D7FC               	bra	u2837
  1251  001242  2E69               	decfsz	(??_main+1)^0,f,c
  1252  001244  D7FA               	bra	u2837
  1253  001246  F000               	nop	
  1254  001248                     
  1255                           ;ece376_hw9_ccp_capt.c: 294:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1256  001248  0E66               	movlw	102
  1257  00124A  6E69               	movwf	(??_main+1)^0,c
  1258  00124C  0E76               	movlw	118
  1259  00124E  6E68               	movwf	??_main^0,c
  1260  001250  0EC1               	movlw	193
  1261  001252                     u2847:
  1262  001252  2EE8               	decfsz	wreg,f,c
  1263  001254  D7FE               	bra	u2847
  1264  001256  2E68               	decfsz	??_main^0,f,c
  1265  001258  D7FC               	bra	u2847
  1266  00125A  2E69               	decfsz	(??_main+1)^0,f,c
  1267  00125C  D7FA               	bra	u2847
  1268  00125E  F000               	nop	
  1269  001260                     
  1270                           ;ece376_hw9_ccp_capt.c: 297:             LATDbits.LATD0 = 1u;
  1271  001260  808C               	bsf	140,0,c	;volatile
  1272  001262                     l3904:
  1273  001262  0100               	movlb	0	; () banked
  1274  001264  519A               	movf	_game_done_flag& (0+255),w,b	;volatile
  1275  001266  B4D8               	btfsc	status,2,c
  1276  001268  EF38  F009         	goto	u2771
  1277  00126C  EF3A  F009         	goto	u2770
  1278  001270                     u2771:
  1279  001270  EF31  F009         	goto	l3904
  1280  001274                     u2770:
  1281  001274                     
  1282                           ; BSR set to: 0
  1283                           ;ece376_hw9_ccp_capt.c: 315:             num_of_seconds = (uint16_t) (elapsed_time / 100
      +                          00000u);
  1284  001274  C08E  F00E         	movff	_elapsed_time,___lldiv@dividend	;volatile
  1285  001278  C08F  F00F         	movff	_elapsed_time+1,___lldiv@dividend+1	;volatile
  1286  00127C  C090  F010         	movff	_elapsed_time+2,___lldiv@dividend+2	;volatile
  1287  001280  C091  F011         	movff	_elapsed_time+3,___lldiv@dividend+3	;volatile
  1288  001284  0E80               	movlw	128
  1289  001286  6E12               	movwf	___lldiv@divisor^0,c
  1290  001288  0E96               	movlw	150
  1291  00128A  6E13               	movwf	(___lldiv@divisor+1)^0,c
  1292  00128C  0E98               	movlw	152
  1293  00128E  6E14               	movwf	(___lldiv@divisor+2)^0,c
  1294  001290  0E00               	movlw	0
  1295  001292  6E15               	movwf	(___lldiv@divisor+3)^0,c
  1296  001294  EC80  F010         	call	___lldiv	;wreg free
  1297  001298  C00E  F098         	movff	?___lldiv,_num_of_seconds
  1298  00129C  C00F  F099         	movff	?___lldiv+1,_num_of_seconds+1
  1299                           
  1300                           ;ece376_hw9_ccp_capt.c: 316:             num_of_ms = (uint16_t) ((elapsed_time % 1000000
      +                          0u) / 10000u);
  1301  0012A0  0E80               	movlw	128
  1302  0012A2  6E09               	movwf	___llmod@divisor^0,c
  1303  0012A4  0E96               	movlw	150
  1304  0012A6  6E0A               	movwf	(___llmod@divisor+1)^0,c
  1305  0012A8  0E98               	movlw	152
  1306  0012AA  6E0B               	movwf	(___llmod@divisor+2)^0,c
  1307  0012AC  0E00               	movlw	0
  1308  0012AE  6E0C               	movwf	(___llmod@divisor+3)^0,c
  1309  0012B0  C08E  F005         	movff	_elapsed_time,___llmod@dividend	;volatile
  1310  0012B4  C08F  F006         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
  1311  0012B8  C090  F007         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
  1312  0012BC  C091  F008         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
  1313  0012C0  EC18  F011         	call	___llmod	;wreg free
  1314  0012C4  C005  F00E         	movff	?___llmod,___lldiv@dividend
  1315  0012C8  C006  F00F         	movff	?___llmod+1,___lldiv@dividend+1
  1316  0012CC  C007  F010         	movff	?___llmod+2,___lldiv@dividend+2
  1317  0012D0  C008  F011         	movff	?___llmod+3,___lldiv@dividend+3
  1318  0012D4  0E10               	movlw	16
  1319  0012D6  6E12               	movwf	___lldiv@divisor^0,c
  1320  0012D8  0E27               	movlw	39
  1321  0012DA  6E13               	movwf	(___lldiv@divisor+1)^0,c
  1322  0012DC  0E00               	movlw	0
  1323  0012DE  6E14               	movwf	(___lldiv@divisor+2)^0,c
  1324  0012E0  0E00               	movlw	0
  1325  0012E2  6E15               	movwf	(___lldiv@divisor+3)^0,c
  1326  0012E4  EC80  F010         	call	___lldiv	;wreg free
  1327  0012E8  C00E  F096         	movff	?___lldiv,_num_of_ms
  1328  0012EC  C00F  F097         	movff	?___lldiv+1,_num_of_ms+1
  1329                           
  1330                           ;ece376_hw9_ccp_capt.c: 317:             num_of_us = (uint16_t) ((elapsed_time % 1000000
      +                          0u) % 10000u) / 10u;
  1331  0012F0  0E80               	movlw	128
  1332  0012F2  6E09               	movwf	___llmod@divisor^0,c
  1333  0012F4  0E96               	movlw	150
  1334  0012F6  6E0A               	movwf	(___llmod@divisor+1)^0,c
  1335  0012F8  0E98               	movlw	152
  1336  0012FA  6E0B               	movwf	(___llmod@divisor+2)^0,c
  1337  0012FC  0E00               	movlw	0
  1338  0012FE  6E0C               	movwf	(___llmod@divisor+3)^0,c
  1339  001300  C08E  F005         	movff	_elapsed_time,___llmod@dividend	;volatile
  1340  001304  C08F  F006         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
  1341  001308  C090  F007         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
  1342  00130C  C091  F008         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
  1343  001310  EC18  F011         	call	___llmod	;wreg free
  1344  001314  C005  F0E0         	movff	?___llmod,_main$1590
  1345  001318  C006  F0E1         	movff	?___llmod+1,_main$1590+1
  1346  00131C  C007  F0E2         	movff	?___llmod+2,_main$1590+2
  1347  001320  C008  F0E3         	movff	?___llmod+3,_main$1590+3
  1348                           
  1349                           ;ece376_hw9_ccp_capt.c: 317:             num_of_us = (uint16_t) ((elapsed_time % 1000000
      +                          0u) % 10000u) / 10u;
  1350  001324  0E10               	movlw	16
  1351  001326  6E09               	movwf	___llmod@divisor^0,c
  1352  001328  0E27               	movlw	39
  1353  00132A  6E0A               	movwf	(___llmod@divisor+1)^0,c
  1354  00132C  0E00               	movlw	0
  1355  00132E  6E0B               	movwf	(___llmod@divisor+2)^0,c
  1356  001330  0E00               	movlw	0
  1357  001332  6E0C               	movwf	(___llmod@divisor+3)^0,c
  1358  001334  C0E0  F005         	movff	_main$1590,___llmod@dividend
  1359  001338  C0E1  F006         	movff	_main$1590+1,___llmod@dividend+1
  1360  00133C  C0E2  F007         	movff	_main$1590+2,___llmod@dividend+2
  1361  001340  C0E3  F008         	movff	_main$1590+3,___llmod@dividend+3
  1362  001344  EC18  F011         	call	___llmod	;wreg free
  1363  001348  C005  F00E         	movff	?___llmod,___lwdiv@dividend
  1364  00134C  C006  F00F         	movff	?___llmod+1,___lwdiv@dividend+1
  1365  001350  0E00               	movlw	0
  1366  001352  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1367  001354  0E0A               	movlw	10
  1368  001356  6E10               	movwf	___lwdiv@divisor^0,c
  1369  001358  ECDB  F011         	call	___lwdiv	;wreg free
  1370  00135C  C00E  F094         	movff	?___lwdiv,_num_of_us
  1371  001360  C00F  F095         	movff	?___lwdiv+1,_num_of_us+1
  1372  001364                     
  1373                           ;ece376_hw9_ccp_capt.c: 321:             sprintf(result_msg, "%-3us:%-3ums:%-3uus", num_
      +                          of_seconds, num_of_ms, num_of_us);
  1374  001364  0E9C               	movlw	low _result_msg
  1375  001366  6E5E               	movwf	sprintf@s^0,c
  1376  001368  0E00               	movlw	high _result_msg
  1377  00136A  6E5F               	movwf	(sprintf@s+1)^0,c
  1378  00136C  0E23               	movlw	low STR_1
  1379  00136E  6E60               	movwf	sprintf@fmt^0,c
  1380  001370  0E10               	movlw	high STR_1
  1381  001372  6E61               	movwf	(sprintf@fmt+1)^0,c
  1382  001374  C098  F062         	movff	_num_of_seconds,?_sprintf+4
  1383  001378  C099  F063         	movff	_num_of_seconds+1,?_sprintf+5
  1384  00137C  C096  F064         	movff	_num_of_ms,?_sprintf+6
  1385  001380  C097  F065         	movff	_num_of_ms+1,?_sprintf+7
  1386  001384  C094  F066         	movff	_num_of_us,?_sprintf+8
  1387  001388  C095  F067         	movff	_num_of_us+1,?_sprintf+9
  1388  00138C  EC46  F012         	call	_sprintf	;wreg free
  1389  001390                     
  1390                           ;ece376_hw9_ccp_capt.c: 323:             LCD_set_cursor_position(1,1);
  1391  001390  0E01               	movlw	1
  1392  001392  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1393  001394  0E01               	movlw	1
  1394  001396  EC56  F00F         	call	_LCD_set_cursor_position
  1395  00139A                     
  1396                           ;ece376_hw9_ccp_capt.c: 324:             for(uint8_t i=0; i<7; i++) LCD_write_data_byte_
      +                          4bit(result_msg_title[i]);
  1397  00139A  0E00               	movlw	0
  1398  00139C  0100               	movlb	0	; () banked
  1399  00139E  6FE8               	movwf	main@i_718& (0+255),b
  1400  0013A0                     l3914:
  1401                           
  1402                           ; BSR set to: 0
  1403  0013A0  0E06               	movlw	6
  1404  0013A2  65E8               	cpfsgt	main@i_718& (0+255),b
  1405  0013A4  EFD6  F009         	goto	u2781
  1406  0013A8  EFD8  F009         	goto	u2780
  1407  0013AC                     u2781:
  1408  0013AC  EFDA  F009         	goto	l3918
  1409  0013B0                     u2780:
  1410  0013B0  EFE8  F009         	goto	l3924
  1411  0013B4                     l3918:
  1412                           
  1413                           ; BSR set to: 0
  1414  0013B4  0E1B               	movlw	low _result_msg_title
  1415  0013B6  25E8               	addwf	main@i_718& (0+255),w,b
  1416  0013B8  6EF6               	movwf	tblptrl,c
  1417  0013BA  6AF7               	clrf	tblptrh,c
  1418  0013BC  0E10               	movlw	high _result_msg_title
  1419  0013BE  22F7               	addwfc	tblptrh,f,c
  1420  0013C0                     	if	0	;There are less than 3 active tblptr bytes
  1421  0013C0                     	endif
  1422  0013C0  0008               	tblrd		*
  1423  0013C2  50F5               	movf	tablat,w,c
  1424  0013C4  EC98  F012         	call	_LCD_write_data_byte_4bit
  1425  0013C8  0100               	movlb	0	; () banked
  1426  0013CA  2BE8               	incf	main@i_718& (0+255),f,b
  1427  0013CC  EFD0  F009         	goto	l3914
  1428  0013D0                     l3924:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;ece376_hw9_ccp_capt.c: 325:             LCD_set_cursor_position(2,1);
  1432  0013D0  0E01               	movlw	1
  1433  0013D2  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1434  0013D4  0E02               	movlw	2
  1435  0013D6  EC56  F00F         	call	_LCD_set_cursor_position
  1436  0013DA                     
  1437                           ;ece376_hw9_ccp_capt.c: 326:             for(uint8_t i=0; i<16; i++) LCD_write_data_byte
      +                          _4bit(result_msg[i]);
  1438  0013DA  0E00               	movlw	0
  1439  0013DC  0100               	movlb	0	; () banked
  1440  0013DE  6FE9               	movwf	main@i_719& (0+255),b
  1441  0013E0                     l3928:
  1442                           
  1443                           ; BSR set to: 0
  1444  0013E0  0E0F               	movlw	15
  1445  0013E2  65E9               	cpfsgt	main@i_719& (0+255),b
  1446  0013E4  EFF6  F009         	goto	u2791
  1447  0013E8  EFF8  F009         	goto	u2790
  1448  0013EC                     u2791:
  1449  0013EC  EFFA  F009         	goto	l3932
  1450  0013F0                     u2790:
  1451  0013F0  EF07  F00A         	goto	l3938
  1452  0013F4                     l3932:
  1453                           
  1454                           ; BSR set to: 0
  1455  0013F4  0E9C               	movlw	low _result_msg
  1456  0013F6  25E9               	addwf	main@i_719& (0+255),w,b
  1457  0013F8  6ED9               	movwf	fsr2l,c
  1458  0013FA  6ADA               	clrf	fsr2h,c
  1459  0013FC  0E00               	movlw	high _result_msg
  1460  0013FE  22DA               	addwfc	fsr2h,f,c
  1461  001400  50DF               	movf	indf2,w,c
  1462  001402  EC98  F012         	call	_LCD_write_data_byte_4bit
  1463  001406  0100               	movlb	0	; () banked
  1464  001408  2BE9               	incf	main@i_719& (0+255),f,b
  1465  00140A  EFF0  F009         	goto	l3928
  1466  00140E                     l3938:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;ece376_hw9_ccp_capt.c: 329:             _delay((unsigned long)((3000)*(40000000u/4000.0
      +                          )));
  1470  00140E  0E99               	movlw	153
  1471  001410  6E69               	movwf	(??_main+1)^0,c
  1472  001412  0E31               	movlw	49
  1473  001414  6E68               	movwf	??_main^0,c
  1474  001416  0EA2               	movlw	162
  1475  001418                     u2857:
  1476  001418  2EE8               	decfsz	wreg,f,c
  1477  00141A  D7FE               	bra	u2857
  1478  00141C  2E68               	decfsz	??_main^0,f,c
  1479  00141E  D7FC               	bra	u2857
  1480  001420  2E69               	decfsz	(??_main+1)^0,f,c
  1481  001422  D7FA               	bra	u2857
  1482  001424  D000               	nop2	
  1483                           
  1484                           ;ece376_hw9_ccp_capt.c: 330:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1485  001426  0E66               	movlw	102
  1486  001428  6E69               	movwf	(??_main+1)^0,c
  1487  00142A  0E76               	movlw	118
  1488  00142C  6E68               	movwf	??_main^0,c
  1489  00142E  0EC1               	movlw	193
  1490  001430                     u2867:
  1491  001430  2EE8               	decfsz	wreg,f,c
  1492  001432  D7FE               	bra	u2867
  1493  001434  2E68               	decfsz	??_main^0,f,c
  1494  001436  D7FC               	bra	u2867
  1495  001438  2E69               	decfsz	(??_main+1)^0,f,c
  1496  00143A  D7FA               	bra	u2867
  1497  00143C  F000               	nop	
  1498  00143E                     
  1499                           ;ece376_hw9_ccp_capt.c: 333:             LATDbits.LATD0 = 0u;
  1500  00143E  908C               	bcf	140,0,c	;volatile
  1501  001440                     
  1502                           ;ece376_hw9_ccp_capt.c: 334:             elapsed_time = 0u;
  1503  001440  0E00               	movlw	0
  1504  001442  0100               	movlb	0	; () banked
  1505  001444  6F8E               	movwf	_elapsed_time& (0+255),b	;volatile
  1506  001446  0E00               	movlw	0
  1507  001448  6F8F               	movwf	(_elapsed_time+1)& (0+255),b	;volatile
  1508  00144A  0E00               	movlw	0
  1509  00144C  6F90               	movwf	(_elapsed_time+2)& (0+255),b	;volatile
  1510  00144E  0E00               	movlw	0
  1511  001450  6F91               	movwf	(_elapsed_time+3)& (0+255),b	;volatile
  1512  001452                     
  1513                           ; BSR set to: 0
  1514                           ;ece376_hw9_ccp_capt.c: 335:             LCD_clear_display();
  1515  001452  EC5E  F013         	call	_LCD_clear_display	;wreg free
  1516  001456                     
  1517                           ;ece376_hw9_ccp_capt.c: 336:             game_done_flag = 0x00;
  1518  001456  0E00               	movlw	0
  1519  001458  0100               	movlb	0	; () banked
  1520  00145A  6F9A               	movwf	_game_done_flag& (0+255),b	;volatile
  1521  00145C  EFE2  F008         	goto	l3872
  1522  001460  EF07  F000         	goto	start
  1523  001464                     __end_of_main:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _strcat *****************
  1527 ;; Defined at:
  1528 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcat.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  dest            2   16[COMRAM] PTR unsigned char 
  1531 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1532 ;;  src             2   18[COMRAM] PTR const unsigned char 
  1533 ;;		 -> hex_to_bit_string@bit_string(9), 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  2   16[COMRAM] PTR unsigned char 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;Total ram usage:        4 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    2
  1552 ;; This function calls:
  1553 ;;		_strcpy
  1554 ;;		_strlen
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text1
  1561  002714                     __ptext1:
  1562                           	callstack 0
  1563  002714                     _strcat:
  1564                           	callstack 28
  1565  002714  C011  F005         	movff	strcat@dest,strlen@s
  1566  002718  C012  F006         	movff	strcat@dest+1,strlen@s+1
  1567  00271C  EC43  F013         	call	_strlen	;wreg free
  1568  002720  5005               	movf	?_strlen^0,w,c
  1569  002722  2411               	addwf	strcat@dest^0,w,c
  1570  002724  6E09               	movwf	strcpy@dest^0,c
  1571  002726  5006               	movf	(?_strlen+1)^0,w,c
  1572  002728  2012               	addwfc	(strcat@dest+1)^0,w,c
  1573  00272A  6E0A               	movwf	(strcpy@dest+1)^0,c
  1574  00272C  C013  F00B         	movff	strcat@src,strcpy@src
  1575  002730  C014  F00C         	movff	strcat@src+1,strcpy@src+1
  1576  002734  EC08  F013         	call	_strcpy	;wreg free
  1577  002738  0012               	return		;funcret
  1578  00273A                     __end_of_strcat:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _strcpy *****************
  1582 ;; Defined at:
  1583 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  dest            2    8[COMRAM] PTR unsigned char 
  1586 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1587 ;;  src             2   10[COMRAM] PTR const unsigned char 
  1588 ;;		 -> hex_to_bit_string@bit_string(9), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  d               2   14[COMRAM] PTR unsigned char 
  1591 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1592 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1593 ;;		 -> hex_to_bit_string@bit_string(9), 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  2    8[COMRAM] PTR unsigned char 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;Total ram usage:        8 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_strcat
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text2
  1618  002610                     __ptext2:
  1619                           	callstack 0
  1620  002610                     _strcpy:
  1621                           	callstack 28
  1622  002610  C00B  F00D         	movff	strcpy@src,strcpy@s
  1623  002614  C00C  F00E         	movff	strcpy@src+1,strcpy@s+1
  1624  002618  C009  F00F         	movff	strcpy@dest,strcpy@d
  1625  00261C  C00A  F010         	movff	strcpy@dest+1,strcpy@d+1
  1626  002620                     l2706:
  1627  002620  C00D  FFD9         	movff	strcpy@s,fsr2l
  1628  002624  C00E  FFDA         	movff	strcpy@s+1,fsr2h
  1629  002628  4A0D               	infsnz	strcpy@s^0,f,c
  1630  00262A  2A0E               	incf	(strcpy@s+1)^0,f,c
  1631  00262C  C00F  FFE1         	movff	strcpy@d,fsr1l
  1632  002630  C010  FFE2         	movff	strcpy@d+1,fsr1h
  1633  002634  4A0F               	infsnz	strcpy@d^0,f,c
  1634  002636  2A10               	incf	(strcpy@d+1)^0,f,c
  1635  002638  CFDF FFE7          	movff	indf2,indf1
  1636  00263C  50E7               	movf	indf1,w,c
  1637  00263E  A4D8               	btfss	status,2,c
  1638  002640  EF24  F013         	goto	u1581
  1639  002644  EF26  F013         	goto	u1580
  1640  002648                     u1581:
  1641  002648  EF10  F013         	goto	l2706
  1642  00264C                     u1580:
  1643  00264C  0012               	return		;funcret
  1644  00264E                     __end_of_strcpy:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _sprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  s               2   93[COMRAM] PTR unsigned char 
  1652 ;;		 -> result_msg(17), 
  1653 ;;  fmt             2   95[COMRAM] PTR const unsigned char 
  1654 ;;		 -> STR_1(20), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1657 ;;  ap              2    2[BANK0 ] PTR void [1]
  1658 ;;		 -> ?_sprintf(2), 
  1659 ;;  ret             2    0        int 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  2   93[COMRAM] int 
  1662 ;; Registers used:
  1663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:       20 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    8
  1676 ;; This function calls:
  1677 ;;		_vfprintf
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text3
  1684  00248C                     __ptext3:
  1685                           	callstack 0
  1686  00248C                     _sprintf:
  1687                           	callstack 22
  1688  00248C  0E62               	movlw	low (?_sprintf+4)
  1689  00248E  0100               	movlb	0	; () banked
  1690  002490  6FB8               	movwf	sprintf@ap& (0+255),b
  1691  002492  0E00               	movlw	high (?_sprintf+4)
  1692  002494  6FB9               	movwf	(sprintf@ap+1)& (0+255),b
  1693  002496  C05E  F0BA         	movff	sprintf@s,sprintf@f
  1694  00249A  C05F  F0BB         	movff	sprintf@s+1,sprintf@f+1
  1695  00249E                     
  1696                           ; BSR set to: 0
  1697  00249E  0E00               	movlw	0
  1698  0024A0  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  1699  0024A2  0E00               	movlw	0
  1700  0024A4  6FBC               	movwf	(sprintf@f+2)& (0+255),b
  1701  0024A6                     
  1702                           ; BSR set to: 0
  1703  0024A6  0E00               	movlw	0
  1704  0024A8  6FBF               	movwf	(sprintf@f+5)& (0+255),b
  1705  0024AA  0E00               	movlw	0
  1706  0024AC  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  1707  0024AE                     
  1708                           ; BSR set to: 0
  1709  0024AE  0EBA               	movlw	low sprintf@f
  1710  0024B0  6E56               	movwf	vfprintf@fp^0,c
  1711  0024B2  0E00               	movlw	high sprintf@f
  1712  0024B4  6E57               	movwf	(vfprintf@fp+1)^0,c
  1713  0024B6  C060  F058         	movff	sprintf@fmt,vfprintf@fmt
  1714  0024BA  C061  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1715  0024BE  0EB8               	movlw	low sprintf@ap
  1716  0024C0  6E5A               	movwf	vfprintf@ap^0,c
  1717  0024C2  0E00               	movlw	high sprintf@ap
  1718  0024C4  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1719  0024C6  EC15  F012         	call	_vfprintf	;wreg free
  1720  0024CA  0100               	movlb	0	; () banked
  1721  0024CC  51BC               	movf	(sprintf@f+2)& (0+255),w,b
  1722  0024CE  245E               	addwf	sprintf@s^0,w,c
  1723  0024D0  6ED9               	movwf	fsr2l,c
  1724  0024D2  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  1725  0024D4  205F               	addwfc	(sprintf@s+1)^0,w,c
  1726  0024D6  6EDA               	movwf	fsr2h,c
  1727  0024D8  0E00               	movlw	0
  1728  0024DA  6EDF               	movwf	indf2,c
  1729  0024DC                     
  1730                           ; BSR set to: 0
  1731  0024DC  0012               	return		;funcret
  1732  0024DE                     __end_of_sprintf:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _vfprintf *****************
  1736 ;; Defined at:
  1737 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1740 ;;		 -> sprintf@f(6), 
  1741 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1742 ;;		 -> STR_1(20), 
  1743 ;;  ap              2   89[COMRAM] PTR PTR void 
  1744 ;;		 -> sprintf@ap(2), 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1747 ;;		 -> STR_1(20), 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2   85[COMRAM] int 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1757 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;Total ram usage:        8 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    7
  1764 ;; This function calls:
  1765 ;;		_vfpfcnvrt
  1766 ;; This function is called by:
  1767 ;;		_sprintf
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text4
  1772  00242A                     __ptext4:
  1773                           	callstack 0
  1774  00242A                     _vfprintf:
  1775                           	callstack 22
  1776  00242A                     
  1777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1778  00242A  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1779  00242E  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1780  002432                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1782  002432  0E00               	movlw	0
  1783  002434  0100               	movlb	0	; () banked
  1784  002436  6F93               	movwf	(_nout+1)& (0+255),b
  1785  002438  0E00               	movlw	0
  1786  00243A  6F92               	movwf	_nout& (0+255),b
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1789  00243C  EF33  F012         	goto	l3766
  1790  002440                     l3764:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1794  002440  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1795  002444  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1796  002448  0E5C               	movlw	low vfprintf@cfmt
  1797  00244A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1798  00244C  0E00               	movlw	high vfprintf@cfmt
  1799  00244E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1800  002450  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1801  002454  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1802  002458  EC32  F00A         	call	_vfpfcnvrt	;wreg free
  1803  00245C  5040               	movf	?_vfpfcnvrt^0,w,c
  1804  00245E  0100               	movlb	0	; () banked
  1805  002460  2792               	addwf	_nout& (0+255),f,b
  1806  002462  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1807  002464  2393               	addwfc	(_nout+1)& (0+255),f,b
  1808  002466                     l3766:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1812  002466  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1813  00246A  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1814  00246E                     	if	0	;tblptru may be non-zero
  1815  00246E                     	endif
  1816  00246E                     	if	0	;tblptru may be non-zero
  1817  00246E                     	endif
  1818  00246E  0008               	tblrd		*
  1819  002470  50F5               	movf	tablat,w,c
  1820  002472  0900               	iorlw	0
  1821  002474  A4D8               	btfss	status,2,c
  1822  002476  EF3F  F012         	goto	u2681
  1823  00247A  EF41  F012         	goto	u2680
  1824  00247E                     u2681:
  1825  00247E  EF20  F012         	goto	l3764
  1826  002482                     u2680:
  1827  002482                     
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1830  002482  C092  F056         	movff	_nout,?_vfprintf
  1831  002486  C093  F057         	movff	_nout+1,?_vfprintf+1
  1832  00248A                     
  1833                           ; BSR set to: 0
  1834  00248A  0012               	return		;funcret
  1835  00248C                     __end_of_vfprintf:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _vfpfcnvrt *****************
  1839 ;; Defined at:
  1840 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1843 ;;		 -> sprintf@f(6), 
  1844 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1845 ;;		 -> vfprintf@cfmt(2), 
  1846 ;;  ap              2   67[COMRAM] PTR PTR void 
  1847 ;;		 -> sprintf@ap(2), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  llu             8   73[COMRAM] unsigned long long 
  1850 ;;  ll              8    0        long long 
  1851 ;;  f               4    0        long long 
  1852 ;;  vp              3    0        PTR void 
  1853 ;;  ct              3    0        unsigned char [3]
  1854 ;;  cp              3    0        PTR unsigned char 
  1855 ;;  done            2   81[COMRAM] int 
  1856 ;;  i               2    0        int 
  1857 ;;  c               1    0        unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   63[COMRAM] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:       22 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    6
  1874 ;; This function calls:
  1875 ;;		_atoi
  1876 ;;		_fputc
  1877 ;;		_isdigit
  1878 ;;		_utoa
  1879 ;; This function is called by:
  1880 ;;		_vfprintf
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text5
  1885  001464                     __ptext5:
  1886                           	callstack 0
  1887  001464                     _vfpfcnvrt:
  1888                           	callstack 22
  1889  001464                     
  1890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1891  001464  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1892  001468  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1893  00146C  CFDE FFF6          	movff	postinc2,tblptrl
  1894  001470  CFDD FFF7          	movff	postdec2,tblptrh
  1895  001474                     	if	0	;tblptru may be non-zero
  1896  001474                     	endif
  1897  001474                     	if	0	;tblptru may be non-zero
  1898  001474                     	endif
  1899  001474  0008               	tblrd		*
  1900  001476  50F5               	movf	tablat,w,c
  1901  001478  0A25               	xorlw	37
  1902  00147A  A4D8               	btfss	status,2,c
  1903  00147C  EF42  F00A         	goto	u2581
  1904  001480  EF44  F00A         	goto	u2580
  1905  001484                     u2581:
  1906  001484  EFB9  F00B         	goto	l3748
  1907  001488                     u2580:
  1908  001488                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1910  001488  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1911  00148C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1912  001490  2ADE               	incf	postinc2,f,c
  1913  001492  0E00               	movlw	0
  1914  001494  22DD               	addwfc	postdec2,f,c
  1915  001496                     
  1916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1917  001496  0E00               	movlw	0
  1918  001498  6E6B               	movwf	(_width+1)^0,c
  1919  00149A  0E00               	movlw	0
  1920  00149C  6E6A               	movwf	_width^0,c
  1921  00149E  C06A  F06E         	movff	_width,_flags
  1922  0014A2  C06B  F06F         	movff	_width+1,_flags+1
  1923  0014A6                     
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1925  0014A6  686C               	setf	_prec^0,c
  1926  0014A8  686D               	setf	(_prec+1)^0,c
  1927  0014AA                     
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1929  0014AA  0E00               	movlw	0
  1930  0014AC  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1931  0014AE  0E00               	movlw	0
  1932  0014B0  6E52               	movwf	vfpfcnvrt@done^0,c
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1935  0014B2  EFA1  F00A         	goto	l3702
  1936  0014B6                     l3676:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1939  0014B6  806E               	bsf	_flags^0,0,c
  1940  0014B8                     l3678:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1943  0014B8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1944  0014BC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1945  0014C0  2ADE               	incf	postinc2,f,c
  1946  0014C2  0E00               	movlw	0
  1947  0014C4  22DD               	addwfc	postdec2,f,c
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1950  0014C6  EFA1  F00A         	goto	l3702
  1951  0014CA                     l3680:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1954  0014CA  826E               	bsf	_flags^0,1,c
  1955  0014CC  EF5C  F00A         	goto	l3678
  1956  0014D0                     l3684:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1959  0014D0  846E               	bsf	_flags^0,2,c
  1960  0014D2  EF5C  F00A         	goto	l3678
  1961  0014D6                     l3688:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1964  0014D6  866E               	bsf	_flags^0,3,c
  1965  0014D8  EF5C  F00A         	goto	l3678
  1966  0014DC                     l3692:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1969  0014DC  886E               	bsf	_flags^0,4,c
  1970  0014DE  EF5C  F00A         	goto	l3678
  1971  0014E2                     l3696:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1974  0014E2  0E00               	movlw	0
  1975  0014E4  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1976  0014E6  0E01               	movlw	1
  1977  0014E8  6E52               	movwf	vfpfcnvrt@done^0,c
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1980  0014EA  EFA1  F00A         	goto	l3702
  1981  0014EE                     l3700:
  1982  0014EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983  0014F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984  0014F6  CFDE FFF6          	movff	postinc2,tblptrl
  1985  0014FA  CFDD FFF7          	movff	postdec2,tblptrh
  1986  0014FE                     	if	0	;tblptru may be non-zero
  1987  0014FE                     	endif
  1988  0014FE                     	if	0	;tblptru may be non-zero
  1989  0014FE                     	endif
  1990  0014FE  0008               	tblrd		*
  1991  001500  50F5               	movf	tablat,w,c
  1992  001502  6E46               	movwf	??_vfpfcnvrt^0,c
  1993  001504  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1994                           
  1995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1996                           ; Switch size 1, requested type "simple"
  1997                           ; Number of cases is 1, Range of values is 0 to 0
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; simple_byte            4     3 (average)
  2001                           ;	Chosen strategy is simple_byte
  2002  001506  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2003  001508  0A00               	xorlw	0	; case 0
  2004  00150A  B4D8               	btfsc	status,2,c
  2005  00150C  EF8A  F00A         	goto	l4008
  2006  001510  EF71  F00A         	goto	l3696
  2007  001514                     l4008:
  2008                           
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 5, Range of values is 32 to 48
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte           16     9 (average)
  2014                           ;	Chosen strategy is simple_byte
  2015  001514  5046               	movf	??_vfpfcnvrt^0,w,c
  2016  001516  0A20               	xorlw	32	; case 32
  2017  001518  B4D8               	btfsc	status,2,c
  2018  00151A  EF6B  F00A         	goto	l3688
  2019  00151E  0A03               	xorlw	3	; case 35
  2020  001520  B4D8               	btfsc	status,2,c
  2021  001522  EF6E  F00A         	goto	l3692
  2022  001526  0A08               	xorlw	8	; case 43
  2023  001528  B4D8               	btfsc	status,2,c
  2024  00152A  EF68  F00A         	goto	l3684
  2025  00152E  0A06               	xorlw	6	; case 45
  2026  001530  B4D8               	btfsc	status,2,c
  2027  001532  EF5B  F00A         	goto	l3676
  2028  001536  0A1D               	xorlw	29	; case 48
  2029  001538  B4D8               	btfsc	status,2,c
  2030  00153A  EF65  F00A         	goto	l3680
  2031  00153E  EF71  F00A         	goto	l3696
  2032  001542                     l3702:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2035  001542  5052               	movf	vfpfcnvrt@done^0,w,c
  2036  001544  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2037  001546  B4D8               	btfsc	status,2,c
  2038  001548  EFA8  F00A         	goto	u2591
  2039  00154C  EFAA  F00A         	goto	u2590
  2040  001550                     u2591:
  2041  001550  EF77  F00A         	goto	l3700
  2042  001554                     u2590:
  2043  001554                     
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2045  001554  A06E               	btfss	_flags^0,0,c
  2046  001556  EFAF  F00A         	goto	u2601
  2047  00155A  EFB1  F00A         	goto	u2600
  2048  00155E                     u2601:
  2049  00155E  EFB2  F00A         	goto	l3706
  2050  001562                     u2600:
  2051  001562                     
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2053  001562  926E               	bcf	_flags^0,1,c
  2054  001564                     l3706:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2057  001564  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2058  001568  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2059  00156C  CFDE FFF6          	movff	postinc2,tblptrl
  2060  001570  CFDD FFF7          	movff	postdec2,tblptrh
  2061  001574                     	if	0	;tblptru may be non-zero
  2062  001574                     	endif
  2063  001574                     	if	0	;tblptru may be non-zero
  2064  001574                     	endif
  2065  001574  0008               	tblrd		*
  2066  001576  50F5               	movf	tablat,w,c
  2067  001578  0A2A               	xorlw	42
  2068  00157A  A4D8               	btfss	status,2,c
  2069  00157C  EFC2  F00A         	goto	u2611
  2070  001580  EFC4  F00A         	goto	u2610
  2071  001584                     u2611:
  2072  001584  EFED  F00A         	goto	l3714
  2073  001588                     u2610:
  2074  001588                     
  2075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2076  001588  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2077  00158C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2078  001590  2ADE               	incf	postinc2,f,c
  2079  001592  0E00               	movlw	0
  2080  001594  22DD               	addwfc	postdec2,f,c
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2083  001596  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2084  00159A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2085  00159E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2086  0015A2  0E02               	movlw	2
  2087  0015A4  26DE               	addwf	postinc2,f,c
  2088  0015A6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2089  0015AA  0E00               	movlw	0
  2090  0015AC  22DD               	addwfc	postdec2,f,c
  2091  0015AE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2092  0015B2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2093  0015B6  CFDE F06A          	movff	postinc2,_width
  2094  0015BA  CFDD F06B          	movff	postdec2,_width+1
  2095  0015BE                     
  2096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2097  0015BE  BE6B               	btfsc	(_width+1)^0,7,c
  2098  0015C0  EFE6  F00A         	goto	u2620
  2099  0015C4  EFE4  F00A         	goto	u2621
  2100  0015C8                     u2621:
  2101  0015C8  EF30  F00B         	goto	l3724
  2102  0015CC                     u2620:
  2103  0015CC                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2105  0015CC  806E               	bsf	_flags^0,0,c
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2108  0015CE  6C6A               	negf	_width^0,c
  2109  0015D0  1E6B               	comf	(_width+1)^0,f,c
  2110  0015D2  B0D8               	btfsc	status,0,c
  2111  0015D4  2A6B               	incf	(_width+1)^0,f,c
  2112  0015D6  EF30  F00B         	goto	l3724
  2113  0015DA                     l3714:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2116  0015DA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2117  0015DE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2118  0015E2  CFDE F00C          	movff	postinc2,atoi@s
  2119  0015E6  CFDD F00D          	movff	postdec2,atoi@s+1
  2120  0015EA  ECD5  F00C         	call	_atoi	;wreg free
  2121  0015EE  C00C  F06A         	movff	?_atoi,_width
  2122  0015F2  C00D  F06B         	movff	?_atoi+1,_width+1
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2125  0015F6  EF04  F00B         	goto	l3718
  2126  0015FA                     l3716:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2129  0015FA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2130  0015FE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2131  001602  2ADE               	incf	postinc2,f,c
  2132  001604  0E00               	movlw	0
  2133  001606  22DD               	addwfc	postdec2,f,c
  2134  001608                     l3718:
  2135  001608  0ED0               	movlw	208
  2136  00160A  6E46               	movwf	??_vfpfcnvrt^0,c
  2137  00160C  0EFF               	movlw	255
  2138  00160E  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2139  001610  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2140  001614  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2141  001618  CFDE FFF6          	movff	postinc2,tblptrl
  2142  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  2143  001620                     	if	0	;tblptru may be non-zero
  2144  001620                     	endif
  2145  001620                     	if	0	;tblptru may be non-zero
  2146  001620                     	endif
  2147  001620  0008               	tblrd		*
  2148  001622  50F5               	movf	tablat,w,c
  2149  001624  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2150  001626  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2151  001628  5046               	movf	??_vfpfcnvrt^0,w,c
  2152  00162A  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2153  00162C  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2154  00162E  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2155  001630  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2156  001632  E10A               	bnz	u2630
  2157  001634  0E0A               	movlw	10
  2158  001636  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2159  001638  A0D8               	btfss	status,0,c
  2160  00163A  EF21  F00B         	goto	u2631
  2161  00163E  EF24  F00B         	goto	u2630
  2162  001642                     u2631:
  2163  001642  0E01               	movlw	1
  2164  001644  EF25  F00B         	goto	u2640
  2165  001648                     u2630:
  2166  001648  0E00               	movlw	0
  2167  00164A                     u2640:
  2168  00164A  6E54               	movwf	_vfpfcnvrt$1253^0,c
  2169  00164C  6A55               	clrf	(_vfpfcnvrt$1253+1)^0,c
  2170  00164E  5054               	movf	_vfpfcnvrt$1253^0,w,c
  2171  001650  1055               	iorwf	(_vfpfcnvrt$1253+1)^0,w,c
  2172  001652  A4D8               	btfss	status,2,c
  2173  001654  EF2E  F00B         	goto	u2651
  2174  001658  EF30  F00B         	goto	u2650
  2175  00165C                     u2651:
  2176  00165C  EFFD  F00A         	goto	l3716
  2177  001660                     u2650:
  2178  001660                     l3724:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2181  001660  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2182  001664  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2183  001668  CFDE FFF6          	movff	postinc2,tblptrl
  2184  00166C  CFDD FFF7          	movff	postdec2,tblptrh
  2185  001670                     	if	0	;tblptru may be non-zero
  2186  001670                     	endif
  2187  001670                     	if	0	;tblptru may be non-zero
  2188  001670                     	endif
  2189  001670  0008               	tblrd		*
  2190  001672  50F5               	movf	tablat,w,c
  2191  001674  0A75               	xorlw	117
  2192  001676  A4D8               	btfss	status,2,c
  2193  001678  EF40  F00B         	goto	u2661
  2194  00167C  EF42  F00B         	goto	u2660
  2195  001680                     u2661:
  2196  001680  EF83  F00B         	goto	l3732
  2197  001684                     u2660:
  2198  001684                     
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2200  001684  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2201  001688  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2202  00168C  2ADE               	incf	postinc2,f,c
  2203  00168E  0E00               	movlw	0
  2204  001690  22DD               	addwfc	postdec2,f,c
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2207  001692  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2208  001696  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2209  00169A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2210  00169E  0E02               	movlw	2
  2211  0016A0  26DE               	addwf	postinc2,f,c
  2212  0016A2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2213  0016A6  0E00               	movlw	0
  2214  0016A8  22DD               	addwfc	postdec2,f,c
  2215  0016AA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2216  0016AE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2217  0016B2  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  2218  0016B6  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  2219  0016BA  C048  F04A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2220  0016BE  C049  F04B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2221  0016C2  6A4C               	clrf	(vfpfcnvrt@llu+2)^0,c
  2222  0016C4  6A4D               	clrf	(vfpfcnvrt@llu+3)^0,c
  2223  0016C6  6A4E               	clrf	(vfpfcnvrt@llu+4)^0,c
  2224  0016C8  6A4F               	clrf	(vfpfcnvrt@llu+5)^0,c
  2225  0016CA  6A50               	clrf	(vfpfcnvrt@llu+6)^0,c
  2226  0016CC  6A51               	clrf	(vfpfcnvrt@llu+7)^0,c
  2227  0016CE                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2229  0016CE  C040  F020         	movff	vfpfcnvrt@fp,utoa@fp
  2230  0016D2  C041  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2231  0016D6  C04A  F022         	movff	vfpfcnvrt@llu,utoa@d
  2232  0016DA  C04B  F023         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2233  0016DE  C04C  F024         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2234  0016E2  C04D  F025         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2235  0016E6  C04E  F026         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2236  0016EA  C04F  F027         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2237  0016EE  C050  F028         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2238  0016F2  C051  F029         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2239  0016F6  ECD5  F00B         	call	_utoa	;wreg free
  2240  0016FA  C020  F040         	movff	?_utoa,?_vfpfcnvrt
  2241  0016FE  C021  F041         	movff	?_utoa+1,?_vfpfcnvrt+1
  2242  001702  EFD4  F00B         	goto	l1082
  2243  001706                     l3732:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2246  001706  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247  00170A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248  00170E  CFDE FFF6          	movff	postinc2,tblptrl
  2249  001712  CFDD FFF7          	movff	postdec2,tblptrh
  2250  001716                     	if	0	;tblptru may be non-zero
  2251  001716                     	endif
  2252  001716                     	if	0	;tblptru may be non-zero
  2253  001716                     	endif
  2254  001716  0008               	tblrd		*
  2255  001718  50F5               	movf	tablat,w,c
  2256  00171A  0A25               	xorlw	37
  2257  00171C  A4D8               	btfss	status,2,c
  2258  00171E  EF93  F00B         	goto	u2671
  2259  001722  EF95  F00B         	goto	u2670
  2260  001726                     u2671:
  2261  001726  EFAC  F00B         	goto	l3742
  2262  00172A                     u2670:
  2263  00172A                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2265  00172A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2266  00172E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2267  001732  2ADE               	incf	postinc2,f,c
  2268  001734  0E00               	movlw	0
  2269  001736  22DD               	addwfc	postdec2,f,c
  2270  001738                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2272  001738  0E00               	movlw	0
  2273  00173A  6E06               	movwf	(fputc@c+1)^0,c
  2274  00173C  0E25               	movlw	37
  2275  00173E  6E05               	movwf	fputc@c^0,c
  2276  001740  C040  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2277  001744  C041  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2278  001748  ECF1  F00E         	call	_fputc	;wreg free
  2279  00174C                     l3738:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2282  00174C  0E00               	movlw	0
  2283  00174E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2284  001750  0E01               	movlw	1
  2285  001752  6E40               	movwf	?_vfpfcnvrt^0,c
  2286  001754  EFD4  F00B         	goto	l1082
  2287  001758                     l3742:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2290  001758  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2291  00175C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2292  001760  2ADE               	incf	postinc2,f,c
  2293  001762  0E00               	movlw	0
  2294  001764  22DD               	addwfc	postdec2,f,c
  2295  001766                     
  2296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2297  001766  0E00               	movlw	0
  2298  001768  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2299  00176A  0E00               	movlw	0
  2300  00176C  6E40               	movwf	?_vfpfcnvrt^0,c
  2301  00176E  EFD4  F00B         	goto	l1082
  2302  001772                     l3748:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2305  001772  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2306  001776  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2307  00177A  CFDE FFF6          	movff	postinc2,tblptrl
  2308  00177E  CFDD FFF7          	movff	postdec2,tblptrh
  2309  001782                     	if	0	;tblptru may be non-zero
  2310  001782                     	endif
  2311  001782                     	if	0	;tblptru may be non-zero
  2312  001782                     	endif
  2313  001782  0008               	tblrd		*
  2314  001784  50F5               	movf	tablat,w,c
  2315  001786  6E05               	movwf	fputc@c^0,c
  2316  001788  6A06               	clrf	(fputc@c+1)^0,c
  2317  00178A  C040  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2318  00178E  C041  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2319  001792  ECF1  F00E         	call	_fputc	;wreg free
  2320  001796                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2322  001796  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323  00179A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  00179E  2ADE               	incf	postinc2,f,c
  2325  0017A0  0E00               	movlw	0
  2326  0017A2  22DD               	addwfc	postdec2,f,c
  2327  0017A4  EFA6  F00B         	goto	l3738
  2328  0017A8                     l1082:
  2329  0017A8  0012               	return		;funcret
  2330  0017AA                     __end_of_vfpfcnvrt:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _utoa *****************
  2334 ;; Defined at:
  2335 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2338 ;;		 -> sprintf@f(6), 
  2339 ;;  d               8   33[COMRAM] unsigned long long 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  n               8   53[COMRAM] unsigned long long 
  2342 ;;  i               2   61[COMRAM] int 
  2343 ;;  w               2   51[COMRAM] int 
  2344 ;;  p               2   49[COMRAM] int 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  2   31[COMRAM] int 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:       32 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    5
  2361 ;; This function calls:
  2362 ;;		___lodiv
  2363 ;;		___lomod
  2364 ;;		_pad
  2365 ;; This function is called by:
  2366 ;;		_vfpfcnvrt
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text6
  2371  0017AA                     __ptext6:
  2372                           	callstack 0
  2373  0017AA                     _utoa:
  2374                           	callstack 22
  2375  0017AA                     
  2376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2377  0017AA  BE6D               	btfsc	(_prec+1)^0,7,c
  2378  0017AC  EFDA  F00B         	goto	u2441
  2379  0017B0  EFDC  F00B         	goto	u2440
  2380  0017B4                     u2441:
  2381  0017B4  EFDD  F00B         	goto	l3592
  2382  0017B8                     u2440:
  2383  0017B8                     
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2385  0017B8  926E               	bcf	_flags^0,1,c
  2386  0017BA                     l3592:
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2389  0017BA  BE6D               	btfsc	(_prec+1)^0,7,c
  2390  0017BC  EFEA  F00B         	goto	u2450
  2391  0017C0  506D               	movf	(_prec+1)^0,w,c
  2392  0017C2  E106               	bnz	u2451
  2393  0017C4  046C               	decf	_prec^0,w,c
  2394  0017C6  B0D8               	btfsc	status,0,c
  2395  0017C8  EFE8  F00B         	goto	u2451
  2396  0017CC  EFEA  F00B         	goto	u2450
  2397  0017D0                     u2451:
  2398  0017D0  EFF0  F00B         	goto	l1045
  2399  0017D4                     u2450:
  2400  0017D4  0E00               	movlw	0
  2401  0017D6  6E33               	movwf	(utoa@p+1)^0,c
  2402  0017D8  0E01               	movlw	1
  2403  0017DA  6E32               	movwf	utoa@p^0,c
  2404  0017DC  EFF4  F00B         	goto	l1047
  2405  0017E0                     l1045:
  2406  0017E0  C06C  F032         	movff	_prec,utoa@p
  2407  0017E4  C06D  F033         	movff	_prec+1,utoa@p+1
  2408  0017E8                     l1047:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2411  0017E8  C06A  F034         	movff	_width,utoa@w
  2412  0017EC  C06B  F035         	movff	_width+1,utoa@w+1
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2415  0017F0  C022  F036         	movff	utoa@d,utoa@n
  2416  0017F4  C023  F037         	movff	utoa@d+1,utoa@n+1
  2417  0017F8  C024  F038         	movff	utoa@d+2,utoa@n+2
  2418  0017FC  C025  F039         	movff	utoa@d+3,utoa@n+3
  2419  001800  C026  F03A         	movff	utoa@d+4,utoa@n+4
  2420  001804  C027  F03B         	movff	utoa@d+5,utoa@n+5
  2421  001808  C028  F03C         	movff	utoa@d+6,utoa@n+6
  2422  00180C  C029  F03D         	movff	utoa@d+7,utoa@n+7
  2423  001810                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2425  001810  0E00               	movlw	0
  2426  001812  6E3F               	movwf	(utoa@i+1)^0,c
  2427  001814  0E1F               	movlw	31
  2428  001816  6E3E               	movwf	utoa@i^0,c
  2429  001818                     
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2431  001818  0E00               	movlw	0
  2432  00181A  0101               	movlb	1	; () banked
  2433  00181C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2436  00181E  EF87  F00C         	goto	l3610
  2437  001822                     l3600:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
  2440  001822  063E               	decf	utoa@i^0,f,c
  2441  001824  A0D8               	btfss	status,0,c
  2442  001826  063F               	decf	(utoa@i+1)^0,f,c
  2443  001828                     
  2444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2445  001828  0E00               	movlw	low _dbuf
  2446  00182A  243E               	addwf	utoa@i^0,w,c
  2447  00182C  6ED9               	movwf	fsr2l,c
  2448  00182E  0E01               	movlw	high _dbuf
  2449  001830  203F               	addwfc	(utoa@i+1)^0,w,c
  2450  001832  6EDA               	movwf	fsr2h,c
  2451  001834  C036  F005         	movff	utoa@n,___lomod@dividend
  2452  001838  C037  F006         	movff	utoa@n+1,___lomod@dividend+1
  2453  00183C  C038  F007         	movff	utoa@n+2,___lomod@dividend+2
  2454  001840  C039  F008         	movff	utoa@n+3,___lomod@dividend+3
  2455  001844  C03A  F009         	movff	utoa@n+4,___lomod@dividend+4
  2456  001848  C03B  F00A         	movff	utoa@n+5,___lomod@dividend+5
  2457  00184C  C03C  F00B         	movff	utoa@n+6,___lomod@dividend+6
  2458  001850  C03D  F00C         	movff	utoa@n+7,___lomod@dividend+7
  2459  001854  0E0A               	movlw	10
  2460  001856  6E0D               	movwf	___lomod@divisor^0,c
  2461  001858  0E00               	movlw	0
  2462  00185A  6E0E               	movwf	(___lomod@divisor+1)^0,c
  2463  00185C  0E00               	movlw	0
  2464  00185E  6E0F               	movwf	(___lomod@divisor+2)^0,c
  2465  001860  0E00               	movlw	0
  2466  001862  6E10               	movwf	(___lomod@divisor+3)^0,c
  2467  001864  0E00               	movlw	0
  2468  001866  6E11               	movwf	(___lomod@divisor+4)^0,c
  2469  001868  0E00               	movlw	0
  2470  00186A  6E12               	movwf	(___lomod@divisor+5)^0,c
  2471  00186C  0E00               	movlw	0
  2472  00186E  6E13               	movwf	(___lomod@divisor+6)^0,c
  2473  001870  0E00               	movlw	0
  2474  001872  6E14               	movwf	(___lomod@divisor+7)^0,c
  2475  001874  EC89  F00E         	call	___lomod	;wreg free
  2476  001878  C005  F02A         	movff	?___lomod,??_utoa
  2477  00187C  C006  F02B         	movff	?___lomod+1,??_utoa+1
  2478  001880  C007  F02C         	movff	?___lomod+2,??_utoa+2
  2479  001884  C008  F02D         	movff	?___lomod+3,??_utoa+3
  2480  001888  C009  F02E         	movff	?___lomod+4,??_utoa+4
  2481  00188C  C00A  F02F         	movff	?___lomod+5,??_utoa+5
  2482  001890  C00B  F030         	movff	?___lomod+6,??_utoa+6
  2483  001894  C00C  F031         	movff	?___lomod+7,??_utoa+7
  2484  001898  502A               	movf	??_utoa^0,w,c
  2485  00189A  0F30               	addlw	48
  2486  00189C  6EDF               	movwf	indf2,c
  2487  00189E                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
  2489  00189E  0632               	decf	utoa@p^0,f,c
  2490  0018A0  A0D8               	btfss	status,0,c
  2491  0018A2  0633               	decf	(utoa@p+1)^0,f,c
  2492  0018A4                     
  2493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
  2494  0018A4  0634               	decf	utoa@w^0,f,c
  2495  0018A6  A0D8               	btfss	status,0,c
  2496  0018A8  0635               	decf	(utoa@w+1)^0,f,c
  2497  0018AA                     
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2499  0018AA  C036  F005         	movff	utoa@n,___lodiv@dividend
  2500  0018AE  C037  F006         	movff	utoa@n+1,___lodiv@dividend+1
  2501  0018B2  C038  F007         	movff	utoa@n+2,___lodiv@dividend+2
  2502  0018B6  C039  F008         	movff	utoa@n+3,___lodiv@dividend+3
  2503  0018BA  C03A  F009         	movff	utoa@n+4,___lodiv@dividend+4
  2504  0018BE  C03B  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  2505  0018C2  C03C  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  2506  0018C6  C03D  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  2507  0018CA  0E0A               	movlw	10
  2508  0018CC  6E0D               	movwf	___lodiv@divisor^0,c
  2509  0018CE  0E00               	movlw	0
  2510  0018D0  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  2511  0018D2  0E00               	movlw	0
  2512  0018D4  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  2513  0018D6  0E00               	movlw	0
  2514  0018D8  6E10               	movwf	(___lodiv@divisor+3)^0,c
  2515  0018DA  0E00               	movlw	0
  2516  0018DC  6E11               	movwf	(___lodiv@divisor+4)^0,c
  2517  0018DE  0E00               	movlw	0
  2518  0018E0  6E12               	movwf	(___lodiv@divisor+5)^0,c
  2519  0018E2  0E00               	movlw	0
  2520  0018E4  6E13               	movwf	(___lodiv@divisor+6)^0,c
  2521  0018E6  0E00               	movlw	0
  2522  0018E8  6E14               	movwf	(___lodiv@divisor+7)^0,c
  2523  0018EA  EC9D  F00D         	call	___lodiv	;wreg free
  2524  0018EE  C005  F036         	movff	?___lodiv,utoa@n
  2525  0018F2  C006  F037         	movff	?___lodiv+1,utoa@n+1
  2526  0018F6  C007  F038         	movff	?___lodiv+2,utoa@n+2
  2527  0018FA  C008  F039         	movff	?___lodiv+3,utoa@n+3
  2528  0018FE  C009  F03A         	movff	?___lodiv+4,utoa@n+4
  2529  001902  C00A  F03B         	movff	?___lodiv+5,utoa@n+5
  2530  001906  C00B  F03C         	movff	?___lodiv+6,utoa@n+6
  2531  00190A  C00C  F03D         	movff	?___lodiv+7,utoa@n+7
  2532  00190E                     l3610:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2535  00190E  503E               	movf	utoa@i^0,w,c
  2536  001910  103F               	iorwf	(utoa@i+1)^0,w,c
  2537  001912  B4D8               	btfsc	status,2,c
  2538  001914  EF8E  F00C         	goto	u2461
  2539  001918  EF90  F00C         	goto	u2460
  2540  00191C                     u2461:
  2541  00191C  EFC0  F00C         	goto	l3620
  2542  001920                     u2460:
  2543  001920  5036               	movf	utoa@n^0,w,c
  2544  001922  1037               	iorwf	(utoa@n+1)^0,w,c
  2545  001924  1038               	iorwf	(utoa@n+2)^0,w,c
  2546  001926  1039               	iorwf	(utoa@n+3)^0,w,c
  2547  001928  103A               	iorwf	(utoa@n+4)^0,w,c
  2548  00192A  103B               	iorwf	(utoa@n+5)^0,w,c
  2549  00192C  103C               	iorwf	(utoa@n+6)^0,w,c
  2550  00192E  103D               	iorwf	(utoa@n+7)^0,w,c
  2551  001930  A4D8               	btfss	status,2,c
  2552  001932  EF9D  F00C         	goto	u2471
  2553  001936  EF9F  F00C         	goto	u2470
  2554  00193A                     u2471:
  2555  00193A  EF11  F00C         	goto	l3600
  2556  00193E                     u2470:
  2557  00193E  BE33               	btfsc	(utoa@p+1)^0,7,c
  2558  001940  EFAC  F00C         	goto	u2480
  2559  001944  5033               	movf	(utoa@p+1)^0,w,c
  2560  001946  E106               	bnz	u2481
  2561  001948  0432               	decf	utoa@p^0,w,c
  2562  00194A  B0D8               	btfsc	status,0,c
  2563  00194C  EFAA  F00C         	goto	u2481
  2564  001950  EFAC  F00C         	goto	u2480
  2565  001954                     u2481:
  2566  001954  EF11  F00C         	goto	l3600
  2567  001958                     u2480:
  2568  001958  BE35               	btfsc	(utoa@w+1)^0,7,c
  2569  00195A  EFB7  F00C         	goto	u2491
  2570  00195E  5035               	movf	(utoa@w+1)^0,w,c
  2571  001960  E108               	bnz	u2490
  2572  001962  0434               	decf	utoa@w^0,w,c
  2573  001964  A0D8               	btfss	status,0,c
  2574  001966  EFB7  F00C         	goto	u2491
  2575  00196A  EFB9  F00C         	goto	u2490
  2576  00196E                     u2491:
  2577  00196E  EFC0  F00C         	goto	l3620
  2578  001972                     u2490:
  2579  001972  B26E               	btfsc	_flags^0,1,c
  2580  001974  EFBE  F00C         	goto	u2501
  2581  001978  EFC0  F00C         	goto	u2500
  2582  00197C                     u2501:
  2583  00197C  EF11  F00C         	goto	l3600
  2584  001980                     u2500:
  2585  001980                     l3620:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2588  001980  C020  F015         	movff	utoa@fp,pad@fp
  2589  001984  C021  F016         	movff	utoa@fp+1,pad@fp+1
  2590  001988  0E00               	movlw	low _dbuf
  2591  00198A  243E               	addwf	utoa@i^0,w,c
  2592  00198C  6E17               	movwf	pad@buf^0,c
  2593  00198E  0E01               	movlw	high _dbuf
  2594  001990  203F               	addwfc	(utoa@i+1)^0,w,c
  2595  001992  6E18               	movwf	(pad@buf+1)^0,c
  2596  001994  C034  F019         	movff	utoa@w,pad@p
  2597  001998  C035  F01A         	movff	utoa@w+1,pad@p+1
  2598  00199C  EC1F  F010         	call	_pad	;wreg free
  2599  0019A0  C015  F020         	movff	?_pad,?_utoa
  2600  0019A4  C016  F021         	movff	?_pad+1,?_utoa+1
  2601  0019A8  0012               	return		;funcret
  2602  0019AA                     __end_of_utoa:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _pad *****************
  2606 ;; Defined at:
  2607 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2610 ;;		 -> sprintf@f(6), 
  2611 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2612 ;;		 -> dbuf(32), 
  2613 ;;  p               2   24[COMRAM] int 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  w               2   29[COMRAM] int 
  2616 ;;  i               2   27[COMRAM] int 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2   20[COMRAM] int 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2626 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;Total ram usage:       11 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    4
  2633 ;; This function calls:
  2634 ;;		_fputc
  2635 ;;		_fputs
  2636 ;;		_strlen
  2637 ;; This function is called by:
  2638 ;;		_utoa
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text7
  2643  00203E                     __ptext7:
  2644                           	callstack 0
  2645  00203E                     _pad:
  2646                           	callstack 22
  2647  00203E                     
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2649  00203E  A06E               	btfss	_flags^0,0,c
  2650  002040  EF24  F010         	goto	u2361
  2651  002044  EF26  F010         	goto	u2360
  2652  002048                     u2361:
  2653  002048  EF30  F010         	goto	l3554
  2654  00204C                     u2360:
  2655  00204C                     
  2656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2657  00204C  C017  F00E         	movff	pad@buf,fputs@s
  2658  002050  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2659  002054  C015  F010         	movff	pad@fp,fputs@fp
  2660  002058  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2661  00205C  ECE6  F012         	call	_fputs	;wreg free
  2662  002060                     l3554:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2665  002060  BE1A               	btfsc	(pad@p+1)^0,7,c
  2666  002062  EF35  F010         	goto	u2371
  2667  002066  EF37  F010         	goto	u2370
  2668  00206A                     u2371:
  2669  00206A  EF3D  F010         	goto	l3558
  2670  00206E                     u2370:
  2671  00206E  C019  F01E         	movff	pad@p,pad@w
  2672  002072  C01A  F01F         	movff	pad@p+1,pad@w+1
  2673  002076  EF41  F010         	goto	l1035
  2674  00207A                     l3558:
  2675  00207A  0E00               	movlw	0
  2676  00207C  6E1F               	movwf	(pad@w+1)^0,c
  2677  00207E  0E00               	movlw	0
  2678  002080  6E1E               	movwf	pad@w^0,c
  2679  002082                     l1035:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2682  002082  0E00               	movlw	0
  2683  002084  6E1D               	movwf	(pad@i+1)^0,c
  2684  002086  0E00               	movlw	0
  2685  002088  6E1C               	movwf	pad@i^0,c
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2688  00208A  EF53  F010         	goto	l3564
  2689  00208E                     l3560:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2692  00208E  0E00               	movlw	0
  2693  002090  6E06               	movwf	(fputc@c+1)^0,c
  2694  002092  0E20               	movlw	32
  2695  002094  6E05               	movwf	fputc@c^0,c
  2696  002096  C015  F007         	movff	pad@fp,fputc@fp
  2697  00209A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2698  00209E  ECF1  F00E         	call	_fputc	;wreg free
  2699  0020A2                     
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2701  0020A2  4A1C               	infsnz	pad@i^0,f,c
  2702  0020A4  2A1D               	incf	(pad@i+1)^0,f,c
  2703  0020A6                     l3564:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2706  0020A6  501E               	movf	pad@w^0,w,c
  2707  0020A8  5C1C               	subwf	pad@i^0,w,c
  2708  0020AA  501D               	movf	(pad@i+1)^0,w,c
  2709  0020AC  0A80               	xorlw	128
  2710  0020AE  6E1B               	movwf	??_pad^0,c
  2711  0020B0  501F               	movf	(pad@w+1)^0,w,c
  2712  0020B2  0A80               	xorlw	128
  2713  0020B4  581B               	subwfb	??_pad^0,w,c
  2714  0020B6  A0D8               	btfss	status,0,c
  2715  0020B8  EF60  F010         	goto	u2381
  2716  0020BC  EF62  F010         	goto	u2380
  2717  0020C0                     u2381:
  2718  0020C0  EF47  F010         	goto	l3560
  2719  0020C4                     u2380:
  2720  0020C4                     
  2721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2722  0020C4  B06E               	btfsc	_flags^0,0,c
  2723  0020C6  EF67  F010         	goto	u2391
  2724  0020CA  EF69  F010         	goto	u2390
  2725  0020CE                     u2391:
  2726  0020CE  EF73  F010         	goto	l3568
  2727  0020D2                     u2390:
  2728  0020D2                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2730  0020D2  C017  F00E         	movff	pad@buf,fputs@s
  2731  0020D6  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2732  0020DA  C015  F010         	movff	pad@fp,fputs@fp
  2733  0020DE  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2734  0020E2  ECE6  F012         	call	_fputs	;wreg free
  2735  0020E6                     l3568:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2738  0020E6  C017  F005         	movff	pad@buf,strlen@s
  2739  0020EA  C018  F006         	movff	pad@buf+1,strlen@s+1
  2740  0020EE  EC43  F013         	call	_strlen	;wreg free
  2741  0020F2  501E               	movf	pad@w^0,w,c
  2742  0020F4  2405               	addwf	?_strlen^0,w,c
  2743  0020F6  6E15               	movwf	?_pad^0,c
  2744  0020F8  501F               	movf	(pad@w+1)^0,w,c
  2745  0020FA  2006               	addwfc	(?_strlen+1)^0,w,c
  2746  0020FC  6E16               	movwf	(?_pad+1)^0,c
  2747  0020FE  0012               	return		;funcret
  2748  002100                     __end_of_pad:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function _strlen *****************
  2752 ;; Defined at:
  2753 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2756 ;;		 -> dbuf(32), main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2759 ;;		 -> dbuf(32), main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2    4[COMRAM] unsigned int 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;Total ram usage:        4 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_pad
  2780 ;;		_strcat
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text8
  2785  002686                     __ptext8:
  2786                           	callstack 0
  2787  002686                     _strlen:
  2788                           	callstack 28
  2789  002686  C005  F007         	movff	strlen@s,strlen@a
  2790  00268A  C006  F008         	movff	strlen@s+1,strlen@a+1
  2791  00268E  EF4B  F013         	goto	l3500
  2792  002692                     l3498:
  2793  002692  4A05               	infsnz	strlen@s^0,f,c
  2794  002694  2A06               	incf	(strlen@s+1)^0,f,c
  2795  002696                     l3500:
  2796  002696  C005  FFD9         	movff	strlen@s,fsr2l
  2797  00269A  C006  FFDA         	movff	strlen@s+1,fsr2h
  2798  00269E  50DF               	movf	indf2,w,c
  2799  0026A0  A4D8               	btfss	status,2,c
  2800  0026A2  EF55  F013         	goto	u2281
  2801  0026A6  EF57  F013         	goto	u2280
  2802  0026AA                     u2281:
  2803  0026AA  EF49  F013         	goto	l3498
  2804  0026AE                     u2280:
  2805  0026AE  5007               	movf	strlen@a^0,w,c
  2806  0026B0  5C05               	subwf	strlen@s^0,w,c
  2807  0026B2  6E05               	movwf	?_strlen^0,c
  2808  0026B4  5008               	movf	(strlen@a+1)^0,w,c
  2809  0026B6  5806               	subwfb	(strlen@s+1)^0,w,c
  2810  0026B8  6E06               	movwf	(?_strlen+1)^0,c
  2811  0026BA  0012               	return		;funcret
  2812  0026BC                     __end_of_strlen:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _fputs *****************
  2816 ;; Defined at:
  2817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2820 ;;		 -> dbuf(32), 
  2821 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2822 ;;		 -> sprintf@f(6), 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  i               2   18[COMRAM] int 
  2825 ;;  c               1   17[COMRAM] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  2   13[COMRAM] int 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        7 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    3
  2842 ;; This function calls:
  2843 ;;		_fputc
  2844 ;; This function is called by:
  2845 ;;		_pad
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text9
  2850  0025CC                     __ptext9:
  2851                           	callstack 0
  2852  0025CC                     _fputs:
  2853                           	callstack 22
  2854  0025CC  0E00               	movlw	0
  2855  0025CE  6E14               	movwf	(fputs@i+1)^0,c
  2856  0025D0  0E00               	movlw	0
  2857  0025D2  6E13               	movwf	fputs@i^0,c
  2858  0025D4  EFF7  F012         	goto	l3494
  2859  0025D8                     l3490:
  2860  0025D8  C012  F005         	movff	fputs@c,fputc@c
  2861  0025DC  6A06               	clrf	(fputc@c+1)^0,c
  2862  0025DE  C010  F007         	movff	fputs@fp,fputc@fp
  2863  0025E2  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2864  0025E6  ECF1  F00E         	call	_fputc	;wreg free
  2865  0025EA  4A13               	infsnz	fputs@i^0,f,c
  2866  0025EC  2A14               	incf	(fputs@i+1)^0,f,c
  2867  0025EE                     l3494:
  2868  0025EE  5013               	movf	fputs@i^0,w,c
  2869  0025F0  240E               	addwf	fputs@s^0,w,c
  2870  0025F2  6ED9               	movwf	fsr2l,c
  2871  0025F4  5014               	movf	(fputs@i+1)^0,w,c
  2872  0025F6  200F               	addwfc	(fputs@s+1)^0,w,c
  2873  0025F8  6EDA               	movwf	fsr2h,c
  2874  0025FA  50DF               	movf	indf2,w,c
  2875  0025FC  6E12               	movwf	fputs@c^0,c
  2876  0025FE  5012               	movf	fputs@c^0,w,c
  2877  002600  A4D8               	btfss	status,2,c
  2878  002602  EF05  F013         	goto	u2271
  2879  002606  EF07  F013         	goto	u2270
  2880  00260A                     u2271:
  2881  00260A  EFEC  F012         	goto	l3490
  2882  00260E                     u2270:
  2883  00260E  0012               	return		;funcret
  2884  002610                     __end_of_fputs:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _fputc *****************
  2888 ;; Defined at:
  2889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  c               2    4[COMRAM] int 
  2892 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2893 ;;		 -> sprintf@f(6), 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  2    4[COMRAM] int 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;Total ram usage:        9 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    2
  2912 ;; This function calls:
  2913 ;;		_putch
  2914 ;; This function is called by:
  2915 ;;		_pad
  2916 ;;		_vfpfcnvrt
  2917 ;;		_fputs
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text10
  2922  001DE2                     __ptext10:
  2923                           	callstack 0
  2924  001DE2                     _fputc:
  2925                           	callstack 22
  2926  001DE2  5007               	movf	fputc@fp^0,w,c
  2927  001DE4  1008               	iorwf	(fputc@fp+1)^0,w,c
  2928  001DE6  B4D8               	btfsc	status,2,c
  2929  001DE8  EFF8  F00E         	goto	u2231
  2930  001DEC  EFFA  F00E         	goto	u2230
  2931  001DF0                     u2231:
  2932  001DF0  EF03  F00F         	goto	l3478
  2933  001DF4                     u2230:
  2934  001DF4  5007               	movf	fputc@fp^0,w,c
  2935  001DF6  1008               	iorwf	(fputc@fp+1)^0,w,c
  2936  001DF8  A4D8               	btfss	status,2,c
  2937  001DFA  EF01  F00F         	goto	u2241
  2938  001DFE  EF03  F00F         	goto	u2240
  2939  001E02                     u2241:
  2940  001E02  EF08  F00F         	goto	l3480
  2941  001E06                     u2240:
  2942  001E06                     l3478:
  2943  001E06  5005               	movf	fputc@c^0,w,c
  2944  001E08  ECCC  F013         	call	_putch
  2945  001E0C  EF55  F00F         	goto	l1146
  2946  001E10                     l3480:
  2947  001E10  EE20 F004          	lfsr	2,4
  2948  001E14  5007               	movf	fputc@fp^0,w,c
  2949  001E16  26D9               	addwf	fsr2l,f,c
  2950  001E18  5008               	movf	(fputc@fp+1)^0,w,c
  2951  001E1A  22DA               	addwfc	fsr2h,f,c
  2952  001E1C  50DE               	movf	postinc2,w,c
  2953  001E1E  10DE               	iorwf	postinc2,w,c
  2954  001E20  B4D8               	btfsc	status,2,c
  2955  001E22  EF15  F00F         	goto	u2251
  2956  001E26  EF17  F00F         	goto	u2250
  2957  001E2A                     u2251:
  2958  001E2A  EF32  F00F         	goto	l3484
  2959  001E2E                     u2250:
  2960  001E2E  EE20 F004          	lfsr	2,4
  2961  001E32  5007               	movf	fputc@fp^0,w,c
  2962  001E34  26D9               	addwf	fsr2l,f,c
  2963  001E36  5008               	movf	(fputc@fp+1)^0,w,c
  2964  001E38  22DA               	addwfc	fsr2h,f,c
  2965  001E3A  EE10 F002          	lfsr	1,2
  2966  001E3E  5007               	movf	fputc@fp^0,w,c
  2967  001E40  26E1               	addwf	fsr1l,f,c
  2968  001E42  5008               	movf	(fputc@fp+1)^0,w,c
  2969  001E44  22E2               	addwfc	fsr1h,f,c
  2970  001E46  50DE               	movf	postinc2,w,c
  2971  001E48  5CE6               	subwf	postinc1,w,c
  2972  001E4A  50E6               	movf	postinc1,w,c
  2973  001E4C  0A80               	xorlw	128
  2974  001E4E  6E0D               	movwf	(??_fputc+4)^0,c
  2975  001E50  50DE               	movf	postinc2,w,c
  2976  001E52  0A80               	xorlw	128
  2977  001E54  580D               	subwfb	(??_fputc+4)^0,w,c
  2978  001E56  B0D8               	btfsc	status,0,c
  2979  001E58  EF30  F00F         	goto	u2261
  2980  001E5C  EF32  F00F         	goto	u2260
  2981  001E60                     u2261:
  2982  001E60  EF55  F00F         	goto	l1146
  2983  001E64                     u2260:
  2984  001E64                     l3484:
  2985  001E64  EE20 F002          	lfsr	2,2
  2986  001E68  5007               	movf	fputc@fp^0,w,c
  2987  001E6A  26D9               	addwf	fsr2l,f,c
  2988  001E6C  5008               	movf	(fputc@fp+1)^0,w,c
  2989  001E6E  22DA               	addwfc	fsr2h,f,c
  2990  001E70  CFDE F009          	movff	postinc2,??_fputc
  2991  001E74  CFDD F00A          	movff	postdec2,??_fputc+1
  2992  001E78  C007  FFD9         	movff	fputc@fp,fsr2l
  2993  001E7C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2994  001E80  CFDE F00B          	movff	postinc2,??_fputc+2
  2995  001E84  CFDD F00C          	movff	postdec2,??_fputc+3
  2996  001E88  5009               	movf	??_fputc^0,w,c
  2997  001E8A  240B               	addwf	(??_fputc+2)^0,w,c
  2998  001E8C  6ED9               	movwf	fsr2l,c
  2999  001E8E  500A               	movf	(??_fputc+1)^0,w,c
  3000  001E90  200C               	addwfc	(??_fputc+3)^0,w,c
  3001  001E92  6EDA               	movwf	fsr2h,c
  3002  001E94  C005  FFDF         	movff	fputc@c,indf2
  3003  001E98  EE20 F002          	lfsr	2,2
  3004  001E9C  5007               	movf	fputc@fp^0,w,c
  3005  001E9E  26D9               	addwf	fsr2l,f,c
  3006  001EA0  5008               	movf	(fputc@fp+1)^0,w,c
  3007  001EA2  22DA               	addwfc	fsr2h,f,c
  3008  001EA4  2ADE               	incf	postinc2,f,c
  3009  001EA6  0E00               	movlw	0
  3010  001EA8  22DD               	addwfc	postdec2,f,c
  3011  001EAA                     l1146:
  3012  001EAA  0012               	return		;funcret
  3013  001EAC                     __end_of_fputc:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _putch *****************
  3017 ;; Defined at:
  3018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  c               1    wreg     unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  c               1    0[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_fputc
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text11
  3047  002798                     __ptext11:
  3048                           	callstack 0
  3049  002798                     _putch:
  3050                           	callstack 22
  3051  002798  0012               	return		;funcret
  3052  00279A                     __end_of_putch:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function ___lomod *****************
  3056 ;; Defined at:
  3057 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  dividend        8    4[COMRAM] unsigned long long 
  3060 ;;  divisor         8   12[COMRAM] unsigned long long 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  counter         1   20[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  8    4[COMRAM] unsigned long long 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3072 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;Total ram usage:       17 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_utoa
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text12
  3087  001D12                     __ptext12:
  3088                           	callstack 0
  3089  001D12                     ___lomod:
  3090                           	callstack 25
  3091  001D12  500D               	movf	___lomod@divisor^0,w,c
  3092  001D14  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  3093  001D16  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  3094  001D18  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  3095  001D1A  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  3096  001D1C  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  3097  001D1E  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  3098  001D20  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  3099  001D22  B4D8               	btfsc	status,2,c
  3100  001D24  EF96  F00E         	goto	u2331
  3101  001D28  EF98  F00E         	goto	u2330
  3102  001D2C                     u2331:
  3103  001D2C  EFE0  F00E         	goto	l776
  3104  001D30                     u2330:
  3105  001D30  0E01               	movlw	1
  3106  001D32  6E15               	movwf	___lomod@counter^0,c
  3107  001D34  EFA6  F00E         	goto	l3540
  3108  001D38                     l3538:
  3109  001D38  90D8               	bcf	status,0,c
  3110  001D3A  360D               	rlcf	___lomod@divisor^0,f,c
  3111  001D3C  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  3112  001D3E  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  3113  001D40  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  3114  001D42  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  3115  001D44  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  3116  001D46  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  3117  001D48  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  3118  001D4A  2A15               	incf	___lomod@counter^0,f,c
  3119  001D4C                     l3540:
  3120  001D4C  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  3121  001D4E  EFAB  F00E         	goto	u2341
  3122  001D52  EFAD  F00E         	goto	u2340
  3123  001D56                     u2341:
  3124  001D56  EF9C  F00E         	goto	l3538
  3125  001D5A                     u2340:
  3126  001D5A                     l3542:
  3127  001D5A  500D               	movf	___lomod@divisor^0,w,c
  3128  001D5C  5C05               	subwf	___lomod@dividend^0,w,c
  3129  001D5E  500E               	movf	(___lomod@divisor+1)^0,w,c
  3130  001D60  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  3131  001D62  500F               	movf	(___lomod@divisor+2)^0,w,c
  3132  001D64  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  3133  001D66  5010               	movf	(___lomod@divisor+3)^0,w,c
  3134  001D68  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  3135  001D6A  5011               	movf	(___lomod@divisor+4)^0,w,c
  3136  001D6C  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  3137  001D6E  5012               	movf	(___lomod@divisor+5)^0,w,c
  3138  001D70  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  3139  001D72  5013               	movf	(___lomod@divisor+6)^0,w,c
  3140  001D74  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  3141  001D76  5014               	movf	(___lomod@divisor+7)^0,w,c
  3142  001D78  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  3143  001D7A  A0D8               	btfss	status,0,c
  3144  001D7C  EFC2  F00E         	goto	u2351
  3145  001D80  EFC4  F00E         	goto	u2350
  3146  001D84                     u2351:
  3147  001D84  EFD4  F00E         	goto	l3546
  3148  001D88                     u2350:
  3149  001D88  500D               	movf	___lomod@divisor^0,w,c
  3150  001D8A  5E05               	subwf	___lomod@dividend^0,f,c
  3151  001D8C  500E               	movf	(___lomod@divisor+1)^0,w,c
  3152  001D8E  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  3153  001D90  500F               	movf	(___lomod@divisor+2)^0,w,c
  3154  001D92  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  3155  001D94  5010               	movf	(___lomod@divisor+3)^0,w,c
  3156  001D96  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  3157  001D98  5011               	movf	(___lomod@divisor+4)^0,w,c
  3158  001D9A  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  3159  001D9C  5012               	movf	(___lomod@divisor+5)^0,w,c
  3160  001D9E  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  3161  001DA0  5013               	movf	(___lomod@divisor+6)^0,w,c
  3162  001DA2  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  3163  001DA4  5014               	movf	(___lomod@divisor+7)^0,w,c
  3164  001DA6  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  3165  001DA8                     l3546:
  3166  001DA8  90D8               	bcf	status,0,c
  3167  001DAA  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  3168  001DAC  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  3169  001DAE  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  3170  001DB0  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  3171  001DB2  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  3172  001DB4  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  3173  001DB6  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  3174  001DB8  320D               	rrcf	___lomod@divisor^0,f,c
  3175  001DBA  2E15               	decfsz	___lomod@counter^0,f,c
  3176  001DBC  EFAD  F00E         	goto	l3542
  3177  001DC0                     l776:
  3178  001DC0  C005  F005         	movff	___lomod@dividend,?___lomod
  3179  001DC4  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  3180  001DC8  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  3181  001DCC  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  3182  001DD0  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  3183  001DD4  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  3184  001DD8  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  3185  001DDC  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  3186  001DE0  0012               	return		;funcret
  3187  001DE2                     __end_of___lomod:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function ___lodiv *****************
  3191 ;; Defined at:
  3192 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  dividend        8    4[COMRAM] unsigned long long 
  3195 ;;  divisor         8   12[COMRAM] unsigned long long 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  quotient        8   20[COMRAM] unsigned long long 
  3198 ;;  counter         1   28[COMRAM] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  8    4[COMRAM] unsigned long long 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:       25 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_utoa
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text13
  3223  001B3A                     __ptext13:
  3224                           	callstack 0
  3225  001B3A                     ___lodiv:
  3226                           	callstack 25
  3227  001B3A  EE20  F015         	lfsr	2,___lodiv@quotient
  3228  001B3E  0E07               	movlw	7
  3229  001B40                     u2291:
  3230  001B40  6ADE               	clrf	postinc2,c
  3231  001B42  06E8               	decf	wreg,f,c
  3232  001B44  E2FD               	bc	u2291
  3233  001B46  500D               	movf	___lodiv@divisor^0,w,c
  3234  001B48  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  3235  001B4A  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  3236  001B4C  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  3237  001B4E  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  3238  001B50  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  3239  001B52  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  3240  001B54  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  3241  001B56  B4D8               	btfsc	status,2,c
  3242  001B58  EFB0  F00D         	goto	u2301
  3243  001B5C  EFB2  F00D         	goto	u2300
  3244  001B60                     u2301:
  3245  001B60  EF04  F00E         	goto	l766
  3246  001B64                     u2300:
  3247  001B64  0E01               	movlw	1
  3248  001B66  6E1D               	movwf	___lodiv@counter^0,c
  3249  001B68  EFC0  F00D         	goto	l3520
  3250  001B6C                     l3518:
  3251  001B6C  90D8               	bcf	status,0,c
  3252  001B6E  360D               	rlcf	___lodiv@divisor^0,f,c
  3253  001B70  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  3254  001B72  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  3255  001B74  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  3256  001B76  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  3257  001B78  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  3258  001B7A  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  3259  001B7C  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  3260  001B7E  2A1D               	incf	___lodiv@counter^0,f,c
  3261  001B80                     l3520:
  3262  001B80  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  3263  001B82  EFC5  F00D         	goto	u2311
  3264  001B86  EFC7  F00D         	goto	u2310
  3265  001B8A                     u2311:
  3266  001B8A  EFB6  F00D         	goto	l3518
  3267  001B8E                     u2310:
  3268  001B8E                     l3522:
  3269  001B8E  90D8               	bcf	status,0,c
  3270  001B90  3615               	rlcf	___lodiv@quotient^0,f,c
  3271  001B92  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  3272  001B94  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  3273  001B96  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  3274  001B98  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  3275  001B9A  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  3276  001B9C  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  3277  001B9E  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  3278  001BA0  500D               	movf	___lodiv@divisor^0,w,c
  3279  001BA2  5C05               	subwf	___lodiv@dividend^0,w,c
  3280  001BA4  500E               	movf	(___lodiv@divisor+1)^0,w,c
  3281  001BA6  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  3282  001BA8  500F               	movf	(___lodiv@divisor+2)^0,w,c
  3283  001BAA  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  3284  001BAC  5010               	movf	(___lodiv@divisor+3)^0,w,c
  3285  001BAE  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  3286  001BB0  5011               	movf	(___lodiv@divisor+4)^0,w,c
  3287  001BB2  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  3288  001BB4  5012               	movf	(___lodiv@divisor+5)^0,w,c
  3289  001BB6  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  3290  001BB8  5013               	movf	(___lodiv@divisor+6)^0,w,c
  3291  001BBA  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  3292  001BBC  5014               	movf	(___lodiv@divisor+7)^0,w,c
  3293  001BBE  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  3294  001BC0  A0D8               	btfss	status,0,c
  3295  001BC2  EFE5  F00D         	goto	u2321
  3296  001BC6  EFE7  F00D         	goto	u2320
  3297  001BCA                     u2321:
  3298  001BCA  EFF8  F00D         	goto	l3530
  3299  001BCE                     u2320:
  3300  001BCE  500D               	movf	___lodiv@divisor^0,w,c
  3301  001BD0  5E05               	subwf	___lodiv@dividend^0,f,c
  3302  001BD2  500E               	movf	(___lodiv@divisor+1)^0,w,c
  3303  001BD4  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  3304  001BD6  500F               	movf	(___lodiv@divisor+2)^0,w,c
  3305  001BD8  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  3306  001BDA  5010               	movf	(___lodiv@divisor+3)^0,w,c
  3307  001BDC  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  3308  001BDE  5011               	movf	(___lodiv@divisor+4)^0,w,c
  3309  001BE0  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  3310  001BE2  5012               	movf	(___lodiv@divisor+5)^0,w,c
  3311  001BE4  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  3312  001BE6  5013               	movf	(___lodiv@divisor+6)^0,w,c
  3313  001BE8  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  3314  001BEA  5014               	movf	(___lodiv@divisor+7)^0,w,c
  3315  001BEC  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  3316  001BEE  8015               	bsf	___lodiv@quotient^0,0,c
  3317  001BF0                     l3530:
  3318  001BF0  90D8               	bcf	status,0,c
  3319  001BF2  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  3320  001BF4  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  3321  001BF6  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  3322  001BF8  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  3323  001BFA  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  3324  001BFC  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  3325  001BFE  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  3326  001C00  320D               	rrcf	___lodiv@divisor^0,f,c
  3327  001C02  2E1D               	decfsz	___lodiv@counter^0,f,c
  3328  001C04  EFC7  F00D         	goto	l3522
  3329  001C08                     l766:
  3330  001C08  C015  F005         	movff	___lodiv@quotient,?___lodiv
  3331  001C0C  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  3332  001C10  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  3333  001C14  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  3334  001C18  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  3335  001C1C  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  3336  001C20  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  3337  001C24  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  3338  001C28  0012               	return		;funcret
  3339  001C2A                     __end_of___lodiv:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _atoi *****************
  3343 ;; Defined at:
  3344 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3347 ;;		 -> STR_1(20), 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  n               2   24[COMRAM] int 
  3350 ;;  neg             2   17[COMRAM] int 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  2   11[COMRAM] int 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:       15 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    2
  3367 ;; This function calls:
  3368 ;;		___wmul
  3369 ;;		_isdigit
  3370 ;;		_isspace
  3371 ;; This function is called by:
  3372 ;;		_vfpfcnvrt
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text14
  3377  0019AA                     __ptext14:
  3378                           	callstack 0
  3379  0019AA                     _atoi:
  3380                           	callstack 25
  3381  0019AA  0E00               	movlw	0
  3382  0019AC  6E1A               	movwf	(atoi@n+1)^0,c
  3383  0019AE  0E00               	movlw	0
  3384  0019B0  6E19               	movwf	atoi@n^0,c
  3385  0019B2  0E00               	movlw	0
  3386  0019B4  6E13               	movwf	(atoi@neg+1)^0,c
  3387  0019B6  0E00               	movlw	0
  3388  0019B8  6E12               	movwf	atoi@neg^0,c
  3389  0019BA  EFE1  F00C         	goto	l3628
  3390  0019BE                     l3626:
  3391  0019BE  4A0C               	infsnz	atoi@s^0,f,c
  3392  0019C0  2A0D               	incf	(atoi@s+1)^0,f,c
  3393  0019C2                     l3628:
  3394  0019C2  0E01               	movlw	1
  3395  0019C4  6E18               	movwf	_atoi$1272^0,c
  3396  0019C6  C00C  FFF6         	movff	atoi@s,tblptrl
  3397  0019CA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3398  0019CE                     	if	0	;tblptru may be non-zero
  3399  0019CE                     	endif
  3400  0019CE                     	if	0	;tblptru may be non-zero
  3401  0019CE                     	endif
  3402  0019CE  0008               	tblrd		*
  3403  0019D0  50F5               	movf	tablat,w,c
  3404  0019D2  0A20               	xorlw	32
  3405  0019D4  B4D8               	btfsc	status,2,c
  3406  0019D6  EFEF  F00C         	goto	u2511
  3407  0019DA  EFF1  F00C         	goto	u2510
  3408  0019DE                     u2511:
  3409  0019DE  EF0E  F00D         	goto	l3636
  3410  0019E2                     u2510:
  3411  0019E2  0EF7               	movlw	247
  3412  0019E4  6E0E               	movwf	??_atoi^0,c
  3413  0019E6  0EFF               	movlw	255
  3414  0019E8  6E0F               	movwf	(??_atoi+1)^0,c
  3415  0019EA  C00C  FFF6         	movff	atoi@s,tblptrl
  3416  0019EE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3417  0019F2                     	if	0	;tblptru may be non-zero
  3418  0019F2                     	endif
  3419  0019F2                     	if	0	;tblptru may be non-zero
  3420  0019F2                     	endif
  3421  0019F2  0008               	tblrd		*
  3422  0019F4  50F5               	movf	tablat,w,c
  3423  0019F6  6E10               	movwf	(??_atoi+2)^0,c
  3424  0019F8  6A11               	clrf	(??_atoi+3)^0,c
  3425  0019FA  500E               	movf	??_atoi^0,w,c
  3426  0019FC  2610               	addwf	(??_atoi+2)^0,f,c
  3427  0019FE  500F               	movf	(??_atoi+1)^0,w,c
  3428  001A00  2211               	addwfc	(??_atoi+3)^0,f,c
  3429  001A02  5011               	movf	(??_atoi+3)^0,w,c
  3430  001A04  E109               	bnz	u2520
  3431  001A06  0E05               	movlw	5
  3432  001A08  5C10               	subwf	(??_atoi+2)^0,w,c
  3433  001A0A  A0D8               	btfss	status,0,c
  3434  001A0C  EF0A  F00D         	goto	u2521
  3435  001A10  EF0C  F00D         	goto	u2520
  3436  001A14                     u2521:
  3437  001A14  EF0E  F00D         	goto	l3636
  3438  001A18                     u2520:
  3439  001A18  0E00               	movlw	0
  3440  001A1A  6E18               	movwf	_atoi$1272^0,c
  3441  001A1C                     l3636:
  3442  001A1C  C018  F014         	movff	_atoi$1272,_atoi$1271
  3443  001A20  6A15               	clrf	(_atoi$1271+1)^0,c
  3444  001A22  5014               	movf	_atoi$1271^0,w,c
  3445  001A24  1015               	iorwf	(_atoi$1271+1)^0,w,c
  3446  001A26  A4D8               	btfss	status,2,c
  3447  001A28  EF18  F00D         	goto	u2531
  3448  001A2C  EF1A  F00D         	goto	u2530
  3449  001A30                     u2531:
  3450  001A30  EFDF  F00C         	goto	l3626
  3451  001A34                     u2530:
  3452  001A34  EF24  F00D         	goto	l3646
  3453  001A38                     l3642:
  3454  001A38  0E00               	movlw	0
  3455  001A3A  6E13               	movwf	(atoi@neg+1)^0,c
  3456  001A3C  0E01               	movlw	1
  3457  001A3E  6E12               	movwf	atoi@neg^0,c
  3458  001A40                     l3644:
  3459  001A40  4A0C               	infsnz	atoi@s^0,f,c
  3460  001A42  2A0D               	incf	(atoi@s+1)^0,f,c
  3461  001A44  EF59  F00D         	goto	l3652
  3462  001A48                     l3646:
  3463  001A48  C00C  FFF6         	movff	atoi@s,tblptrl
  3464  001A4C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3465  001A50                     	if	0	;tblptru may be non-zero
  3466  001A50                     	endif
  3467  001A50                     	if	0	;tblptru may be non-zero
  3468  001A50                     	endif
  3469  001A50  0008               	tblrd		*
  3470  001A52  50F5               	movf	tablat,w,c
  3471  001A54  6E0E               	movwf	??_atoi^0,c
  3472  001A56  6A0F               	clrf	(??_atoi+1)^0,c
  3473                           
  3474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3475                           ; Switch size 1, requested type "simple"
  3476                           ; Number of cases is 1, Range of values is 0 to 0
  3477                           ; switch strategies available:
  3478                           ; Name         Instructions Cycles
  3479                           ; simple_byte            4     3 (average)
  3480                           ;	Chosen strategy is simple_byte
  3481  001A58  500F               	movf	(??_atoi+1)^0,w,c
  3482  001A5A  0A00               	xorlw	0	; case 0
  3483  001A5C  B4D8               	btfsc	status,2,c
  3484  001A5E  EF33  F00D         	goto	l4010
  3485  001A62  EF59  F00D         	goto	l3652
  3486  001A66                     l4010:
  3487                           
  3488                           ; Switch size 1, requested type "simple"
  3489                           ; Number of cases is 2, Range of values is 43 to 45
  3490                           ; switch strategies available:
  3491                           ; Name         Instructions Cycles
  3492                           ; simple_byte            7     4 (average)
  3493                           ;	Chosen strategy is simple_byte
  3494  001A66  500E               	movf	??_atoi^0,w,c
  3495  001A68  0A2B               	xorlw	43	; case 43
  3496  001A6A  B4D8               	btfsc	status,2,c
  3497  001A6C  EF20  F00D         	goto	l3644
  3498  001A70  0A06               	xorlw	6	; case 45
  3499  001A72  B4D8               	btfsc	status,2,c
  3500  001A74  EF1C  F00D         	goto	l3642
  3501  001A78  EF59  F00D         	goto	l3652
  3502  001A7C                     l3648:
  3503  001A7C  C019  F005         	movff	atoi@n,___wmul@multiplier
  3504  001A80  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  3505  001A84  0E00               	movlw	0
  3506  001A86  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3507  001A88  0E0A               	movlw	10
  3508  001A8A  6E07               	movwf	___wmul@multiplicand^0,c
  3509  001A8C  EC9D  F013         	call	___wmul	;wreg free
  3510  001A90  C00C  FFF6         	movff	atoi@s,tblptrl
  3511  001A94  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3512  001A98                     	if	0	;tblptru may be non-zero
  3513  001A98                     	endif
  3514  001A98                     	if	0	;tblptru may be non-zero
  3515  001A98                     	endif
  3516  001A98  0008               	tblrd		*
  3517  001A9A  50F5               	movf	tablat,w,c
  3518  001A9C  5E05               	subwf	?___wmul^0,f,c
  3519  001A9E  0E00               	movlw	0
  3520  001AA0  5A06               	subwfb	(?___wmul+1)^0,f,c
  3521  001AA2  0E30               	movlw	48
  3522  001AA4  2405               	addwf	?___wmul^0,w,c
  3523  001AA6  6E19               	movwf	atoi@n^0,c
  3524  001AA8  0E00               	movlw	0
  3525  001AAA  2006               	addwfc	(?___wmul+1)^0,w,c
  3526  001AAC  6E1A               	movwf	(atoi@n+1)^0,c
  3527  001AAE  EF20  F00D         	goto	l3644
  3528  001AB2                     l3652:
  3529  001AB2  0ED0               	movlw	208
  3530  001AB4  6E0E               	movwf	??_atoi^0,c
  3531  001AB6  0EFF               	movlw	255
  3532  001AB8  6E0F               	movwf	(??_atoi+1)^0,c
  3533  001ABA  C00C  FFF6         	movff	atoi@s,tblptrl
  3534  001ABE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3535  001AC2                     	if	0	;tblptru may be non-zero
  3536  001AC2                     	endif
  3537  001AC2                     	if	0	;tblptru may be non-zero
  3538  001AC2                     	endif
  3539  001AC2  0008               	tblrd		*
  3540  001AC4  50F5               	movf	tablat,w,c
  3541  001AC6  6E10               	movwf	(??_atoi+2)^0,c
  3542  001AC8  6A11               	clrf	(??_atoi+3)^0,c
  3543  001ACA  500E               	movf	??_atoi^0,w,c
  3544  001ACC  2610               	addwf	(??_atoi+2)^0,f,c
  3545  001ACE  500F               	movf	(??_atoi+1)^0,w,c
  3546  001AD0  2211               	addwfc	(??_atoi+3)^0,f,c
  3547  001AD2  5011               	movf	(??_atoi+3)^0,w,c
  3548  001AD4  E10A               	bnz	u2540
  3549  001AD6  0E0A               	movlw	10
  3550  001AD8  5C10               	subwf	(??_atoi+2)^0,w,c
  3551  001ADA  A0D8               	btfss	status,0,c
  3552  001ADC  EF72  F00D         	goto	u2541
  3553  001AE0  EF75  F00D         	goto	u2540
  3554  001AE4                     u2541:
  3555  001AE4  0E01               	movlw	1
  3556  001AE6  EF76  F00D         	goto	u2550
  3557  001AEA                     u2540:
  3558  001AEA  0E00               	movlw	0
  3559  001AEC                     u2550:
  3560  001AEC  6E16               	movwf	_atoi$1273^0,c
  3561  001AEE  6A17               	clrf	(_atoi$1273+1)^0,c
  3562  001AF0  5016               	movf	_atoi$1273^0,w,c
  3563  001AF2  1017               	iorwf	(_atoi$1273+1)^0,w,c
  3564  001AF4  A4D8               	btfss	status,2,c
  3565  001AF6  EF7F  F00D         	goto	u2561
  3566  001AFA  EF81  F00D         	goto	u2560
  3567  001AFE                     u2561:
  3568  001AFE  EF3E  F00D         	goto	l3648
  3569  001B02                     u2560:
  3570  001B02  5012               	movf	atoi@neg^0,w,c
  3571  001B04  1013               	iorwf	(atoi@neg+1)^0,w,c
  3572  001B06  A4D8               	btfss	status,2,c
  3573  001B08  EF88  F00D         	goto	u2571
  3574  001B0C  EF8A  F00D         	goto	u2570
  3575  001B10                     u2571:
  3576  001B10  EF98  F00D         	goto	l1117
  3577  001B14                     u2570:
  3578  001B14  C019  F00E         	movff	atoi@n,??_atoi
  3579  001B18  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  3580  001B1C  1E0E               	comf	??_atoi^0,f,c
  3581  001B1E  1E0F               	comf	(??_atoi+1)^0,f,c
  3582  001B20  4A0E               	infsnz	??_atoi^0,f,c
  3583  001B22  2A0F               	incf	(??_atoi+1)^0,f,c
  3584  001B24  C00E  F00C         	movff	??_atoi,?_atoi
  3585  001B28  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  3586  001B2C  EF9C  F00D         	goto	l1120
  3587  001B30                     l1117:
  3588  001B30  C019  F00C         	movff	atoi@n,?_atoi
  3589  001B34  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  3590  001B38                     l1120:
  3591  001B38  0012               	return		;funcret
  3592  001B3A                     __end_of_atoi:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _isspace *****************
  3596 ;; Defined at:
  3597 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  c               2    4[COMRAM] int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    4[COMRAM] int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:        7 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_atoi
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text15
  3626  0024DE                     __ptext15:
  3627                           	callstack 0
  3628  0024DE                     _isspace:
  3629                           	callstack 25
  3630  0024DE  0E01               	movlw	1
  3631  0024E0  6E0B               	movwf	_isspace$1289^0,c
  3632  0024E2  0E20               	movlw	32
  3633  0024E4  1805               	xorwf	isspace@c^0,w,c
  3634  0024E6  1006               	iorwf	(isspace@c+1)^0,w,c
  3635  0024E8  B4D8               	btfsc	status,2,c
  3636  0024EA  EF79  F012         	goto	u2421
  3637  0024EE  EF7B  F012         	goto	u2420
  3638  0024F2                     u2421:
  3639  0024F2  EF94  F012         	goto	l3584
  3640  0024F6                     u2420:
  3641  0024F6  0EF7               	movlw	247
  3642  0024F8  6E07               	movwf	??_isspace^0,c
  3643  0024FA  0EFF               	movlw	255
  3644  0024FC  6E08               	movwf	(??_isspace+1)^0,c
  3645  0024FE  C005  F009         	movff	isspace@c,??_isspace+2
  3646  002502  C006  F00A         	movff	isspace@c+1,??_isspace+3
  3647  002506  5007               	movf	??_isspace^0,w,c
  3648  002508  2609               	addwf	(??_isspace+2)^0,f,c
  3649  00250A  5008               	movf	(??_isspace+1)^0,w,c
  3650  00250C  220A               	addwfc	(??_isspace+3)^0,f,c
  3651  00250E  500A               	movf	(??_isspace+3)^0,w,c
  3652  002510  E109               	bnz	u2430
  3653  002512  0E05               	movlw	5
  3654  002514  5C09               	subwf	(??_isspace+2)^0,w,c
  3655  002516  A0D8               	btfss	status,0,c
  3656  002518  EF90  F012         	goto	u2431
  3657  00251C  EF92  F012         	goto	u2430
  3658  002520                     u2431:
  3659  002520  EF94  F012         	goto	l3584
  3660  002524                     u2430:
  3661  002524  0E00               	movlw	0
  3662  002526  6E0B               	movwf	_isspace$1289^0,c
  3663  002528                     l3584:
  3664  002528  C00B  F005         	movff	_isspace$1289,?_isspace
  3665  00252C  6A06               	clrf	(?_isspace+1)^0,c
  3666  00252E  0012               	return		;funcret
  3667  002530                     __end_of_isspace:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _isdigit *****************
  3671 ;; Defined at:
  3672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  c               2    4[COMRAM] int 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  2    4[COMRAM] int 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;Total ram usage:        6 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    1
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_vfpfcnvrt
  3697 ;;		_atoi
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text16
  3702  00264E                     __ptext16:
  3703                           	callstack 0
  3704  00264E                     _isdigit:
  3705                           	callstack 26
  3706  00264E  0ED0               	movlw	208
  3707  002650  6E07               	movwf	??_isdigit^0,c
  3708  002652  0EFF               	movlw	255
  3709  002654  6E08               	movwf	(??_isdigit+1)^0,c
  3710  002656  C005  F009         	movff	isdigit@c,??_isdigit+2
  3711  00265A  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  3712  00265E  5007               	movf	??_isdigit^0,w,c
  3713  002660  2609               	addwf	(??_isdigit+2)^0,f,c
  3714  002662  5008               	movf	(??_isdigit+1)^0,w,c
  3715  002664  220A               	addwfc	(??_isdigit+3)^0,f,c
  3716  002666  500A               	movf	(??_isdigit+3)^0,w,c
  3717  002668  E10A               	bnz	u2400
  3718  00266A  0E0A               	movlw	10
  3719  00266C  5C09               	subwf	(??_isdigit+2)^0,w,c
  3720  00266E  A0D8               	btfss	status,0,c
  3721  002670  EF3C  F013         	goto	u2401
  3722  002674  EF3F  F013         	goto	u2400
  3723  002678                     u2401:
  3724  002678  0E01               	movlw	1
  3725  00267A  EF40  F013         	goto	u2410
  3726  00267E                     u2400:
  3727  00267E  0E00               	movlw	0
  3728  002680                     u2410:
  3729  002680  6E05               	movwf	?_isdigit^0,c
  3730  002682  6A06               	clrf	(?_isdigit+1)^0,c
  3731  002684  0012               	return		;funcret
  3732  002686                     __end_of_isdigit:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function ___wmul *****************
  3736 ;; Defined at:
  3737 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  multiplier      2    4[COMRAM] unsigned int 
  3740 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  product         2    8[COMRAM] unsigned int 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  2    4[COMRAM] unsigned int 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0, prodl, prodh
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;Total ram usage:        6 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_atoi
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text17
  3767  00273A                     __ptext17:
  3768                           	callstack 0
  3769  00273A                     ___wmul:
  3770                           	callstack 25
  3771  00273A  5005               	movf	___wmul@multiplier^0,w,c
  3772  00273C  0207               	mulwf	___wmul@multiplicand^0,c
  3773  00273E  CFF3 F009          	movff	prodl,___wmul@product
  3774  002742  CFF4 F00A          	movff	prodh,___wmul@product+1
  3775  002746  5005               	movf	___wmul@multiplier^0,w,c
  3776  002748  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3777  00274A  50F3               	movf	243,w,c
  3778  00274C  260A               	addwf	(___wmul@product+1)^0,f,c
  3779  00274E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3780  002750  0207               	mulwf	___wmul@multiplicand^0,c
  3781  002752  50F3               	movf	243,w,c
  3782  002754  260A               	addwf	(___wmul@product+1)^0,f,c
  3783  002756  C009  F005         	movff	___wmul@product,?___wmul
  3784  00275A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3785  00275E  0012               	return		;funcret
  3786  002760                     __end_of___wmul:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _hex_to_bit_string *****************
  3790 ;; Defined at:
  3791 ;;		line 346 in file "ece376_hw9_ccp_capt.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  hex_val         1    wreg     unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  hex_val         1    8[COMRAM] unsigned char 
  3796 ;;  i               1   11[COMRAM] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    4[COMRAM] PTR unsigned char 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        8 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text18
  3821  00233C                     __ptext18:
  3822                           	callstack 0
  3823  00233C                     _hex_to_bit_string:
  3824                           	callstack 29
  3825                           
  3826                           ;incstack = 0
  3827                           ;hex_to_bit_string@hex_val stored from wreg
  3828  00233C  6E09               	movwf	hex_to_bit_string@hex_val^0,c
  3829  00233E                     
  3830                           ;ece376_hw9_ccp_capt.c: 348:     static char bit_string[9];;ece376_hw9_ccp_capt.c: 350: 
      +                              for(uint8_t i=0; i<8; i++){
  3831  00233E  0E00               	movlw	0
  3832  002340  6E0C               	movwf	hex_to_bit_string@i^0,c
  3833  002342                     l2850:
  3834                           
  3835                           ;ece376_hw9_ccp_capt.c: 351:         bit_string[i] = (hex_val & (0x1 << (7-i))) ? '1' : 
      +                          '0';
  3836  002342  500C               	movf	hex_to_bit_string@i^0,w,c
  3837  002344  0807               	sublw	7
  3838  002346  6E07               	movwf	??_hex_to_bit_string^0,c
  3839  002348  0E01               	movlw	1
  3840  00234A  6E08               	movwf	(??_hex_to_bit_string+1)^0,c
  3841  00234C  2A07               	incf	??_hex_to_bit_string^0,f,c
  3842  00234E  EFAB  F011         	goto	u1694
  3843  002352                     u1695:
  3844  002352  90D8               	bcf	status,0,c
  3845  002354  3608               	rlcf	(??_hex_to_bit_string+1)^0,f,c
  3846  002356                     u1694:
  3847  002356  2E07               	decfsz	??_hex_to_bit_string^0,f,c
  3848  002358  EFA9  F011         	goto	u1695
  3849  00235C  5008               	movf	(??_hex_to_bit_string+1)^0,w,c
  3850  00235E  1409               	andwf	hex_to_bit_string@hex_val^0,w,c
  3851  002360  0900               	iorlw	0
  3852  002362  A4D8               	btfss	status,2,c
  3853  002364  EFB6  F011         	goto	u1701
  3854  002368  EFB8  F011         	goto	u1700
  3855  00236C                     u1701:
  3856  00236C  EFBE  F011         	goto	l2854
  3857  002370                     u1700:
  3858  002370  0E00               	movlw	0
  3859  002372  6E0B               	movwf	(_hex_to_bit_string$724+1)^0,c
  3860  002374  0E30               	movlw	48
  3861  002376  6E0A               	movwf	_hex_to_bit_string$724^0,c
  3862  002378  EFC2  F011         	goto	l2856
  3863  00237C                     l2854:
  3864  00237C  0E00               	movlw	0
  3865  00237E  6E0B               	movwf	(_hex_to_bit_string$724+1)^0,c
  3866  002380  0E31               	movlw	49
  3867  002382  6E0A               	movwf	_hex_to_bit_string$724^0,c
  3868  002384                     l2856:
  3869  002384  0EAD               	movlw	low hex_to_bit_string@bit_string
  3870  002386  240C               	addwf	hex_to_bit_string@i^0,w,c
  3871  002388  6ED9               	movwf	fsr2l,c
  3872  00238A  6ADA               	clrf	fsr2h,c
  3873  00238C  0E00               	movlw	high hex_to_bit_string@bit_string
  3874  00238E  22DA               	addwfc	fsr2h,f,c
  3875  002390  C00A  FFDF         	movff	_hex_to_bit_string$724,indf2
  3876  002394                     
  3877                           ;ece376_hw9_ccp_capt.c: 352:     }
  3878  002394  2A0C               	incf	hex_to_bit_string@i^0,f,c
  3879  002396  0E07               	movlw	7
  3880  002398  640C               	cpfsgt	hex_to_bit_string@i^0,c
  3881  00239A  EFD1  F011         	goto	u1711
  3882  00239E  EFD3  F011         	goto	u1710
  3883  0023A2                     u1711:
  3884  0023A2  EFA1  F011         	goto	l2850
  3885  0023A6                     u1710:
  3886  0023A6                     
  3887                           ;ece376_hw9_ccp_capt.c: 353:     bit_string[8] = '\0';
  3888  0023A6  0E00               	movlw	0
  3889  0023A8  0100               	movlb	0	; () banked
  3890  0023AA  6FB5               	movwf	(hex_to_bit_string@bit_string+8)& (0+255),b
  3891  0023AC                     
  3892                           ; BSR set to: 0
  3893                           ;ece376_hw9_ccp_capt.c: 355:     return bit_string;
  3894  0023AC  0EAD               	movlw	low hex_to_bit_string@bit_string
  3895  0023AE  6E05               	movwf	?_hex_to_bit_string^0,c
  3896  0023B0  0E00               	movlw	high hex_to_bit_string@bit_string
  3897  0023B2  6E06               	movwf	(?_hex_to_bit_string+1)^0,c
  3898  0023B4                     
  3899                           ; BSR set to: 0
  3900  0023B4  0012               	return		;funcret
  3901  0023B6                     __end_of_hex_to_bit_string:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function ___lwdiv *****************
  3905 ;; Defined at:
  3906 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  dividend        2   13[COMRAM] unsigned int 
  3909 ;;  divisor         2   15[COMRAM] unsigned int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  quotient        2   17[COMRAM] unsigned int 
  3912 ;;  counter         1   19[COMRAM] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2   13[COMRAM] unsigned int 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;Total ram usage:        7 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text19
  3937  0023B6                     __ptext19:
  3938                           	callstack 0
  3939  0023B6                     ___lwdiv:
  3940                           	callstack 29
  3941  0023B6  0E00               	movlw	0
  3942  0023B8  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  3943  0023BA  0E00               	movlw	0
  3944  0023BC  6E12               	movwf	___lwdiv@quotient^0,c
  3945  0023BE  5010               	movf	___lwdiv@divisor^0,w,c
  3946  0023C0  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3947  0023C2  B4D8               	btfsc	status,2,c
  3948  0023C4  EFE6  F011         	goto	u1781
  3949  0023C8  EFE8  F011         	goto	u1780
  3950  0023CC                     u1781:
  3951  0023CC  EF10  F012         	goto	l819
  3952  0023D0                     u1780:
  3953  0023D0  0E01               	movlw	1
  3954  0023D2  6E14               	movwf	___lwdiv@counter^0,c
  3955  0023D4  EFF0  F011         	goto	l2930
  3956  0023D8                     l2928:
  3957  0023D8  90D8               	bcf	status,0,c
  3958  0023DA  3610               	rlcf	___lwdiv@divisor^0,f,c
  3959  0023DC  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3960  0023DE  2A14               	incf	___lwdiv@counter^0,f,c
  3961  0023E0                     l2930:
  3962  0023E0  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  3963  0023E2  EFF5  F011         	goto	u1791
  3964  0023E6  EFF7  F011         	goto	u1790
  3965  0023EA                     u1791:
  3966  0023EA  EFEC  F011         	goto	l2928
  3967  0023EE                     u1790:
  3968  0023EE                     l2932:
  3969  0023EE  90D8               	bcf	status,0,c
  3970  0023F0  3612               	rlcf	___lwdiv@quotient^0,f,c
  3971  0023F2  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3972  0023F4  5010               	movf	___lwdiv@divisor^0,w,c
  3973  0023F6  5C0E               	subwf	___lwdiv@dividend^0,w,c
  3974  0023F8  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  3975  0023FA  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3976  0023FC  A0D8               	btfss	status,0,c
  3977  0023FE  EF03  F012         	goto	u1801
  3978  002402  EF05  F012         	goto	u1800
  3979  002406                     u1801:
  3980  002406  EF0A  F012         	goto	l2940
  3981  00240A                     u1800:
  3982  00240A  5010               	movf	___lwdiv@divisor^0,w,c
  3983  00240C  5E0E               	subwf	___lwdiv@dividend^0,f,c
  3984  00240E  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  3985  002410  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3986  002412  8012               	bsf	___lwdiv@quotient^0,0,c
  3987  002414                     l2940:
  3988  002414  90D8               	bcf	status,0,c
  3989  002416  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3990  002418  3210               	rrcf	___lwdiv@divisor^0,f,c
  3991  00241A  2E14               	decfsz	___lwdiv@counter^0,f,c
  3992  00241C  EFF7  F011         	goto	l2932
  3993  002420                     l819:
  3994  002420  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  3995  002424  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3996  002428  0012               	return		;funcret
  3997  00242A                     __end_of___lwdiv:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function ___llmod *****************
  4001 ;; Defined at:
  4002 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\llmod.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  dividend        4    4[COMRAM] unsigned long 
  4005 ;;  divisor         4    8[COMRAM] unsigned long 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  counter         1   12[COMRAM] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  4    4[COMRAM] unsigned long 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:        9 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;;		_LCD_write_uint32_number
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text20
  4033  002230                     __ptext20:
  4034                           	callstack 0
  4035  002230                     ___llmod:
  4036                           	callstack 29
  4037  002230  5009               	movf	___llmod@divisor^0,w,c
  4038  002232  100A               	iorwf	(___llmod@divisor+1)^0,w,c
  4039  002234  100B               	iorwf	(___llmod@divisor+2)^0,w,c
  4040  002236  100C               	iorwf	(___llmod@divisor+3)^0,w,c
  4041  002238  B4D8               	btfsc	status,2,c
  4042  00223A  EF21  F011         	goto	u1751
  4043  00223E  EF23  F011         	goto	u1750
  4044  002242                     u1751:
  4045  002242  EF53  F011         	goto	l748
  4046  002246                     u1750:
  4047  002246  0E01               	movlw	1
  4048  002248  6E0D               	movwf	___llmod@counter^0,c
  4049  00224A  EF2D  F011         	goto	l2912
  4050  00224E                     l2910:
  4051  00224E  90D8               	bcf	status,0,c
  4052  002250  3609               	rlcf	___llmod@divisor^0,f,c
  4053  002252  360A               	rlcf	(___llmod@divisor+1)^0,f,c
  4054  002254  360B               	rlcf	(___llmod@divisor+2)^0,f,c
  4055  002256  360C               	rlcf	(___llmod@divisor+3)^0,f,c
  4056  002258  2A0D               	incf	___llmod@counter^0,f,c
  4057  00225A                     l2912:
  4058  00225A  AE0C               	btfss	(___llmod@divisor+3)^0,7,c
  4059  00225C  EF32  F011         	goto	u1761
  4060  002260  EF34  F011         	goto	u1760
  4061  002264                     u1761:
  4062  002264  EF27  F011         	goto	l2910
  4063  002268                     u1760:
  4064  002268                     l2914:
  4065  002268  5009               	movf	___llmod@divisor^0,w,c
  4066  00226A  5C05               	subwf	___llmod@dividend^0,w,c
  4067  00226C  500A               	movf	(___llmod@divisor+1)^0,w,c
  4068  00226E  5806               	subwfb	(___llmod@dividend+1)^0,w,c
  4069  002270  500B               	movf	(___llmod@divisor+2)^0,w,c
  4070  002272  5807               	subwfb	(___llmod@dividend+2)^0,w,c
  4071  002274  500C               	movf	(___llmod@divisor+3)^0,w,c
  4072  002276  5808               	subwfb	(___llmod@dividend+3)^0,w,c
  4073  002278  A0D8               	btfss	status,0,c
  4074  00227A  EF41  F011         	goto	u1771
  4075  00227E  EF43  F011         	goto	u1770
  4076  002282                     u1771:
  4077  002282  EF4B  F011         	goto	l2918
  4078  002286                     u1770:
  4079  002286  5009               	movf	___llmod@divisor^0,w,c
  4080  002288  5E05               	subwf	___llmod@dividend^0,f,c
  4081  00228A  500A               	movf	(___llmod@divisor+1)^0,w,c
  4082  00228C  5A06               	subwfb	(___llmod@dividend+1)^0,f,c
  4083  00228E  500B               	movf	(___llmod@divisor+2)^0,w,c
  4084  002290  5A07               	subwfb	(___llmod@dividend+2)^0,f,c
  4085  002292  500C               	movf	(___llmod@divisor+3)^0,w,c
  4086  002294  5A08               	subwfb	(___llmod@dividend+3)^0,f,c
  4087  002296                     l2918:
  4088  002296  90D8               	bcf	status,0,c
  4089  002298  320C               	rrcf	(___llmod@divisor+3)^0,f,c
  4090  00229A  320B               	rrcf	(___llmod@divisor+2)^0,f,c
  4091  00229C  320A               	rrcf	(___llmod@divisor+1)^0,f,c
  4092  00229E  3209               	rrcf	___llmod@divisor^0,f,c
  4093  0022A0  2E0D               	decfsz	___llmod@counter^0,f,c
  4094  0022A2  EF34  F011         	goto	l2914
  4095  0022A6                     l748:
  4096  0022A6  C005  F005         	movff	___llmod@dividend,?___llmod
  4097  0022AA  C006  F006         	movff	___llmod@dividend+1,?___llmod+1
  4098  0022AE  C007  F007         	movff	___llmod@dividend+2,?___llmod+2
  4099  0022B2  C008  F008         	movff	___llmod@dividend+3,?___llmod+3
  4100  0022B6  0012               	return		;funcret
  4101  0022B8                     __end_of___llmod:
  4102                           	callstack 0
  4103                           
  4104 ;; *************** function ___lldiv *****************
  4105 ;; Defined at:
  4106 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  dividend        4   13[COMRAM] unsigned long 
  4109 ;;  divisor         4   17[COMRAM] unsigned long 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  quotient        4   21[COMRAM] unsigned long 
  4112 ;;  counter         1   25[COMRAM] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  4   13[COMRAM] unsigned long 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;Total ram usage:       13 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;;		_LCD_write_uint32_number
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text21
  4138  002100                     __ptext21:
  4139                           	callstack 0
  4140  002100                     ___lldiv:
  4141                           	callstack 29
  4142  002100  0E00               	movlw	0
  4143  002102  6E16               	movwf	___lldiv@quotient^0,c
  4144  002104  0E00               	movlw	0
  4145  002106  6E17               	movwf	(___lldiv@quotient+1)^0,c
  4146  002108  0E00               	movlw	0
  4147  00210A  6E18               	movwf	(___lldiv@quotient+2)^0,c
  4148  00210C  0E00               	movlw	0
  4149  00210E  6E19               	movwf	(___lldiv@quotient+3)^0,c
  4150  002110  5012               	movf	___lldiv@divisor^0,w,c
  4151  002112  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  4152  002114  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  4153  002116  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  4154  002118  B4D8               	btfsc	status,2,c
  4155  00211A  EF91  F010         	goto	u1721
  4156  00211E  EF93  F010         	goto	u1720
  4157  002122                     u1721:
  4158  002122  EFC9  F010         	goto	l355
  4159  002126                     u1720:
  4160  002126  0E01               	movlw	1
  4161  002128  6E1A               	movwf	___lldiv@counter^0,c
  4162  00212A  EF9D  F010         	goto	l2892
  4163  00212E                     l2890:
  4164  00212E  90D8               	bcf	status,0,c
  4165  002130  3612               	rlcf	___lldiv@divisor^0,f,c
  4166  002132  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  4167  002134  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  4168  002136  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  4169  002138  2A1A               	incf	___lldiv@counter^0,f,c
  4170  00213A                     l2892:
  4171  00213A  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  4172  00213C  EFA2  F010         	goto	u1731
  4173  002140  EFA4  F010         	goto	u1730
  4174  002144                     u1731:
  4175  002144  EF97  F010         	goto	l2890
  4176  002148                     u1730:
  4177  002148                     l2894:
  4178  002148  90D8               	bcf	status,0,c
  4179  00214A  3616               	rlcf	___lldiv@quotient^0,f,c
  4180  00214C  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  4181  00214E  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  4182  002150  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  4183  002152  5012               	movf	___lldiv@divisor^0,w,c
  4184  002154  5C0E               	subwf	___lldiv@dividend^0,w,c
  4185  002156  5013               	movf	(___lldiv@divisor+1)^0,w,c
  4186  002158  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  4187  00215A  5014               	movf	(___lldiv@divisor+2)^0,w,c
  4188  00215C  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  4189  00215E  5015               	movf	(___lldiv@divisor+3)^0,w,c
  4190  002160  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  4191  002162  A0D8               	btfss	status,0,c
  4192  002164  EFB6  F010         	goto	u1741
  4193  002168  EFB8  F010         	goto	u1740
  4194  00216C                     u1741:
  4195  00216C  EFC1  F010         	goto	l2902
  4196  002170                     u1740:
  4197  002170  5012               	movf	___lldiv@divisor^0,w,c
  4198  002172  5E0E               	subwf	___lldiv@dividend^0,f,c
  4199  002174  5013               	movf	(___lldiv@divisor+1)^0,w,c
  4200  002176  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  4201  002178  5014               	movf	(___lldiv@divisor+2)^0,w,c
  4202  00217A  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  4203  00217C  5015               	movf	(___lldiv@divisor+3)^0,w,c
  4204  00217E  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  4205  002180  8016               	bsf	___lldiv@quotient^0,0,c
  4206  002182                     l2902:
  4207  002182  90D8               	bcf	status,0,c
  4208  002184  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  4209  002186  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  4210  002188  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  4211  00218A  3212               	rrcf	___lldiv@divisor^0,f,c
  4212  00218C  2E1A               	decfsz	___lldiv@counter^0,f,c
  4213  00218E  EFA4  F010         	goto	l2894
  4214  002192                     l355:
  4215  002192  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  4216  002196  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  4217  00219A  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  4218  00219E  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  4219  0021A2  0012               	return		;funcret
  4220  0021A4                     __end_of___lldiv:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _Timer1_Init_Default *****************
  4224 ;; Defined at:
  4225 ;;		line 31 in file "src/timer.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    1
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text22
  4254  002790                     __ptext22:
  4255                           	callstack 0
  4256  002790                     _Timer1_Init_Default:
  4257                           	callstack 29
  4258  002790                     
  4259                           ;src/timer.c: 32:     T1CON = 0x80;
  4260  002790  0E80               	movlw	128
  4261  002792  6ECD               	movwf	205,c	;volatile
  4262  002794                     
  4263                           ;src/timer.c: 33:     (PIE1bits.TMR1IE = 1u);
  4264  002794  809D               	bsf	157,0,c	;volatile
  4265  002796  0012               	return		;funcret
  4266  002798                     __end_of_Timer1_Init_Default:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function _LCD_write_data_byte_4bit *****************
  4270 ;; Defined at:
  4271 ;;		line 126 in file "src/lcd_driver.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  data            1    wreg     unsigned char 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  data            1    7[COMRAM] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;Total ram usage:        2 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		_LCD_enable_toggle
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;;		_LCD_write_characters
  4297 ;;		_LCD_write_uint32_number
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text23
  4302  002530                     __ptext23:
  4303                           	callstack 0
  4304  002530                     _LCD_write_data_byte_4bit:
  4305                           	callstack 28
  4306                           
  4307                           ;incstack = 0
  4308                           ;LCD_write_data_byte_4bit@data stored from wreg
  4309  002530  6E08               	movwf	LCD_write_data_byte_4bit@data^0,c
  4310  002532                     
  4311                           ;src/lcd_driver.c: 128:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4312  002532  0EFC               	movlw	252
  4313  002534  1694               	andwf	148,f,c	;volatile
  4314  002536  9295               	bcf	149,1,c	;volatile
  4315  002538                     
  4316                           ;src/lcd_driver.c: 129:     (TRISD &= 0x0Fu);
  4317  002538  0E0F               	movlw	15
  4318  00253A  1695               	andwf	149,f,c	;volatile
  4319  00253C                     
  4320                           ;src/lcd_driver.c: 130:     (LATCbits.LATC0 = 1u);
  4321  00253C  808B               	bsf	139,0,c	;volatile
  4322  00253E                     
  4323                           ;src/lcd_driver.c: 131:     (LATCbits.LATC1 = 0u);
  4324  00253E  928B               	bcf	139,1,c	;volatile
  4325  002540                     
  4326                           ;src/lcd_driver.c: 134:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
  4327  002540  C008  F007         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  4328  002544  0EF0               	movlw	240
  4329  002546  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4330  002548  5083               	movf	131,w,c	;volatile
  4331  00254A  0B0F               	andlw	15
  4332  00254C  1007               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  4333  00254E  6E83               	movwf	131,c	;volatile
  4334  002550                     
  4335                           ;src/lcd_driver.c: 135:     LCD_enable_toggle();
  4336  002550  ECBB  F00F         	call	_LCD_enable_toggle	;wreg free
  4337  002554                     
  4338                           ;src/lcd_driver.c: 136:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
  4339  002554  C008  F007         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  4340  002558  3A07               	swapf	??_LCD_write_data_byte_4bit^0,f,c
  4341  00255A  0EF0               	movlw	240
  4342  00255C  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4343  00255E  0EF0               	movlw	240
  4344  002560  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4345  002562  5083               	movf	131,w,c	;volatile
  4346  002564  0B0F               	andlw	15
  4347  002566  1007               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  4348  002568  6E83               	movwf	131,c	;volatile
  4349  00256A                     
  4350                           ;src/lcd_driver.c: 137:     LCD_enable_toggle();
  4351  00256A  ECBB  F00F         	call	_LCD_enable_toggle	;wreg free
  4352  00256E                     
  4353                           ;src/lcd_driver.c: 139:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4354  00256E  0E82               	movlw	130
  4355  002570  6E07               	movwf	??_LCD_write_data_byte_4bit^0,c
  4356  002572  0EDE               	movlw	222
  4357  002574                     u2877:
  4358  002574  2EE8               	decfsz	wreg,f,c
  4359  002576  D7FE               	bra	u2877
  4360  002578  2E07               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
  4361  00257A  D7FC               	bra	u2877
  4362  00257C  0012               	return		;funcret
  4363  00257E                     __end_of_LCD_write_data_byte_4bit:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _LCD_set_cursor_position *****************
  4367 ;; Defined at:
  4368 ;;		line 500 in file "src/lcd_driver.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  line            1    wreg     unsigned char 
  4371 ;;  pos_on_line     1    8[COMRAM] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  line            1   10[COMRAM] unsigned char 
  4374 ;;  ddram_addr      1    9[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;Total ram usage:        3 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    3
  4391 ;; This function calls:
  4392 ;;		_LCD_write_instr_byte_4bit
  4393 ;;		_LCD_write_instr_byte_8bit
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text24
  4400  001EAC                     __ptext24:
  4401                           	callstack 0
  4402  001EAC                     _LCD_set_cursor_position:
  4403                           	callstack 27
  4404                           
  4405                           ;incstack = 0
  4406                           ;LCD_set_cursor_position@line stored from wreg
  4407  001EAC  6E0B               	movwf	LCD_set_cursor_position@line^0,c
  4408  001EAE                     
  4409                           ;src/lcd_driver.c: 502:     if(line > 2u || pos_on_line > 2u * 16u){
  4410  001EAE  0E03               	movlw	3
  4411  001EB0  600B               	cpfslt	LCD_set_cursor_position@line^0,c
  4412  001EB2  EF5D  F00F         	goto	u1601
  4413  001EB6  EF5F  F00F         	goto	u1600
  4414  001EBA                     u1601:
  4415  001EBA  EFBA  F00F         	goto	l125
  4416  001EBE                     u1600:
  4417  001EBE  0E20               	movlw	32
  4418  001EC0  6409               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  4419  001EC2  EF65  F00F         	goto	u1611
  4420  001EC6  EF67  F00F         	goto	u1610
  4421  001ECA                     u1611:
  4422  001ECA  EF69  F00F         	goto	l2812
  4423  001ECE                     u1610:
  4424  001ECE  EFBA  F00F         	goto	l125
  4425  001ED2                     l2812:
  4426                           
  4427                           ;src/lcd_driver.c: 511:         if(line == 1u && pos_on_line < 16u){
  4428  001ED2  040B               	decf	LCD_set_cursor_position@line^0,w,c
  4429  001ED4  A4D8               	btfss	status,2,c
  4430  001ED6  EF6F  F00F         	goto	u1621
  4431  001EDA  EF71  F00F         	goto	u1620
  4432  001EDE                     u1621:
  4433  001EDE  EF7D  F00F         	goto	l2818
  4434  001EE2                     u1620:
  4435  001EE2  0E10               	movlw	16
  4436  001EE4  6009               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  4437  001EE6  EF77  F00F         	goto	u1631
  4438  001EEA  EF79  F00F         	goto	u1630
  4439  001EEE                     u1631:
  4440  001EEE  EF7D  F00F         	goto	l2818
  4441  001EF2                     u1630:
  4442  001EF2                     
  4443                           ;src/lcd_driver.c: 512:             ddram_addr = 0x00u + pos_on_line - 1;
  4444  001EF2  0409               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
  4445  001EF4  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4446                           
  4447                           ;src/lcd_driver.c: 514:         } else if(line == 2u && pos_on_line < 16u){
  4448  001EF6  EFA6  F00F         	goto	l2830
  4449  001EFA                     l2818:
  4450  001EFA  0E02               	movlw	2
  4451  001EFC  180B               	xorwf	LCD_set_cursor_position@line^0,w,c
  4452  001EFE  A4D8               	btfss	status,2,c
  4453  001F00  EF84  F00F         	goto	u1641
  4454  001F04  EF86  F00F         	goto	u1640
  4455  001F08                     u1641:
  4456  001F08  EF93  F00F         	goto	l2824
  4457  001F0C                     u1640:
  4458  001F0C  0E10               	movlw	16
  4459  001F0E  6009               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  4460  001F10  EF8C  F00F         	goto	u1651
  4461  001F14  EF8E  F00F         	goto	u1650
  4462  001F18                     u1651:
  4463  001F18  EF93  F00F         	goto	l2824
  4464  001F1C                     u1650:
  4465  001F1C                     
  4466                           ;src/lcd_driver.c: 515:             ddram_addr = 0x40u + pos_on_line - 1;
  4467  001F1C  5009               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  4468  001F1E  0F3F               	addlw	63
  4469  001F20  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4470                           
  4471                           ;src/lcd_driver.c: 517:         } else if(line == 1u && pos_on_line > 16u){
  4472  001F22  EFA6  F00F         	goto	l2830
  4473  001F26                     l2824:
  4474  001F26  040B               	decf	LCD_set_cursor_position@line^0,w,c
  4475  001F28  A4D8               	btfss	status,2,c
  4476  001F2A  EF99  F00F         	goto	u1661
  4477  001F2E  EF9B  F00F         	goto	u1660
  4478  001F32                     u1661:
  4479  001F32  EFBA  F00F         	goto	l125
  4480  001F36                     u1660:
  4481  001F36  0E10               	movlw	16
  4482  001F38  6409               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  4483  001F3A  EFA1  F00F         	goto	u1671
  4484  001F3E  EFA3  F00F         	goto	u1670
  4485  001F42                     u1671:
  4486  001F42  EFBA  F00F         	goto	l125
  4487  001F46                     u1670:
  4488  001F46                     
  4489                           ;src/lcd_driver.c: 518:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
  4490  001F46  5009               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  4491  001F48  0F2F               	addlw	47
  4492  001F4A  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4493  001F4C                     l2830:
  4494                           
  4495                           ;src/lcd_driver.c: 525:     if(DISP_BIT_MODE == MODE_4BIT){
  4496  001F4C  5072               	movf	_DISP_BIT_MODE^0,w,c
  4497  001F4E  A4D8               	btfss	status,2,c
  4498  001F50  EFAC  F00F         	goto	u1681
  4499  001F54  EFAE  F00F         	goto	u1680
  4500  001F58                     u1681:
  4501  001F58  EFB4  F00F         	goto	l2834
  4502  001F5C                     u1680:
  4503  001F5C                     
  4504                           ;src/lcd_driver.c: 526:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
  4505  001F5C  500A               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  4506  001F5E  0980               	iorlw	128
  4507  001F60  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4508                           
  4509                           ;src/lcd_driver.c: 527:     } else{
  4510  001F64  EFB8  F00F         	goto	l2836
  4511  001F68                     l2834:
  4512                           
  4513                           ;src/lcd_driver.c: 528:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
  4514  001F68  500A               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  4515  001F6A  0980               	iorlw	128
  4516  001F6C  EC76  F013         	call	_LCD_write_instr_byte_8bit
  4517  001F70                     l2836:
  4518                           
  4519                           ;src/lcd_driver.c: 531:     address_counter = ddram_addr;
  4520  001F70  C00A  F09B         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
  4521  001F74                     l125:
  4522  001F74  0012               	return		;funcret
  4523  001F76                     __end_of_LCD_set_cursor_position:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _LCD_clear_display *****************
  4527 ;; Defined at:
  4528 ;;		line 427 in file "src/lcd_driver.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      unsigned char 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;Total ram usage:        1 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    3
  4549 ;; This function calls:
  4550 ;;		_LCD_write_instr_byte_4bit
  4551 ;;		_LCD_write_instr_byte_8bit
  4552 ;; This function is called by:
  4553 ;;		_main
  4554 ;;		_LCD_Init_amazonLCD
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text25
  4559  0026BC                     __ptext25:
  4560                           	callstack 0
  4561  0026BC                     _LCD_clear_display:
  4562                           	callstack 27
  4563  0026BC                     
  4564                           ;src/lcd_driver.c: 428:     if(DISP_BIT_MODE == MODE_4BIT){
  4565  0026BC  5072               	movf	_DISP_BIT_MODE^0,w,c
  4566  0026BE  A4D8               	btfss	status,2,c
  4567  0026C0  EF64  F013         	goto	u1591
  4568  0026C4  EF66  F013         	goto	u1590
  4569  0026C8                     u1591:
  4570  0026C8  EF6B  F013         	goto	l2802
  4571  0026CC                     u1590:
  4572  0026CC                     
  4573                           ;src/lcd_driver.c: 429:         LCD_write_instr_byte_4bit(0x01u);
  4574  0026CC  0E01               	movlw	1
  4575  0026CE  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4576                           
  4577                           ;src/lcd_driver.c: 430:     } else{
  4578  0026D2  EF6E  F013         	goto	l2804
  4579  0026D6                     l2802:
  4580                           
  4581                           ;src/lcd_driver.c: 431:         LCD_write_instr_byte_8bit(0x01u);
  4582  0026D6  0E01               	movlw	1
  4583  0026D8  EC76  F013         	call	_LCD_write_instr_byte_8bit
  4584  0026DC                     l2804:
  4585                           
  4586                           ;src/lcd_driver.c: 434:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4587  0026DC  0E82               	movlw	130
  4588  0026DE  6E09               	movwf	??_LCD_clear_display^0,c
  4589  0026E0  0EDE               	movlw	222
  4590  0026E2                     u2887:
  4591  0026E2  2EE8               	decfsz	wreg,f,c
  4592  0026E4  D7FE               	bra	u2887
  4593  0026E6  2E09               	decfsz	??_LCD_clear_display^0,f,c
  4594  0026E8  D7FC               	bra	u2887
  4595  0026EA  0012               	return		;funcret
  4596  0026EC                     __end_of_LCD_clear_display:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _LCD_write_instr_byte_8bit *****************
  4600 ;; Defined at:
  4601 ;;		line 200 in file "src/lcd_driver.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  instr           1    wreg     unsigned char 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  instr           1    7[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        2 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    2
  4622 ;; This function calls:
  4623 ;;		_LCD_enable_toggle
  4624 ;; This function is called by:
  4625 ;;		_LCD_clear_display
  4626 ;;		_LCD_set_cursor_position
  4627 ;;		_LCD_Init_amazonLCD
  4628 ;;		_LCD_return_home
  4629 ;;		_LCD_write_characters
  4630 ;;		_LCD_turn_off_cursor
  4631 ;;		_LCD_turn_on_cursor
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text26
  4636  0026EC                     __ptext26:
  4637                           	callstack 0
  4638  0026EC                     _LCD_write_instr_byte_8bit:
  4639                           	callstack 27
  4640                           
  4641                           ;incstack = 0
  4642                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  4643  0026EC  6E08               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  4644  0026EE                     
  4645                           ;src/lcd_driver.c: 202:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4646  0026EE  0EFC               	movlw	252
  4647  0026F0  1694               	andwf	148,f,c	;volatile
  4648  0026F2  9295               	bcf	149,1,c	;volatile
  4649  0026F4                     
  4650                           ;src/lcd_driver.c: 203:     (TRISD = 0x00u);
  4651  0026F4  0E00               	movlw	0
  4652  0026F6  6E95               	movwf	149,c	;volatile
  4653  0026F8                     
  4654                           ;src/lcd_driver.c: 204:     (LATCbits.LATC0 = 0u);
  4655  0026F8  908B               	bcf	139,0,c	;volatile
  4656  0026FA                     
  4657                           ;src/lcd_driver.c: 205:     (LATCbits.LATC1 = 0u);
  4658  0026FA  928B               	bcf	139,1,c	;volatile
  4659  0026FC                     
  4660                           ;src/lcd_driver.c: 208:     PORTD = instr;
  4661  0026FC  C008  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  4662  002700                     
  4663                           ;src/lcd_driver.c: 209:     LCD_enable_toggle();
  4664  002700  ECBB  F00F         	call	_LCD_enable_toggle	;wreg free
  4665  002704                     
  4666                           ;src/lcd_driver.c: 211:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4667  002704  0E82               	movlw	130
  4668  002706  6E07               	movwf	??_LCD_write_instr_byte_8bit^0,c
  4669  002708  0EDE               	movlw	222
  4670  00270A                     u2897:
  4671  00270A  2EE8               	decfsz	wreg,f,c
  4672  00270C  D7FE               	bra	u2897
  4673  00270E  2E07               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  4674  002710  D7FC               	bra	u2897
  4675  002712  0012               	return		;funcret
  4676  002714                     __end_of_LCD_write_instr_byte_8bit:
  4677                           	callstack 0
  4678                           
  4679 ;; *************** function _LCD_Init_ECE376 *****************
  4680 ;; Defined at:
  4681 ;;		line 224 in file "src/lcd_driver.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    3
  4702 ;; This function calls:
  4703 ;;		_LCD_write_instr_byte_4bit
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text27
  4710  001C2A                     __ptext27:
  4711                           	callstack 0
  4712  001C2A                     _LCD_Init_ECE376:
  4713                           	callstack 27
  4714  001C2A                     
  4715                           ;src/lcd_driver.c: 227:     PORTC = 0x00; PORTD = 0x00;
  4716  001C2A  0E00               	movlw	0
  4717  001C2C  6E82               	movwf	130,c	;volatile
  4718  001C2E  0E00               	movlw	0
  4719  001C30  6E83               	movwf	131,c	;volatile
  4720  001C32                     
  4721                           ;src/lcd_driver.c: 229:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4722  001C32  0EFC               	movlw	252
  4723  001C34  1694               	andwf	148,f,c	;volatile
  4724  001C36  9295               	bcf	149,1,c	;volatile
  4725  001C38                     
  4726                           ;src/lcd_driver.c: 230:     (TRISD |= 0xF0u);
  4727  001C38  0EF0               	movlw	240
  4728  001C3A  1295               	iorwf	149,f,c	;volatile
  4729  001C3C                     
  4730                           ;src/lcd_driver.c: 234:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  4731  001C3C  0ECB               	movlw	203
  4732  001C3E  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4733  001C40  0EEC               	movlw	236
  4734  001C42  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4735  001C44  0E84               	movlw	132
  4736  001C46                     u2907:
  4737  001C46  2EE8               	decfsz	wreg,f,c
  4738  001C48  D7FE               	bra	u2907
  4739  001C4A  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4740  001C4C  D7FC               	bra	u2907
  4741  001C4E  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4742  001C50  D7FA               	bra	u2907
  4743  001C52  D000               	nop2	
  4744  001C54                     
  4745                           ;src/lcd_driver.c: 235:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  4746  001C54  0ECB               	movlw	203
  4747  001C56  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4748  001C58  0EEC               	movlw	236
  4749  001C5A  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4750  001C5C  0E84               	movlw	132
  4751  001C5E                     u2917:
  4752  001C5E  2EE8               	decfsz	wreg,f,c
  4753  001C60  D7FE               	bra	u2917
  4754  001C62  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4755  001C64  D7FC               	bra	u2917
  4756  001C66  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4757  001C68  D7FA               	bra	u2917
  4758  001C6A  D000               	nop2	
  4759  001C6C                     
  4760                           ;src/lcd_driver.c: 236:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  4761  001C6C  0E66               	movlw	102
  4762  001C6E  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4763  001C70  0E76               	movlw	118
  4764  001C72  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4765  001C74  0EC1               	movlw	193
  4766  001C76                     u2927:
  4767  001C76  2EE8               	decfsz	wreg,f,c
  4768  001C78  D7FE               	bra	u2927
  4769  001C7A  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4770  001C7C  D7FC               	bra	u2927
  4771  001C7E  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4772  001C80  D7FA               	bra	u2927
  4773  001C82  F000               	nop	
  4774  001C84                     
  4775                           ;src/lcd_driver.c: 241:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  4776  001C84  0E06               	movlw	6
  4777  001C86  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4778  001C88  0E13               	movlw	19
  4779  001C8A  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4780  001C8C  0EAE               	movlw	174
  4781  001C8E                     u2937:
  4782  001C8E  2EE8               	decfsz	wreg,f,c
  4783  001C90  D7FE               	bra	u2937
  4784  001C92  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4785  001C94  D7FC               	bra	u2937
  4786  001C96  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4787  001C98  D7FA               	bra	u2937
  4788  001C9A                     
  4789                           ;src/lcd_driver.c: 242:     LCD_write_instr_byte_4bit(0x30u);
  4790  001C9A  0E30               	movlw	48
  4791  001C9C  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4792  001CA0                     
  4793                           ;src/lcd_driver.c: 243:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  4794  001CA0  0E41               	movlw	65
  4795  001CA2  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4796  001CA4  0EEE               	movlw	238
  4797  001CA6                     u2947:
  4798  001CA6  2EE8               	decfsz	wreg,f,c
  4799  001CA8  D7FE               	bra	u2947
  4800  001CAA  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4801  001CAC  D7FC               	bra	u2947
  4802  001CAE  D000               	nop2	
  4803  001CB0                     
  4804                           ;src/lcd_driver.c: 244:     LCD_write_instr_byte_4bit(0x30u);
  4805  001CB0  0E30               	movlw	48
  4806  001CB2  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4807  001CB6                     
  4808                           ;src/lcd_driver.c: 245:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  4809  001CB6  0ED6               	movlw	214
  4810  001CB8                     u2957:
  4811  001CB8  D000               	nop2	
  4812  001CBA  D000               	nop2	
  4813  001CBC  2EE8               	decfsz	wreg,f,c
  4814  001CBE  D7FC               	bra	u2957
  4815  001CC0  D000               	nop2	
  4816  001CC2                     
  4817                           ;src/lcd_driver.c: 246:     LCD_write_instr_byte_4bit(0x30u);
  4818  001CC2  0E30               	movlw	48
  4819  001CC4  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4820  001CC8                     
  4821                           ;src/lcd_driver.c: 248:     LCD_write_instr_byte_4bit(0x28u);
  4822  001CC8  0E28               	movlw	40
  4823  001CCA  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4824  001CCE                     
  4825                           ;src/lcd_driver.c: 249:     LCD_write_instr_byte_4bit(0x0Eu);
  4826  001CCE  0E0E               	movlw	14
  4827  001CD0  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4828  001CD4                     
  4829                           ;src/lcd_driver.c: 250:     LCD_write_instr_byte_4bit(0x01u);
  4830  001CD4  0E01               	movlw	1
  4831  001CD6  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4832  001CDA                     
  4833                           ;src/lcd_driver.c: 251:     LCD_write_instr_byte_4bit(0x06u);
  4834  001CDA  0E06               	movlw	6
  4835  001CDC  ECBF  F012         	call	_LCD_write_instr_byte_4bit
  4836  001CE0                     
  4837                           ;src/lcd_driver.c: 253:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  4838  001CE0  0E06               	movlw	6
  4839  001CE2  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4840  001CE4  0E13               	movlw	19
  4841  001CE6  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4842  001CE8  0EAE               	movlw	174
  4843  001CEA                     u2967:
  4844  001CEA  2EE8               	decfsz	wreg,f,c
  4845  001CEC  D7FE               	bra	u2967
  4846  001CEE  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4847  001CF0  D7FC               	bra	u2967
  4848  001CF2  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4849  001CF4  D7FA               	bra	u2967
  4850  001CF6                     
  4851                           ;src/lcd_driver.c: 256:     CURRENT_DISP = QAPASS_EBAY;
  4852  001CF6  0E00               	movlw	0
  4853  001CF8  6E73               	movwf	_CURRENT_DISP^0,c
  4854  001CFA                     
  4855                           ;src/lcd_driver.c: 257:     DISP_BIT_MODE = MODE_4BIT;
  4856  001CFA  0E00               	movlw	0
  4857  001CFC  6E72               	movwf	_DISP_BIT_MODE^0,c
  4858  001CFE                     
  4859                           ;src/lcd_driver.c: 258:     init_complete = 0x01u;
  4860  001CFE  0E01               	movlw	1
  4861  001D00  6E71               	movwf	_init_complete^0,c
  4862  001D02                     
  4863                           ;src/lcd_driver.c: 259:     current_entry_mode = 0x06u;
  4864  001D02  0E06               	movlw	6
  4865  001D04  0100               	movlb	0	; () banked
  4866  001D06  6FFC               	movwf	_current_entry_mode& (0+255),b
  4867  001D08                     
  4868                           ; BSR set to: 0
  4869                           ;src/lcd_driver.c: 260:     current_disp_ctrl = 0x0Eu;
  4870  001D08  0E0E               	movlw	14
  4871  001D0A  6E74               	movwf	_current_disp_ctrl^0,c
  4872  001D0C                     
  4873                           ; BSR set to: 0
  4874                           ;src/lcd_driver.c: 261:     current_func_set = 0x28u;
  4875  001D0C  0E28               	movlw	40
  4876  001D0E  6FFB               	movwf	_current_func_set& (0+255),b
  4877  001D10                     
  4878                           ; BSR set to: 0
  4879  001D10  0012               	return		;funcret
  4880  001D12                     __end_of_LCD_Init_ECE376:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _LCD_write_instr_byte_4bit *****************
  4884 ;; Defined at:
  4885 ;;		line 175 in file "src/lcd_driver.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  instr           1    wreg     unsigned char 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  instr           1    7[COMRAM] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;Total ram usage:        2 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    2
  4906 ;; This function calls:
  4907 ;;		_LCD_enable_toggle
  4908 ;; This function is called by:
  4909 ;;		_LCD_Init_ECE376
  4910 ;;		_LCD_clear_display
  4911 ;;		_LCD_set_cursor_position
  4912 ;;		_LCD_Init_amazonLCD
  4913 ;;		_LCD_return_home
  4914 ;;		_LCD_write_characters
  4915 ;;		_LCD_turn_off_cursor
  4916 ;;		_LCD_turn_on_cursor
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text28
  4921  00257E                     __ptext28:
  4922                           	callstack 0
  4923  00257E                     _LCD_write_instr_byte_4bit:
  4924                           	callstack 27
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;incstack = 0
  4928                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  4929  00257E  6E08               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  4930  002580                     
  4931                           ;src/lcd_driver.c: 177:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4932  002580  0EFC               	movlw	252
  4933  002582  1694               	andwf	148,f,c	;volatile
  4934  002584  9295               	bcf	149,1,c	;volatile
  4935  002586                     
  4936                           ;src/lcd_driver.c: 178:     (TRISD &= 0x0Fu);
  4937  002586  0E0F               	movlw	15
  4938  002588  1695               	andwf	149,f,c	;volatile
  4939  00258A                     
  4940                           ;src/lcd_driver.c: 179:     (LATCbits.LATC0 = 0u);
  4941  00258A  908B               	bcf	139,0,c	;volatile
  4942  00258C                     
  4943                           ;src/lcd_driver.c: 180:     (LATCbits.LATC1 = 0u);
  4944  00258C  928B               	bcf	139,1,c	;volatile
  4945  00258E                     
  4946                           ;src/lcd_driver.c: 183:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  4947  00258E  C008  F007         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  4948  002592  0EF0               	movlw	240
  4949  002594  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  4950  002596  5083               	movf	131,w,c	;volatile
  4951  002598  0B0F               	andlw	15
  4952  00259A  1007               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  4953  00259C  6E83               	movwf	131,c	;volatile
  4954  00259E                     
  4955                           ;src/lcd_driver.c: 184:     LCD_enable_toggle();
  4956  00259E  ECBB  F00F         	call	_LCD_enable_toggle	;wreg free
  4957  0025A2                     
  4958                           ;src/lcd_driver.c: 185:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  4959  0025A2  C008  F007         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  4960  0025A6  3A07               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  4961  0025A8  0EF0               	movlw	240
  4962  0025AA  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  4963  0025AC  0EF0               	movlw	240
  4964  0025AE  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  4965  0025B0  5083               	movf	131,w,c	;volatile
  4966  0025B2  0B0F               	andlw	15
  4967  0025B4  1007               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  4968  0025B6  6E83               	movwf	131,c	;volatile
  4969  0025B8                     
  4970                           ;src/lcd_driver.c: 186:     LCD_enable_toggle();
  4971  0025B8  ECBB  F00F         	call	_LCD_enable_toggle	;wreg free
  4972  0025BC                     
  4973                           ;src/lcd_driver.c: 188:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4974  0025BC  0E82               	movlw	130
  4975  0025BE  6E07               	movwf	??_LCD_write_instr_byte_4bit^0,c
  4976  0025C0  0EDE               	movlw	222
  4977  0025C2                     u2977:
  4978  0025C2  2EE8               	decfsz	wreg,f,c
  4979  0025C4  D7FE               	bra	u2977
  4980  0025C6  2E07               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  4981  0025C8  D7FC               	bra	u2977
  4982  0025CA  0012               	return		;funcret
  4983  0025CC                     __end_of_LCD_write_instr_byte_4bit:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _LCD_enable_toggle *****************
  4987 ;; Defined at:
  4988 ;;		line 45 in file "src/lcd_driver.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;Total ram usage:        2 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    1
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_LCD_write_data_byte_4bit
  5013 ;;		_LCD_write_instr_byte_4bit
  5014 ;;		_LCD_write_instr_byte_8bit
  5015 ;;		_LCD_wait_for_BF
  5016 ;;		_LCD_write_data_byte_8bit
  5017 ;;		_LCD_Init
  5018 ;;		_LCD_read_current_address_counter
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text29
  5023  001F76                     __ptext29:
  5024                           	callstack 0
  5025  001F76                     _LCD_enable_toggle:
  5026                           	callstack 28
  5027  001F76                     
  5028                           ;src/lcd_driver.c: 46:     switch(CURRENT_DISP){
  5029  001F76  EF01  F010         	goto	l2560
  5030  001F7A                     l66:
  5031                           
  5032                           ;src/lcd_driver.c: 49:             (LATDbits.LATD1 = 0u);
  5033  001F7A  928C               	bcf	140,1,c	;volatile
  5034  001F7C                     
  5035                           ;src/lcd_driver.c: 50:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5036  001F7C  0E06               	movlw	6
  5037  001F7E                     u2987:
  5038  001F7E  2EE8               	decfsz	wreg,f,c
  5039  001F80  D7FE               	bra	u2987
  5040  001F82  D000               	nop2	
  5041  001F84                     
  5042                           ;src/lcd_driver.c: 51:             (LATDbits.LATD1 = 1u);
  5043  001F84  828C               	bsf	140,1,c	;volatile
  5044                           
  5045                           ;src/lcd_driver.c: 52:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5046  001F86  0E06               	movlw	6
  5047  001F88                     u2997:
  5048  001F88  2EE8               	decfsz	wreg,f,c
  5049  001F8A  D7FE               	bra	u2997
  5050  001F8C  D000               	nop2	
  5051  001F8E                     
  5052                           ;src/lcd_driver.c: 53:             (LATDbits.LATD1 = 0u);
  5053  001F8E  928C               	bcf	140,1,c	;volatile
  5054                           
  5055                           ;src/lcd_driver.c: 54:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5056  001F90  0E06               	movlw	6
  5057  001F92                     u3007:
  5058  001F92  2EE8               	decfsz	wreg,f,c
  5059  001F94  D7FE               	bra	u3007
  5060  001F96  D000               	nop2	
  5061                           
  5062                           ;src/lcd_driver.c: 55:             break;
  5063  001F98  EF1E  F010         	goto	l71
  5064  001F9C                     l68:
  5065                           
  5066                           ;src/lcd_driver.c: 58:             (LATDbits.LATD1 = 0u);
  5067  001F9C  928C               	bcf	140,1,c	;volatile
  5068  001F9E                     
  5069                           ;src/lcd_driver.c: 59:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  5070  001F9E  0E03               	movlw	3
  5071  001FA0                     u3017:
  5072  001FA0  2EE8               	decfsz	wreg,f,c
  5073  001FA2  D7FE               	bra	u3017
  5074  001FA4  F000               	nop	
  5075  001FA6                     
  5076                           ;src/lcd_driver.c: 60:             (LATDbits.LATD1 = 1u);
  5077  001FA6  828C               	bsf	140,1,c	;volatile
  5078                           
  5079                           ;src/lcd_driver.c: 61:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  5080  001FA8  0E03               	movlw	3
  5081  001FAA                     u3027:
  5082  001FAA  2EE8               	decfsz	wreg,f,c
  5083  001FAC  D7FE               	bra	u3027
  5084  001FAE  F000               	nop	
  5085  001FB0                     
  5086                           ;src/lcd_driver.c: 62:             (LATDbits.LATD1 = 0u);
  5087  001FB0  928C               	bcf	140,1,c	;volatile
  5088                           
  5089                           ;src/lcd_driver.c: 63:             _delay((unsigned long)((100u)*(40000000u/4000000.0)))
      +                          ;
  5090  001FB2  0EC8               	movlw	200
  5091  001FB4                     u3037:
  5092  001FB4  D000               	nop2	
  5093  001FB6  2EE8               	decfsz	wreg,f,c
  5094  001FB8  D7FD               	bra	u3037
  5095                           
  5096                           ;src/lcd_driver.c: 64:             break;
  5097  001FBA  EF1E  F010         	goto	l71
  5098  001FBE                     l69:
  5099                           
  5100                           ;src/lcd_driver.c: 67:             (LATDbits.LATD1 = 0u);
  5101  001FBE  928C               	bcf	140,1,c	;volatile
  5102  001FC0                     
  5103                           ;src/lcd_driver.c: 68:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5104  001FC0  0E06               	movlw	6
  5105  001FC2                     u3047:
  5106  001FC2  2EE8               	decfsz	wreg,f,c
  5107  001FC4  D7FE               	bra	u3047
  5108  001FC6  D000               	nop2	
  5109  001FC8                     
  5110                           ;src/lcd_driver.c: 69:             (LATDbits.LATD1 = 1u);
  5111  001FC8  828C               	bsf	140,1,c	;volatile
  5112                           
  5113                           ;src/lcd_driver.c: 70:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5114  001FCA  0E06               	movlw	6
  5115  001FCC                     u3057:
  5116  001FCC  2EE8               	decfsz	wreg,f,c
  5117  001FCE  D7FE               	bra	u3057
  5118  001FD0  D000               	nop2	
  5119  001FD2                     
  5120                           ;src/lcd_driver.c: 71:             (LATDbits.LATD1 = 0u);
  5121  001FD2  928C               	bcf	140,1,c	;volatile
  5122                           
  5123                           ;src/lcd_driver.c: 72:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5124  001FD4  0E06               	movlw	6
  5125  001FD6                     u3067:
  5126  001FD6  2EE8               	decfsz	wreg,f,c
  5127  001FD8  D7FE               	bra	u3067
  5128  001FDA  D000               	nop2	
  5129                           
  5130                           ;src/lcd_driver.c: 73:             break;
  5131  001FDC  EF1E  F010         	goto	l71
  5132  001FE0                     l70:
  5133                           
  5134                           ;src/lcd_driver.c: 76:             (LATDbits.LATD1 = 0u);
  5135  001FE0  928C               	bcf	140,1,c	;volatile
  5136  001FE2                     
  5137                           ;src/lcd_driver.c: 77:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5138  001FE2  0E06               	movlw	6
  5139  001FE4                     u3077:
  5140  001FE4  2EE8               	decfsz	wreg,f,c
  5141  001FE6  D7FE               	bra	u3077
  5142  001FE8  D000               	nop2	
  5143  001FEA                     
  5144                           ;src/lcd_driver.c: 78:             (LATDbits.LATD1 = 1u);
  5145  001FEA  828C               	bsf	140,1,c	;volatile
  5146                           
  5147                           ;src/lcd_driver.c: 79:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5148  001FEC  0E06               	movlw	6
  5149  001FEE                     u3087:
  5150  001FEE  2EE8               	decfsz	wreg,f,c
  5151  001FF0  D7FE               	bra	u3087
  5152  001FF2  D000               	nop2	
  5153  001FF4                     
  5154                           ;src/lcd_driver.c: 80:             (LATDbits.LATD1 = 0u);
  5155  001FF4  928C               	bcf	140,1,c	;volatile
  5156                           
  5157                           ;src/lcd_driver.c: 81:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5158  001FF6  0E06               	movlw	6
  5159  001FF8                     u3097:
  5160  001FF8  2EE8               	decfsz	wreg,f,c
  5161  001FFA  D7FE               	bra	u3097
  5162  001FFC  D000               	nop2	
  5163                           
  5164                           ;src/lcd_driver.c: 82:             break;
  5165  001FFE  EF1E  F010         	goto	l71
  5166  002002                     l2560:
  5167  002002  5073               	movf	_CURRENT_DISP^0,w,c
  5168  002004  6E05               	movwf	??_LCD_enable_toggle^0,c
  5169  002006  6A06               	clrf	(??_LCD_enable_toggle+1)^0,c
  5170                           
  5171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5172                           ; Switch size 1, requested type "simple"
  5173                           ; Number of cases is 1, Range of values is 0 to 0
  5174                           ; switch strategies available:
  5175                           ; Name         Instructions Cycles
  5176                           ; simple_byte            4     3 (average)
  5177                           ;	Chosen strategy is simple_byte
  5178  002008  5006               	movf	(??_LCD_enable_toggle+1)^0,w,c
  5179  00200A  0A00               	xorlw	0	; case 0
  5180  00200C  B4D8               	btfsc	status,2,c
  5181  00200E  EF0B  F010         	goto	l4012
  5182  002012  EF1E  F010         	goto	l71
  5183  002016                     l4012:
  5184                           
  5185                           ; Switch size 1, requested type "simple"
  5186                           ; Number of cases is 4, Range of values is 0 to 3
  5187                           ; switch strategies available:
  5188                           ; Name         Instructions Cycles
  5189                           ; simple_byte           13     7 (average)
  5190                           ;	Chosen strategy is simple_byte
  5191  002016  5005               	movf	??_LCD_enable_toggle^0,w,c
  5192  002018  0A00               	xorlw	0	; case 0
  5193  00201A  B4D8               	btfsc	status,2,c
  5194  00201C  EFBD  F00F         	goto	l66
  5195  002020  0A01               	xorlw	1	; case 1
  5196  002022  B4D8               	btfsc	status,2,c
  5197  002024  EFCE  F00F         	goto	l68
  5198  002028  0A03               	xorlw	3	; case 2
  5199  00202A  B4D8               	btfsc	status,2,c
  5200  00202C  EFDF  F00F         	goto	l69
  5201  002030  0A01               	xorlw	1	; case 3
  5202  002032  B4D8               	btfsc	status,2,c
  5203  002034  EFF0  F00F         	goto	l70
  5204  002038  EF1E  F010         	goto	l71
  5205  00203C                     l71:
  5206  00203C  0012               	return		;funcret
  5207  00203E                     __end_of_LCD_enable_toggle:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _CCP1_Capture_Init_Default *****************
  5211 ;; Defined at:
  5212 ;;		line 66 in file "src/ccp.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;Total ram usage:        0 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    1
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_main
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text30
  5241  002784                     __ptext30:
  5242                           	callstack 0
  5243  002784                     _CCP1_Capture_Init_Default:
  5244                           	callstack 29
  5245  002784                     
  5246                           ;src/ccp.c: 67:     (CCP1CON = 0x5);
  5247  002784  0E05               	movlw	5
  5248  002786  6EBD               	movwf	189,c	;volatile
  5249  002788                     
  5250                           ;src/ccp.c: 68:     (T3CON &= ~0x48);
  5251  002788  0EB7               	movlw	183
  5252  00278A  16B1               	andwf	177,f,c	;volatile
  5253  00278C                     
  5254                           ;src/ccp.c: 69:     (PIE1bits.CCP1IE = 1u);
  5255  00278C  849D               	bsf	157,2,c	;volatile
  5256  00278E  0012               	return		;funcret
  5257  002790                     __end_of_CCP1_Capture_Init_Default:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _isr *****************
  5261 ;; Defined at:
  5262 ;;		line 150 in file "ece376_hw9_ccp_capt.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;Total ram usage:        4 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		Interrupt level 2
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	intcode
  5290  000008                     __pintcode:
  5291                           	callstack 0
  5292  000008                     _isr:
  5293                           	callstack 22
  5294                           
  5295                           ;incstack = 0
  5296  000008  8275               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5297  00000A  EDD2  F010         	call	int_func,f	;refresh shadow registers
  5298                           
  5299                           	psect	intcode_body
  5300  0021A4                     __pintcode_body:
  5301                           	callstack 22
  5302  0021A4                     int_func:
  5303                           	callstack 22
  5304  0021A4  0006               	pop		; remove dummy address from shadow register refresh
  5305  0021A6                     
  5306                           ;ece376_hw9_ccp_capt.c: 156:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  5307  0021A6  A09E               	btfss	158,0,c	;volatile
  5308  0021A8  EFD8  F010         	goto	i2u208_41
  5309  0021AC  EFDA  F010         	goto	i2u208_40
  5310  0021B0                     i2u208_41:
  5311  0021B0  EFEB  F010         	goto	i2l3236
  5312  0021B4                     i2u208_40:
  5313  0021B4  A09D               	btfss	157,0,c	;volatile
  5314  0021B6  EFDF  F010         	goto	i2u209_41
  5315  0021BA  EFE1  F010         	goto	i2u209_40
  5316  0021BE                     i2u209_41:
  5317  0021BE  EFEB  F010         	goto	i2l3236
  5318  0021C2                     i2u209_40:
  5319  0021C2                     
  5320                           ;ece376_hw9_ccp_capt.c: 163:         elapsed_time += 0x10000u;
  5321  0021C2  0E00               	movlw	0
  5322  0021C4  0100               	movlb	0	; () banked
  5323  0021C6  278E               	addwf	_elapsed_time& (0+255),f,b	;volatile
  5324  0021C8  0E00               	movlw	0
  5325  0021CA  238F               	addwfc	(_elapsed_time+1)& (0+255),f,b	;volatile
  5326  0021CC  0E01               	movlw	1
  5327  0021CE  2390               	addwfc	(_elapsed_time+2)& (0+255),f,b	;volatile
  5328  0021D0  0E00               	movlw	0
  5329  0021D2  2391               	addwfc	(_elapsed_time+3)& (0+255),f,b	;volatile
  5330  0021D4                     
  5331                           ; BSR set to: 0
  5332                           ;ece376_hw9_ccp_capt.c: 165:         (PIR1bits.TMR1IF = 0u);
  5333  0021D4  909E               	bcf	158,0,c	;volatile
  5334  0021D6                     i2l3236:
  5335                           
  5336                           ;ece376_hw9_ccp_capt.c: 173:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  5337  0021D6  A49E               	btfss	158,2,c	;volatile
  5338  0021D8  EFF0  F010         	goto	i2u210_41
  5339  0021DC  EFF2  F010         	goto	i2u210_40
  5340  0021E0                     i2u210_41:
  5341  0021E0  EF16  F011         	goto	i2l283
  5342  0021E4                     i2u210_40:
  5343  0021E4  A49D               	btfss	157,2,c	;volatile
  5344  0021E6  EFF7  F010         	goto	i2u211_41
  5345  0021EA  EFF9  F010         	goto	i2u211_40
  5346  0021EE                     i2u211_41:
  5347  0021EE  EF16  F011         	goto	i2l283
  5348  0021F2                     i2u211_40:
  5349  0021F2                     
  5350                           ;ece376_hw9_ccp_capt.c: 174:         elapsed_time = elapsed_time + (uint32_t) CCPR1 - 30
      +                          000000u;
  5351  0021F2  50BE               	movf	190,w,c	;volatile
  5352  0021F4  0100               	movlb	0	; () banked
  5353  0021F6  258E               	addwf	_elapsed_time& (0+255),w,b	;volatile
  5354  0021F8  6E01               	movwf	??_isr^0,c
  5355  0021FA  50BF               	movf	191,w,c	;volatile
  5356  0021FC  218F               	addwfc	(_elapsed_time+1)& (0+255),w,b	;volatile
  5357  0021FE  6E02               	movwf	(??_isr+1)^0,c
  5358  002200  0E00               	movlw	0
  5359  002202  2190               	addwfc	(_elapsed_time+2)& (0+255),w,b	;volatile
  5360  002204  6E03               	movwf	(??_isr+2)^0,c
  5361  002206  0E00               	movlw	0
  5362  002208  2191               	addwfc	(_elapsed_time+3)& (0+255),w,b	;volatile
  5363  00220A  6E04               	movwf	(??_isr+3)^0,c
  5364  00220C  0E80               	movlw	128
  5365  00220E  2401               	addwf	??_isr^0,w,c
  5366  002210  6F8E               	movwf	_elapsed_time& (0+255),b	;volatile
  5367  002212  0E3C               	movlw	60
  5368  002214  2002               	addwfc	(??_isr+1)^0,w,c
  5369  002216  6F8F               	movwf	(_elapsed_time+1)& (0+255),b	;volatile
  5370  002218  0E36               	movlw	54
  5371  00221A  2003               	addwfc	(??_isr+2)^0,w,c
  5372  00221C  6F90               	movwf	(_elapsed_time+2)& (0+255),b	;volatile
  5373  00221E  0EFE               	movlw	254
  5374  002220  2004               	addwfc	(??_isr+3)^0,w,c
  5375  002222  6F91               	movwf	(_elapsed_time+3)& (0+255),b	;volatile
  5376  002224                     
  5377                           ; BSR set to: 0
  5378                           ;ece376_hw9_ccp_capt.c: 176:   game_done_flag = 0x01u;
  5379  002224  0E01               	movlw	1
  5380  002226  6F9A               	movwf	_game_done_flag& (0+255),b	;volatile
  5381  002228                     
  5382                           ; BSR set to: 0
  5383                           ;ece376_hw9_ccp_capt.c: 177:         T1CON &= ~0x01;
  5384  002228  90CD               	bcf	205,0,c	;volatile
  5385  00222A                     
  5386                           ; BSR set to: 0
  5387                           ;ece376_hw9_ccp_capt.c: 180:   (PIR1bits.CCP1IF = 0u);
  5388  00222A  949E               	bcf	158,2,c	;volatile
  5389  00222C                     i2l283:
  5390  00222C  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5391  00222E  0011               	retfie		f
  5392  002230                     __end_of_isr:
  5393                           	callstack 0
  5394                           
  5395                           	psect	rparam
  5396  0000                     
  5397                           	psect	temp
  5398  000075                     btemp:
  5399                           	callstack 0
  5400  000075                     	ds	1
  5401  0000                     int$flags	set	btemp
  5402  0000                     wtemp8	set	btemp+1
  5403  0000                     ttemp5	set	btemp+1
  5404  0000                     ttemp6	set	btemp+4
  5405  0000                     ttemp7	set	btemp+8
  5406                           
  5407                           	psect	idloc
  5408                           
  5409                           ;Config register IDLOC0 @ 0x200000
  5410                           ;	unspecified, using default values
  5411  200000                     	org	2097152
  5412  200000  FF                 	db	255
  5413                           
  5414                           ;Config register IDLOC1 @ 0x200001
  5415                           ;	unspecified, using default values
  5416  200001                     	org	2097153
  5417  200001  FF                 	db	255
  5418                           
  5419                           ;Config register IDLOC2 @ 0x200002
  5420                           ;	unspecified, using default values
  5421  200002                     	org	2097154
  5422  200002  FF                 	db	255
  5423                           
  5424                           ;Config register IDLOC3 @ 0x200003
  5425                           ;	unspecified, using default values
  5426  200003                     	org	2097155
  5427  200003  FF                 	db	255
  5428                           
  5429                           ;Config register IDLOC4 @ 0x200004
  5430                           ;	unspecified, using default values
  5431  200004                     	org	2097156
  5432  200004  FF                 	db	255
  5433                           
  5434                           ;Config register IDLOC5 @ 0x200005
  5435                           ;	unspecified, using default values
  5436  200005                     	org	2097157
  5437  200005  FF                 	db	255
  5438                           
  5439                           ;Config register IDLOC6 @ 0x200006
  5440                           ;	unspecified, using default values
  5441  200006                     	org	2097158
  5442  200006  FF                 	db	255
  5443                           
  5444                           ;Config register IDLOC7 @ 0x200007
  5445                           ;	unspecified, using default values
  5446  200007                     	org	2097159
  5447  200007  FF                 	db	255
  5448                           
  5449                           	psect	config
  5450                           
  5451                           ; Padding undefined space
  5452  300000                     	org	3145728
  5453  300000  FF                 	db	255
  5454                           
  5455                           ;Config register CONFIG1H @ 0x300001
  5456                           ;	Oscillator Selection bits
  5457                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  5458                           ;	Fail-Safe Clock Monitor Enable bit
  5459                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5460                           ;	Internal/External Oscillator Switchover bit
  5461                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5462  300001                     	org	3145729
  5463  300001  06                 	db	6
  5464                           
  5465                           ;Config register CONFIG2L @ 0x300002
  5466                           ;	Power-up Timer Enable bit
  5467                           ;	PWRT = OFF, PWRT disabled
  5468                           ;	Brown-out Reset Enable bits
  5469                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5470                           ;	Brown Out Reset Voltage bits
  5471                           ;	BORV = 3, Minimum setting
  5472  300002                     	org	3145730
  5473  300002  1F                 	db	31
  5474                           
  5475                           ;Config register CONFIG2H @ 0x300003
  5476                           ;	Watchdog Timer Enable bit
  5477                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5478                           ;	Watchdog Timer Postscale Select bits
  5479                           ;	WDTPS = 32768, 1:32768
  5480  300003                     	org	3145731
  5481  300003  1E                 	db	30
  5482                           
  5483                           ; Padding undefined space
  5484  300004                     	org	3145732
  5485  300004  FF                 	db	255
  5486                           
  5487                           ;Config register CONFIG3H @ 0x300005
  5488                           ;	CCP2 MUX bit
  5489                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5490                           ;	PORTB A/D Enable bit
  5491                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5492                           ;	Low-Power Timer1 Oscillator Enable bit
  5493                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5494                           ;	MCLR Pin Enable bit
  5495                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5496  300005                     	org	3145733
  5497  300005  81                 	db	129
  5498                           
  5499                           ;Config register CONFIG4L @ 0x300006
  5500                           ;	Stack Full/Underflow Reset Enable bit
  5501                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5502                           ;	Single-Supply ICSP Enable bit
  5503                           ;	LVP = OFF, Single-Supply ICSP disabled
  5504                           ;	Extended Instruction Set Enable bit
  5505                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5506                           ;	Background Debugger Enable bit
  5507                           ;	DEBUG = 0x1, unprogrammed default
  5508  300006                     	org	3145734
  5509  300006  81                 	db	129
  5510                           
  5511                           ; Padding undefined space
  5512  300007                     	org	3145735
  5513  300007  FF                 	db	255
  5514                           
  5515                           ;Config register CONFIG5L @ 0x300008
  5516                           ;	Code Protection bit
  5517                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5518                           ;	Code Protection bit
  5519                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5520                           ;	Code Protection bit
  5521                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5522                           ;	Code Protection bit
  5523                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5524  300008                     	org	3145736
  5525  300008  0F                 	db	15
  5526                           
  5527                           ;Config register CONFIG5H @ 0x300009
  5528                           ;	Boot Block Code Protection bit
  5529                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5530                           ;	Data EEPROM Code Protection bit
  5531                           ;	CPD = OFF, Data EEPROM not code-protected
  5532  300009                     	org	3145737
  5533  300009  C0                 	db	192
  5534                           
  5535                           ;Config register CONFIG6L @ 0x30000A
  5536                           ;	Write Protection bit
  5537                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5538                           ;	Write Protection bit
  5539                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5540                           ;	Write Protection bit
  5541                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5542                           ;	Write Protection bit
  5543                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5544  30000A                     	org	3145738
  5545  30000A  0F                 	db	15
  5546                           
  5547                           ;Config register CONFIG6H @ 0x30000B
  5548                           ;	Configuration Register Write Protection bit
  5549                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5550                           ;	Boot Block Write Protection bit
  5551                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5552                           ;	Data EEPROM Write Protection bit
  5553                           ;	WRTD = OFF, Data EEPROM not write-protected
  5554  30000B                     	org	3145739
  5555  30000B  E0                 	db	224
  5556                           
  5557                           ;Config register CONFIG7L @ 0x30000C
  5558                           ;	Table Read Protection bit
  5559                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5560                           ;	Table Read Protection bit
  5561                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5562                           ;	Table Read Protection bit
  5563                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5564                           ;	Table Read Protection bit
  5565                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5566  30000C                     	org	3145740
  5567  30000C  0F                 	db	15
  5568                           
  5569                           ;Config register CONFIG7H @ 0x30000D
  5570                           ;	Boot Block Table Read Protection bit
  5571                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5572  30000D                     	org	3145741
  5573  30000D  40                 	db	64
  5574                           tosu	equ	0xFFF
  5575                           tosh	equ	0xFFE
  5576                           tosl	equ	0xFFD
  5577                           stkptr	equ	0xFFC
  5578                           pclatu	equ	0xFFB
  5579                           pclath	equ	0xFFA
  5580                           pcl	equ	0xFF9
  5581                           tblptru	equ	0xFF8
  5582                           tblptrh	equ	0xFF7
  5583                           tblptrl	equ	0xFF6
  5584                           tablat	equ	0xFF5
  5585                           prodh	equ	0xFF4
  5586                           prodl	equ	0xFF3
  5587                           indf0	equ	0xFEF
  5588                           postinc0	equ	0xFEE
  5589                           postdec0	equ	0xFED
  5590                           preinc0	equ	0xFEC
  5591                           plusw0	equ	0xFEB
  5592                           fsr0h	equ	0xFEA
  5593                           fsr0l	equ	0xFE9
  5594                           wreg	equ	0xFE8
  5595                           indf1	equ	0xFE7
  5596                           postinc1	equ	0xFE6
  5597                           postdec1	equ	0xFE5
  5598                           preinc1	equ	0xFE4
  5599                           plusw1	equ	0xFE3
  5600                           fsr1h	equ	0xFE2
  5601                           fsr1l	equ	0xFE1
  5602                           bsr	equ	0xFE0
  5603                           indf2	equ	0xFDF
  5604                           postinc2	equ	0xFDE
  5605                           postdec2	equ	0xFDD
  5606                           preinc2	equ	0xFDC
  5607                           plusw2	equ	0xFDB
  5608                           fsr2h	equ	0xFDA
  5609                           fsr2l	equ	0xFD9
  5610                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    34
    Data        37
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    105     116
    BANK0           128     52     126
    BANK1           256      0      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1162_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK0[16]), main@rcon_reg_string(BANK0[16]), 

    sp__hex_to_bit_string	PTR unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _strcat->_strcpy
    _strcpy->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    ___lwdiv->___llmod
    ___lldiv->___llmod
    _LCD_write_data_byte_4bit->_LCD_enable_toggle
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_write_instr_byte_8bit->_LCD_enable_toggle
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit
    _LCD_write_instr_byte_4bit->_LCD_enable_toggle

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0   14703
                                            103 COMRAM     2     2      0
                                             10 BANK0     42    42      0
          _CCP1_Capture_Init_Default
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
                _Timer1_Init_Default
                            ___lldiv
                            ___llmod
                            ___lwdiv
                  _hex_to_bit_string
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     0      4    1018
                                             16 COMRAM     4     0      4
                  _hex_to_bit_string (ARG)
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              8 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   10005
                                             93 COMRAM    10     0     10
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9513
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    8986
                                             63 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4919
                                             31 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3507
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1565
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _hex_to_bit_string                                    8     6      2     136
                                              4 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             13 COMRAM     7     3      4
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     767
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                             13 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      44
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              3     2      1     909
                                              8 COMRAM     3     2      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      66
                                              8 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      22
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      44
                                              8 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      44
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Capture_Init_Default                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Capture_Init_Default
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _Timer1_Init_Default
   ___lldiv
     ___llmod (ARG)
   ___llmod
   ___lwdiv
     ___llmod (ARG)
   _hex_to_bit_string
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _strcat
     _hex_to_bit_string (ARG)
     _strcpy (ARG)
       _strlen (ARG)
     _strlen (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      30       7       18.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     34      7E       5       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     69      74       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     122      34        0.0%
DATA                 0      0     122       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Nov 11 01:24:09 2021

        ?_CCP1_Capture_Init_Default 0001                                  l23 278E  
                                l70 1FE0                                  l71 203C  
                                l80 257C                                  l66 1F7A  
                                l68 1F9C                                  l92 1D10  
                                l69 1FBE                                  l86 25CA  
                                l89 2712                 ___wmul@multiplicand 0007  
                               l110 26EA                                 l125 1F74  
                               l325 23B4                                 l328 275E  
                               l194 2796                                 l362 21A2  
                               l355 2192                                 l297 1178  
                               l289 108A                                 l298 117C  
                               l826 2428                                 l755 22B6  
                               l819 2420                                 l748 22A6  
                               l773 1C28                                 l766 1C08  
                               l783 1DE0                                 l776 1DC0  
                               _pad 203E                                 _isr 0008  
                               wreg 000FE8                  _current_entry_mode 00FC  
                              l1006 24DC                                l1120 1B38  
                              l1040 20FE                                l1123 2684  
                              l1131 252E                                l1035 2082  
                              l1117 1B30                                l1045 17E0  
                              l1038 20C4                                l1055 19A8  
                              l1047 17E8                                l1146 1EAA  
                              l1154 260E                                l1082 17A8  
                              l1170 264C                                l1164 2738  
                              l1157 2798                                l1069 1554  
                              l1176 26BA                                l1088 2482  
                              l1089 248A                                l4010 1A66  
                              l4012 2016                                l4008 1514  
                              l2540 1F9E                                l2532 1F76  
                              l3500 2696                                l2710 2788  
                              l2550 1FD2                                l2542 1FA6  
                              l2534 1F7C                                l3502 26AE  
                              l2712 278C                                l2552 1FE2  
                              l2544 1FB0                                l2536 1F84  
                              l2560 2002                                l2800 26CC  
                              l2720 253C                                l3520 1B80  
                              l3512 1B3A                                l3600 1822  
                              l2704 2610                                l2554 1FEA  
                              l2546 1FC0                                l2538 1F8E  
                              l2802 26D6                                l2810 1EBE  
                              l2730 256A                                l2722 253E  
                              l2714 2532                                l3506 273A  
                              l3530 1BF0                                l3522 1B8E  
                              l3514 1B46                                l3602 1828  
                              l3610 190E                                l2706 2620  
                              l2708 2784                                l2556 1FF4  
                              l2548 1FC8                                l2660 2580  
                              l2804 26DC                                l2820 1F0C  
                              l2812 1ED2                                l2732 256E  
                              l2724 2540                                l2716 2536  
                              l2900 2180                                l3508 2756  
                              l3532 1C02                                l3524 1BA0  
                              l3516 1B64                                l3540 1D4C  
                              l3612 1920                                l3620 1980  
                              l3604 189E                                l3700 14EE  
                              l2670 258E                                l2662 2584  
                              l2750 1C2A                                l2822 1F1C  
                              l2830 1F4C                                l2814 1EE2  
                              l2726 2550                                l2718 2538  
                              l2902 2182                                l2910 224E  
                              l3630 19C6                                l3526 1BCE  
                              l3518 1B6C                                l3542 1D5A  
                              l3534 1D12                                l3550 203E  
                              l3614 193E                                l3606 18A4  
                              l3710 15BE                                l3702 1542  
                              l2672 259E                                l2664 2586  
                              l2760 1C54                                l2752 1C32  
                              l2680 26EE                                l2832 1F5C  
                              l2824 1F26                                l2816 1EF2  
                              l2808 1EAE                                l2728 2554  
                              l2840 2790                                l2904 218C  
                              l2920 22A0                                l2912 225A  
                              l3640 1A22                                l3632 19E2  
                              l3624 19AA                                l3528 1BEE  
                              l3544 1D88                                l3536 1D30  
                              l3480 1E10                                l3560 208E  
                              l3552 204C                                l3616 1958  
                              l3608 18AA                                l3712 15CC  
                              l3704 1562                                l3800 1052  
                              l2674 25A2                                l2666 258A  
                              l2770 1CB0                                l2762 1C6C  
                              l2754 1C36                                l2690 26FC  
                              l2682 26F2                                l2834 1F68  
                              l2826 1F36                                l2818 1EFA  
                              l2842 2794                                l2914 2268  
                              l2906 2230                                l2930 23E0  
                              l2922 23B6                                l2850 2342  
                              l3642 1A38                                l3634 1A18  
                              l3626 19BE                                l3546 1DA8  
                              l3538 1D38                                l3482 1E2E  
                              l3474 1DE2                                l3490 25D8  
                              l3562 20A2                                l3554 2060  
                              l3618 1972                                l3722 164E  
                              l3714 15DA                                l3706 1564  
                              l3810 1076                                l3802 105C  
                              l2676 25B8                                l2668 258C  
                              l2780 1CD4                                l2772 1CB6  
                              l2764 1C84                                l2756 1C38  
                              l2692 2700                                l2684 26F4  
                              l2836 1F70                                l2828 1F46  
                              l2916 2286                                l2908 2246  
                              l2940 2414                                l2932 23EE  
                              l2924 23BE                                l2860 2396  
                              l2852 2370                                l2844 233E  
                              l3572 264E                                l3580 24F6  
                              l3660 1B14                                l3652 1AB2  
                              l3644 1A40                                l3636 1A1C  
                              l3628 19C2                                l3548 1DBA  
                              l3484 1E64                                l3476 1DF4  
                              l3492 25EA                                l3564 20A6  
                              l3556 206E                                l3732 1706  
                              l3716 15FA                                l3724 1660  
                              l3708 1588                                l3900 1248  
                              l3820 10AA                                l3812 107A  
                              l2678 25BC                                l2790 1CFE  
                              l2782 1CDA                                l2774 1CC2  
                              l2766 1C9A                                l2758 1C3C  
                              l2694 2704                                l2686 26F8  
                              l2918 2296                                l2942 241A  
                              l2934 23F4                                l2926 23D0  
                              l2862 23A6                                l2854 237C  
                              l3582 2524                                l3646 1A48  
                              l3478 1E06                                l3494 25EE  
                              l3566 20D2                                l3558 207A  
                              l3590 17B8                                l3750 1796  
                              l3734 172A                                l3742 1758  
                              l3726 1684                                l3718 1608  
                              l3670 1496                                l3910 1390  
                              l3902 1260                                l3830 110C  
                              l3822 10B4                                l3814 108C  
                              ?_pad 0015                                l2792 1D02  
                              l2784 1CE0                                l2776 1CC8  
                              l2768 1CA0                                l2688 26FA  
                              l2936 240A                                l2928 23D8  
                              l2864 23AC                                l2856 2384  
                              l3584 2528                                l3576 24DE  
                              l3656 1AF0                                l3648 1A7C  
                              l3488 25CC                                l3496 2686  
                              l3568 20E6                                l3592 17BA  
                              l3744 1766                                l3736 1738  
                              l3728 16CE                                l3680 14CA  
                              l3672 14A6                                l3760 242A  
                              l3920 13C8                                l3912 139A  
                              l3904 1262                                l3840 112E  
                              l3832 1116                                l3824 10C6  
                              l3816 10A4                                l3808 1062  
                              l2794 1D08                                l2786 1CF6  
                              l2778 1CCE                                l2890 212E  
                              l2938 2412                                l2858 2394  
                              l3578 24E2                                l3658 1B02  
                              l3498 2692                                l3594 17D4  
                              l3738 174C                                l3674 14AA  
                              l3666 1464                                l3762 2432  
                              l3914 13A0                                l3906 1274  
                              l3842 1132                                l3826 10D8  
                              l3818 10A6                                l2796 1D0C  
                              l2788 1CFA                                l2892 213A  
                              l2884 2100                                l3596 1810  
                              l3588 17AA                                l3692 14DC  
                              l3684 14D0                                l3676 14B6  
                              l3668 1488                                l3748 1772  
                              l3764 2440                                l3780 24CA  
                              l3772 248C                                l3940 143E  
                              l3932 13F4                                l3924 13D0  
                              l3908 1364                                l3860 1198  
                              l3852 1152                                l3844 1142  
                              l3828 10F2                                l2798 26BC  
                              l2894 2148                                l2886 2110  
                              l3598 1818                                l3678 14B8  
                              l3766 2466                                l3774 249E  
                              l3942 1440                                l3934 1406  
                              l3926 13DA                                l3918 13B4  
                              l3870 11C0                                l3862 11B0  
                              l3854 1164                                l3846 114C  
                              l3838 111C                                l3790 1040  
                              l2896 2152                                l2888 2126  
                              l3696 14E2                                l3688 14D6  
                              l3776 24A6                                l3768 2714  
                              l3944 1452                                l3928 13E0  
                              l3880 11E8                                l3872 11C4  
                              l3864 11B4                                l3856 1168  
                              l3792 1042                                l3784 1038  
                              l2898 2170                                l3778 24AE  
                              l3946 1456                                l3938 140E  
                              l3890 1202                                l3882 11EA  
                              l3874 11D2                                l3866 11B8  
                              l3858 118A                                l3794 1046  
                              l3786 103A                                l3892 1206  
                              l3876 11E4                                l3868 11BC  
                              l3796 104A                                l3788 103E  
                              l3894 1216                                l3878 11E6  
                              l3798 104E                                l3896 122C  
                              l3888 11EE                                l3898 1230  
                              ?_isr 0001                                STR_1 1023  
                              u2300 1B64                                u2301 1B60  
                              u2310 1B8E                                u2230 1DF4  
                              u3007 1F92                                u2311 1B8A  
                              u2231 1DF0                                u1600 1EBE  
                              u2400 267E                                u2320 1BCE  
                              u2240 1E06                                u3017 1FA0  
                              u1601 1EBA                                u2401 2678  
                              u2321 1BCA                                u2241 1E02  
                              u1610 1ECE                                u2410 2680  
                              u2330 1D30                                u2250 1E2E  
                              u3027 1FAA                                u1611 1ECA  
                              u2331 1D2C                                u2251 1E2A  
                              u1620 1EE2                                u1700 2370  
                              u2420 24F6                                u2340 1D5A  
                              u2260 1E64                                u2500 1980  
                              u3037 1FB4                                u1621 1EDE  
                              u1701 236C                                u2421 24F2  
                              u2341 1D56                                u2261 1E60  
                              u2501 197C                                u1630 1EF2  
                              u1710 23A6                                u2430 2524  
                              u2510 19E2                                u2350 1D88  
                              u2270 260E                                u3047 1FC2  
                              u1631 1EEE                                u1711 23A2  
                              u2431 2520                                u2511 19DE  
                              u2351 1D84                                u2271 260A  
                              u1640 1F0C                                u1720 2126  
                              u1800 240A                                u2520 1A18  
                              u2280 26AE                                u2360 204C  
                              u2440 17B8                                u2600 1562  
                              u3057 1FCC                                u1641 1F08  
                              u1721 2122                                u1801 2406  
                              u2521 1A14                                u2281 26AA  
                              u2361 2048                                u2441 17B4  
                              u2601 155E                                u1650 1F1C  
                              u1730 2148                                u2530 1A34  
                              u2370 206E                                u2450 17D4  
                              u2610 1588                                u3067 1FD6  
                              u1651 1F18                                u1731 2144  
                              u2531 1A30                                u2291 1B40  
                              u2371 206A                                u2451 17D0  
                              u2611 1584                                u1660 1F36  
                              u1740 2170                                u2540 1AEA  
                              u2380 20C4                                u2460 1920  
                              u2620 15CC                                u1580 264C  
                              u3077 1FE4                                u1661 1F32  
                              u1741 216C                                u2541 1AE4  
                              u2381 20C0                                u2461 191C  
                              u2621 15C8                                u1581 2648  
                              u2701 10BE                                u1590 26CC  
                              u1670 1F46                                u1750 2246  
                              u2550 1AEC                                u2390 20D2  
                              u2470 193E                                u2630 1648  
                              u3087 1FEE                                u1591 26C8  
                              u1671 1F42                                u1751 2242  
                              u2391 20CE                                u2471 193A  
                              u2631 1642                                u2711 10D0  
                              u1680 1F5C                                u1760 2268  
                              u2560 1B02                                u2480 1958  
                              u2640 164A                                u2720 1142  
                              u3097 1FF8                                u1681 1F58  
                              u1761 2264                                u2561 1AFE  
                              u2481 1954                                u2721 113E  
                              u1770 2286                                u2570 1B14  
                              u2490 1972                                u2650 1660  
                              u2730 1178                                u1771 2282  
                              u2571 1B10                                u2491 196E  
                              u2651 165C                                u2731 1174  
                              u1780 23D0                                u2660 1684  
                              u2580 1488                                u2740 118A  
                              u1781 23CC                                u2661 1680  
                              u2581 1484                                u2741 1186  
                              u1790 23EE                                u1694 2356  
                              u2670 172A                                u2590 1554  
                              u2750 11D2                                u1791 23EA  
                              u1695 2352                                u2671 1726  
                              u2591 1550                                u2751 11CE  
                              u2807 1096                                u2680 2482  
                              u2760 1216                                u2681 247E  
                              u2761 1212                                u2817 11A2  
                              u2770 1274                                u2690 108A  
                              u2907 1C46                                u2771 1270  
                              u2827 1220                                u2691 1086  
                              u2780 13B0                                u2917 1C5E  
                              u2781 13AC                                u2837 123A  
                              u2790 13F0                                u2927 1C76  
                              u2791 13EC                                u2847 1252  
                              u2937 1C8E                                u2857 1418  
                              u2947 1CA6                                u2867 1430  
                              u2957 1CB8                                u2877 2574  
                              u2967 1CEA                                u2887 26E2  
                              u2977 25C2                                u2897 270A  
                              u2987 1F7E                                u2997 1F88  
                              _RCON 000FD0                                _dbuf 0100  
                              _atoi 19AA                                _main 1038  
                              _prec 006C                                _nout 0092  
                              pad@i 001C                                pad@p 0019  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001E  
                              fsr2l 000FD9                                btemp 0075  
                              _utoa 17AA                                prodh 000FF4  
                              prodl 000FF3                                start 000E  
                      ___param_bank 000000   __end_of_CCP1_Capture_Init_Default 2790  
                             ??_pad 001B                               ??_isr 0001  
           __end_of_LCD_Init_ECE376 1D12                               ?_atoi 000C  
                             ?_main 0001                               _CCPR1 000FBE  
                             _CCPR2 000FBB                     __end_of___lldiv 21A4  
                             ?_utoa 0020                     __end_of___lodiv 1C2A  
                             _T1CON 000FCD                     __end_of___llmod 22B8  
                             _T3CON 000FB1                     __end_of___lomod 1DE2  
      LCD_write_uint32_number@F2549 0080                     __end_of___lwdiv 242A  
                             i2l283 222C                        vfpfcnvrt@fmt 0042  
                      vfpfcnvrt@llu 004A                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95   LCD_set_cursor_position@ddram_addr 000A  
          __end_of_result_msg_title 1023                               _flags 006E  
                             _fputc 1DE2                               _fputs 25CC  
                   __end_of_isdigit 2686                               atoi@n 0019  
                             pad@fp 0015                               atoi@s 000C  
                             _width 006A                               _putch 2798  
                             main@i 00E4    __size_of_LCD_set_cursor_position 00CA  
                   __end_of_isspace 2530                               tablat 000FF5  
      LCD_write_data_byte_4bit@data 0008                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 0076  
                             ttemp6 0079                               ttemp7 007D  
                             utoa@d 0022                               utoa@i 003E  
                             utoa@n 0036                               utoa@p 0032  
                             utoa@w 0034                               status 000FD8  
                             wtemp8 0076                     __end_of_sprintf 24DE  
       LCD_set_cursor_position@line 000B                    ___lodiv@dividend 0005  
       __end_of_Timer1_Init_Default 2798                     __initialization 22B8  
                      __end_of_atoi 1B3A                        __end_of_main 1464  
                      __end_of_utoa 19AA                              ??_atoi 000E  
                            ??_main 0068         ??_LCD_write_instr_byte_4bit 0007  
       ??_LCD_write_instr_byte_8bit 0007                              ??_utoa 002A  
                     __activetblptr 000002                    ___lodiv@quotient 0015  
                            _ADCON1 000FC1                              ?_fputc 0005  
                  ___llmod@dividend 0005                              ?_fputs 000E  
                            ?_putch 0001                              i2l3230 21B4  
                            i2l3240 21F2                              i2l3232 21C2  
                            i2l3242 2224                              i2l3234 21D4  
                            i2l3244 2228                              i2l3236 21D6  
                            i2l3228 21A6                              i2l3246 222A  
                            i2l3238 21E4                       vfpfcnvrt@done 0052  
                    _start_game_msg 100F                              _STKPTR 000FFC  
                      vfprintf@cfmt 005C                              ___wmul 273A  
                         ??___lldiv 0016                           ??___lodiv 0015  
                         ??___llmod 000D                           ??___lomod 0015  
                         ??___lwdiv 0012                    __end_of_init_msg 100F  
                            clear_0 2310                              clear_1 231C  
                            clear_2 2328                    ?_LCD_Init_ECE376 0001  
                            pad@buf 0017                              _strcat 2714  
                            _strcpy 2610                              _strlen 2686  
  __end_of_LCD_write_data_byte_4bit 257E                              fputc@c 0005  
                            fputs@c 0012                              fputs@i 0013  
                      __pdataCOMRAM 0074                              fputs@s 000E  
                         ??_isdigit 0007                        __mediumconst 0000  
                         ??_isspace 0007                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                            putch@c 0001                    __end_of_vfprintf 248C  
                            utoa@fp 0020                           ??_sprintf 0068  
            __end_of_start_game_msg 101B                          __accesstop 0080  
           __end_of__initialization 232E           _LCD_write_instr_byte_4bit 257E  
         _LCD_write_instr_byte_8bit 26EC                       ___rparam_used 000001  
             main@stkptr_reg_string 00D0                      __pcstackCOMRAM 0001  
                      __pidataBANK0 2760                        __pidataBANK1 2774  
       ??_CCP1_Capture_Init_Default 0005                       __end_of_fputc 1EAC  
                     __end_of_fputs 2610                       __end_of_putch 279A  
                     _init_complete 0071               _timer1_overflow_count 008A  
           _LCD_set_cursor_position 1EAC                             ??_fputc 0009  
                           ??_fputs 0012                             ??_putch 0005  
                        __pbssBANK0 0080                          __pbssBANK1 0100  
                    _game_done_flag 009A                             ?___wmul 0005  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
               main@rcon_reg_string 00C0                             ?_strcat 0011  
                           ?_strcpy 0009                             ?_strlen 0005  
                __size_of_vfpfcnvrt 0346            _LCD_write_data_byte_4bit 2530  
         _CCP1_Capture_Init_Default 2784                    ___lomod@dividend 0005  
                           __Hparam 0000                             __Lparam 0000  
                           ___lldiv 2100                     __size_of___wmul 0026  
                           ___lodiv 1B3A                             ___llmod 2230  
                           ___lomod 1D12                             ___lwdiv 23B6  
                         ?_vfprintf 0056                        __psmallconst 1000  
                           __pcinit 22B8                             __ramtop 1000  
                           __ptext0 1038                             __ptext1 2714  
                           __ptext2 2610                             __ptext3 248C  
                           __ptext4 242A                             __ptext5 1464  
                           __ptext6 17AA                             __ptext7 203E  
                           __ptext8 2686                             __ptext9 25CC  
                   __size_of_strcat 0026                     __size_of_strcpy 003E  
                   __size_of_strlen 0036                        __size_of_pad 00C2  
                           _isdigit 264E                        __size_of_isr 2228  
         ??_LCD_set_cursor_position 000A                             _isspace 24DE  
                      _elapsed_time 008E                             atoi@neg 0012  
                           _sprintf 248C                      __pintcode_body 21A4  
              end_of_initialization 232E                             fputc@fp 0007  
                     __Lmediumconst 0000                             int_func 21A4  
                           fputs@fp 0010                     ___lldiv@divisor 0012  
                   ___lldiv@counter 001A                          _shift_mode 0070  
                 __end_of_vfpfcnvrt 17AA                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
      __size_of_Timer1_Init_Default 0008                          ??_vfprintf 005C  
                           strcpy@d 000F                             strlen@a 0007  
                           strcpy@s 000D                             strlen@s 0005  
                        _result_msg 009C                           _PORTBbits 000F81  
                         _PORTDbits 000F83  LCD_set_cursor_position@pos_on_line 0009  
                   _address_counter 009B                        _CURRENT_DISP 0073  
                  _current_func_set 00FB                   _LCD_clear_display 26BC  
                       vfpfcnvrt@ap 0044                   _hex_to_bit_string 233C  
                       vfpfcnvrt@fp 0040                      __end_of___wmul 2760  
                     __pidataCOMRAM 279A                  ?_LCD_clear_display 0001  
                ?_hex_to_bit_string 0005                      __end_of_strcat 273A  
                    __end_of_strcpy 264E                      __end_of_strlen 26BC  
               start_initialization 22B8                     ___lodiv@divisor 000D  
                   ___lodiv@counter 001D                 ??_LCD_clear_display 0009  
                       __end_of_pad 2100                         __end_of_isr 2230  
               ??_hex_to_bit_string 0007            __size_of_LCD_Init_ECE376 00E8  
                   ___llmod@divisor 0009                     ___llmod@counter 000D  
                       vfprintf@fmt 0058           __end_of_LCD_clear_display 26EC  
         __end_of_hex_to_bit_string 23B6                            ??___wmul 0009  
                       __pdataBANK0 00EA                         __pdataBANK1 0120  
        ??_LCD_write_data_byte_4bit 0007                            ??_strcat 0015  
                          ??_strcpy 000D                            ??_strlen 0007  
                       __pbssCOMRAM 006A                       __pcstackBANK0 00B6  
                    _num_of_seconds 0098                           _atoi$1271 0014  
                         _atoi$1272 0018                           _atoi$1273 0016  
                         _main$1590 00E0                    ___lwdiv@dividend 000E  
                         __pintcode 0008                           _disp_16x2 00FD  
                 _LCD_enable_toggle 1F76                            ?___lldiv 000E  
                          ?___lodiv 0005                            ?___llmod 0005  
                          ?___lomod 0005                            ?___lwdiv 000E  
                ?_LCD_enable_toggle 0001                   __size_of_vfprintf 0062  
                   ___lomod@divisor 000D                         __smallconst 1000  
                   ___lomod@counter 0015                            ?_isdigit 0005  
               ??_LCD_enable_toggle 0005                            ?_isspace 0005  
                  ___lwdiv@quotient 0012                            ?_sprintf 005E  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
               _Timer1_Init_Default 2790                      __size_of_putch 0002  
                         _isr_count 00FA                      ___wmul@product 0009  
             _hex_to_bit_string$724 000A                            _LATCbits 000F8B  
                          _LATDbits 000F8C                   ??_LCD_Init_ECE376 0009  
                          _PIE1bits 000F9D                            _PIE2bits 000FA0  
                          i2u210_40 21E4                            i2u210_41 21E0  
                          i2u211_40 21F2                            i2u211_41 21EE  
                          i2u208_40 21B4                            i2u208_41 21B0  
                          i2u209_40 21C2                            i2u209_41 21BE  
                     _DISP_BIT_MODE 0072           __end_of_LCD_enable_toggle 203E  
                          _PIR1bits 000F9E          __size_of_LCD_clear_display 0030  
                          _RCONbits 000FD0          __size_of_hex_to_bit_string 007A  
                         main@F3020 00EA                           main@F3022 0120  
                         _num_of_ms 0096                           _num_of_us 0094  
              ?_Timer1_Init_Default 0001                           _vfpfcnvrt 1464  
                         main@i_716 00E7                           main@i_718 00E8  
                         main@i_719 00E9                           main@i_691 00E5  
                         main@i_692 00E6                   ___wmul@multiplier 0005  
    LCD_write_instr_byte_4bit@instr 0008                        _isspace$1289 000B  
                         copy_data0 22CC                           copy_data1 22EC  
    LCD_write_instr_byte_8bit@instr 0008                            __Hrparam 0000  
                        vfprintf@ap 005A                            __Lrparam 0000  
                        vfprintf@fp 0056               ??_Timer1_Init_Default 0005  
          hex_to_bit_string@hex_val 0009                    __size_of___lldiv 00A4  
                  __size_of___lodiv 00F0                    __size_of___llmod 0088  
                  __size_of___lomod 00D0                          ?_vfpfcnvrt 0040  
                  __size_of___lwdiv 0074            ?_LCD_set_cursor_position 0009  
                hex_to_bit_string@i 000C                          sprintf@fmt 0060  
                        strcat@dest 0011                    __size_of_isdigit 0038  
                   ___lwdiv@divisor 0010                    __size_of_isspace 0052  
                   ___lwdiv@counter 0014                            __ptext10 1DE2  
                          __ptext11 2798                            __ptext20 2230  
                          __ptext12 1D12                            __ptext21 2100  
                          __ptext13 1B3A                            __ptext30 2784  
                          __ptext22 2790                            __ptext14 19AA  
                          __ptext23 2530                            __ptext15 24DE  
                          __ptext24 1EAC                            __ptext16 264E  
                          __ptext25 26BC                            __ptext17 273A  
                          __ptext26 26EC                            __ptext18 233C  
                          __ptext27 1C2A                            __ptext19 23B6  
                          __ptext28 257E                            __ptext29 1F76  
                  __size_of_sprintf 0052                          strcpy@dest 0009  
                     __size_of_atoi 0190                       __size_of_main 042C  
                          _init_msg 1001                       __size_of_utoa 0200  
        __size_of_LCD_enable_toggle 00C8                    _result_msg_title 101B  
                          int$flags 0075                            _vfprintf 242A  
__size_of_LCD_write_instr_byte_4bit 004E  __size_of_LCD_write_instr_byte_8bit 0028  
        ?_LCD_write_instr_byte_4bit 0001          ?_LCD_write_instr_byte_8bit 0001  
                    _vfpfcnvrt$1253 0054                          _INTCONbits 000FF2  
                          isdigit@c 0005                            intlevel2 0000  
                         sprintf@ap 00B8                           strcat@src 0013  
                          isspace@c 0005                    ___lldiv@dividend 000E  
                         strcpy@src 000B     __end_of_LCD_set_cursor_position 1F76  
                       ??_vfpfcnvrt 0046         hex_to_bit_string@bit_string 00AD  
 __end_of_LCD_write_instr_byte_4bit 25CC                            sprintf@f 00BA  
                          sprintf@s 005E   __end_of_LCD_write_instr_byte_8bit 2714  
                  ___lldiv@quotient 0016                     _LCD_Init_ECE376 1C2A  
 __size_of_LCD_write_data_byte_4bit 004E           ?_LCD_write_data_byte_4bit 0001  
                 _current_disp_ctrl 0074  __size_of_CCP1_Capture_Init_Default 000C  
