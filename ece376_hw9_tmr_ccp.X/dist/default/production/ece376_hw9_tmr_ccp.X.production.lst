

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 10 14:51:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  001760                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _current_func_set
    73  001760  30                 	db	48
    74                           
    75                           ;initializer for _current_entry_mode
    76  001761  06                 	db	6
    77                           
    78                           ;initializer for _disp_16x2
    79  001762  01                 	db	1
    80                           
    81                           ;initializer for _current_disp_ctrl
    82  001763  08                 	db	8
    83                           
    84                           	psect	smallconst
    85  001000                     __psmallconst:
    86                           	callstack 0
    87  001000  00                 	db	0
    88  001001                     _init_msg:
    89                           	callstack 0
    90  001001  49                 	db	73
    91  001002  6E                 	db	110
    92  001003  69                 	db	105
    93  001004  74                 	db	116
    94  001005  20                 	db	32
    95  001006  73                 	db	115
    96  001007  75                 	db	117
    97  001008  63                 	db	99
    98  001009  63                 	db	99
    99  00100A  65                 	db	101
   100  00100B  73                 	db	115
   101  00100C  73                 	db	115
   102  00100D  21                 	db	33
   103  00100E  00                 	db	0
   104  00100F                     __end_of_init_msg:
   105                           	callstack 0
   106  0000                     _CCPR2	set	4027
   107  0000                     _CCPR1	set	4030
   108  0000                     _INTCONbits	set	4082
   109  0000                     _PORTBbits	set	3969
   110  0000                     _PORTB	set	3969
   111  0000                     _TRISB	set	3987
   112  0000                     _ADCON1	set	4033
   113  0000                     _PIR1bits	set	3998
   114  0000                     _T1CON	set	4045
   115  0000                     _PORTC	set	3970
   116  0000                     _PORTD	set	3971
   117  0000                     _TRISC	set	3988
   118  0000                     _PORTDbits	set	3971
   119  0000                     _TRISD	set	3989
   120  0000                     _LATCbits	set	3979
   121  0000                     _PIE2bits	set	4000
   122  0000                     _CCP2CON	set	4026
   123  0000                     _PIE1bits	set	3997
   124  0000                     _CCP1CON	set	4029
   125  00100F  00                 	db	0	; dummy byte at the end
   126  0000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  0016C2                     __pcinit:
   131                           	callstack 0
   132  0016C2                     start_initialization:
   133                           	callstack 0
   134  0016C2                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (4 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  0016C2  0E60               	movlw	low __pidataCOMRAM
   140  0016C4  6EF6               	movwf	tblptrl,c
   141  0016C6  0E17               	movlw	high __pidataCOMRAM
   142  0016C8  6EF7               	movwf	tblptrh,c
   143  0016CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  0016CC  6EF8               	movwf	tblptru,c
   145  0016CE  EE00  F036         	lfsr	0,__pdataCOMRAM
   146  0016D2  EE10 F004          	lfsr	1,4
   147  0016D6                     copy_data0:
   148  0016D6  0009               	tblrd		*+
   149  0016D8  CFF5 FFEE          	movff	tablat,postinc0
   150  0016DC  50E5               	movf	postdec1,w,c
   151  0016DE  50E1               	movf	fsr1l,w,c
   152  0016E0  E1FA               	bnz	copy_data0
   153                           
   154                           ; Clear objects allocated to COMRAM (14 bytes)
   155  0016E2  EE00  F028         	lfsr	0,__pbssCOMRAM
   156  0016E6  0E0E               	movlw	14
   157  0016E8                     clear_0:
   158  0016E8  6AEE               	clrf	postinc0,c
   159  0016EA  06E8               	decf	wreg,f,c
   160  0016EC  E1FD               	bnz	clear_0
   161  0016EE                     end_of_initialization:
   162                           	callstack 0
   163  0016EE                     __end_of__initialization:
   164                           	callstack 0
   165  0016EE  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166  0016F0  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167  0016F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  0016F4  6EF8               	movwf	tblptru,c
   169  0016F6  0100               	movlb	0
   170  0016F8  EF08  F008         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173  000028                     __pbssCOMRAM:
   174                           	callstack 0
   175  000028                     _elapsed_time:
   176                           	callstack 0
   177  000028                     	ds	4
   178  00002C                     _game_done_flag:
   179                           	callstack 0
   180  00002C                     	ds	1
   181  00002D                     _address_counter:
   182                           	callstack 0
   183  00002D                     	ds	1
   184  00002E                     	ds	1
   185  00002F                     _init_complete:
   186                           	callstack 0
   187  00002F                     	ds	1
   188  000030                     _DISP_BIT_MODE:
   189                           	callstack 0
   190  000030                     	ds	1
   191  000031                     _CURRENT_DISP:
   192                           	callstack 0
   193  000031                     	ds	1
   194  000032                     _timer1_overflow_count:
   195                           	callstack 0
   196  000032                     	ds	4
   197                           
   198                           	psect	dataCOMRAM
   199  000036                     __pdataCOMRAM:
   200                           	callstack 0
   201  000036                     _current_func_set:
   202                           	callstack 0
   203  000036                     	ds	1
   204  000037                     _current_entry_mode:
   205                           	callstack 0
   206  000037                     	ds	1
   207  000038                     	ds	1
   208  000039                     _current_disp_ctrl:
   209                           	callstack 0
   210  000039                     	ds	1
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	callstack 0
   215  000001                     ??_isr:
   216  000001                     
   217                           ; 1 bytes @ 0x0
   218  000001                     	ds	4
   219  000005                     ??_LCD_enable_toggle:
   220  000005                     ?___llmod:
   221                           	callstack 0
   222  000005                     ___llmod@dividend:
   223                           	callstack 0
   224                           
   225                           ; 4 bytes @ 0x4
   226  000005                     	ds	2
   227  000007                     ??_LCD_write_data_byte_4bit:
   228  000007                     ??_LCD_write_instr_byte_4bit:
   229  000007                     ??_LCD_write_instr_byte_8bit:
   230                           
   231                           ; 1 bytes @ 0x6
   232  000007                     	ds	1
   233  000008                     LCD_write_data_byte_4bit@data:
   234                           	callstack 0
   235  000008                     LCD_write_instr_byte_4bit@instr:
   236                           	callstack 0
   237  000008                     LCD_write_instr_byte_8bit@instr:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x7
   241  000008                     	ds	1
   242  000009                     ??_LCD_clear_display:
   243  000009                     ??_LCD_Init_ECE376:
   244  000009                     LCD_set_cursor_position@pos_on_line:
   245                           	callstack 0
   246  000009                     ___llmod@divisor:
   247                           	callstack 0
   248                           
   249                           ; 4 bytes @ 0x8
   250  000009                     	ds	1
   251  00000A                     LCD_set_cursor_position@ddram_addr:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x9
   255  00000A                     	ds	1
   256  00000B                     LCD_set_cursor_position@line:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0xA
   260  00000B                     	ds	2
   261  00000D                     ___llmod@counter:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0xC
   265  00000D                     	ds	1
   266  00000E                     ?___lwdiv:
   267                           	callstack 0
   268  00000E                     ?___lldiv:
   269                           	callstack 0
   270  00000E                     ___lwdiv@dividend:
   271                           	callstack 0
   272  00000E                     ___lldiv@dividend:
   273                           	callstack 0
   274                           
   275                           ; 4 bytes @ 0xD
   276  00000E                     	ds	2
   277  000010                     ___lwdiv@divisor:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0xF
   281  000010                     	ds	2
   282  000012                     ___lwdiv@quotient:
   283                           	callstack 0
   284  000012                     ___lldiv@divisor:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x11
   288  000012                     	ds	2
   289  000014                     ___lwdiv@counter:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x13
   293  000014                     	ds	2
   294  000016                     ___lldiv@quotient:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x15
   298  000016                     	ds	4
   299  00001A                     ___lldiv@counter:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x19
   303  00001A                     	ds	1
   304  00001B                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x1A
   307  00001B                     	ds	8
   308  000023                     _main$1188:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x22
   312  000023                     	ds	4
   313  000027                     main@i:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x26
   317  000027                     	ds	1
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 155 in file "ece376_hw9_ccp_capt.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  num_of_us       2    0        unsigned short 
   329 ;;  num_of_ms       2    0        unsigned short 
   330 ;;  num_of_secon    2    0        unsigned short 
   331 ;;  i               1   38[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;Total ram usage:       13 bytes
   346 ;; Hardware stack levels required when called:    4
   347 ;; This function calls:
   348 ;;		_CCP1_Capture_Init_Default
   349 ;;		_LCD_Init_ECE376
   350 ;;		_LCD_clear_display
   351 ;;		_LCD_set_cursor_position
   352 ;;		_LCD_write_data_byte_4bit
   353 ;;		_Timer1_Enable
   354 ;;		_Timer1_Init_Default
   355 ;;		___lldiv
   356 ;;		___llmod
   357 ;;		___lwdiv
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text0
   364  001010                     __ptext0:
   365                           	callstack 0
   366  001010                     _main:
   367                           	callstack 27
   368  001010                     
   369                           ;ece376_hw9_ccp_capt.c: 163:  TRISC |= (1u << 2);
   370  001010  8494               	bsf	148,2,c	;volatile
   371  001012                     
   372                           ;ece376_hw9_ccp_capt.c: 164:  ADCON1 |= 0x0F;
   373  001012  0E0F               	movlw	15
   374  001014  12C1               	iorwf	193,f,c	;volatile
   375  001016                     
   376                           ;ece376_hw9_ccp_capt.c: 165:  TRISB |= (1u << 0);
   377  001016  8093               	bsf	147,0,c	;volatile
   378  001018                     
   379                           ;ece376_hw9_ccp_capt.c: 166:     TRISD &= ~(1u << 0);
   380  001018  9095               	bcf	149,0,c	;volatile
   381  00101A                     
   382                           ;ece376_hw9_ccp_capt.c: 168:     PORTB = 0x00;
   383  00101A  0E00               	movlw	0
   384  00101C  6E81               	movwf	129,c	;volatile
   385  00101E                     
   386                           ;ece376_hw9_ccp_capt.c: 169:     PORTC = 0x00;
   387  00101E  0E00               	movlw	0
   388  001020  6E82               	movwf	130,c	;volatile
   389  001022                     
   390                           ;ece376_hw9_ccp_capt.c: 172:  LCD_Init_ECE376();
   391  001022  ECCF  F008         	call	_LCD_Init_ECE376	;wreg free
   392  001026                     
   393                           ;ece376_hw9_ccp_capt.c: 173:     LCD_set_cursor_position(1,1);
   394  001026  0E01               	movlw	1
   395  001028  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   396  00102A  0E01               	movlw	1
   397  00102C  EC41  F009         	call	_LCD_set_cursor_position
   398  001030                     
   399                           ;ece376_hw9_ccp_capt.c: 174:     for(uint8_t i=0; i<13; i++){
   400  001030  0E00               	movlw	0
   401  001032  6E27               	movwf	main@i^0,c
   402  001034                     l1954:
   403                           
   404                           ;ece376_hw9_ccp_capt.c: 175:         LCD_write_data_byte_4bit(init_msg[i]);
   405  001034  0E01               	movlw	low _init_msg
   406  001036  2427               	addwf	main@i^0,w,c
   407  001038  6EF6               	movwf	tblptrl,c
   408  00103A  6AF7               	clrf	tblptrh,c
   409  00103C  0E10               	movlw	high _init_msg
   410  00103E  22F7               	addwfc	tblptrh,f,c
   411  001040                     	if	0	;There are less than 3 active tblptr bytes
   412  001040                     	endif
   413  001040  0008               	tblrd		*
   414  001042  50F5               	movf	tablat,w,c
   415  001044  EC15  F00B         	call	_LCD_write_data_byte_4bit
   416  001048                     
   417                           ;ece376_hw9_ccp_capt.c: 176:     }
   418  001048  2A27               	incf	main@i^0,f,c
   419  00104A  0E0C               	movlw	12
   420  00104C  6427               	cpfsgt	main@i^0,c
   421  00104E  EF2B  F008         	goto	u741
   422  001052  EF2D  F008         	goto	u740
   423  001056                     u741:
   424  001056  EF1A  F008         	goto	l1954
   425  00105A                     u740:
   426  00105A                     
   427                           ;ece376_hw9_ccp_capt.c: 178:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
   428  00105A  0E66               	movlw	102
   429  00105C  6E1C               	movwf	(??_main+1)^0,c
   430  00105E  0E76               	movlw	118
   431  001060  6E1B               	movwf	??_main^0,c
   432  001062  0EC1               	movlw	193
   433  001064                     u777:
   434  001064  2EE8               	decfsz	wreg,f,c
   435  001066  D7FE               	bra	u777
   436  001068  2E1B               	decfsz	??_main^0,f,c
   437  00106A  D7FC               	bra	u777
   438  00106C  2E1C               	decfsz	(??_main+1)^0,f,c
   439  00106E  D7FA               	bra	u777
   440  001070  F000               	nop	
   441  001072                     
   442                           ;ece376_hw9_ccp_capt.c: 179:     LCD_clear_display();
   443  001072  EC7E  F00B         	call	_LCD_clear_display	;wreg free
   444  001076                     
   445                           ;ece376_hw9_ccp_capt.c: 180:     LCD_set_cursor_position(1,1);
   446  001076  0E01               	movlw	1
   447  001078  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   448  00107A  0E01               	movlw	1
   449  00107C  EC41  F009         	call	_LCD_set_cursor_position
   450  001080                     
   451                           ;ece376_hw9_ccp_capt.c: 183:  Timer1_Init_Default();
   452  001080  ECAD  F00B         	call	_Timer1_Init_Default	;wreg free
   453  001084                     
   454                           ;ece376_hw9_ccp_capt.c: 184:     CCP1_Capture_Init_Default();
   455  001084  ECA9  F00B         	call	_CCP1_Capture_Init_Default	;wreg free
   456  001088                     l1970:
   457                           
   458                           ;ece376_hw9_ccp_capt.c: 190:   if(PORTBbits.RB0) {
   459  001088  A081               	btfss	129,0,c	;volatile
   460  00108A  EF49  F008         	goto	u751
   461  00108E  EF4B  F008         	goto	u750
   462  001092                     u751:
   463  001092  EF44  F008         	goto	l1970
   464  001096                     u750:
   465  001096                     
   466                           ;ece376_hw9_ccp_capt.c: 191:             elapsed_time = 0u;
   467  001096  0E00               	movlw	0
   468  001098  6E28               	movwf	_elapsed_time^0,c	;volatile
   469  00109A  0E00               	movlw	0
   470  00109C  6E29               	movwf	(_elapsed_time+1)^0,c	;volatile
   471  00109E  0E00               	movlw	0
   472  0010A0  6E2A               	movwf	(_elapsed_time+2)^0,c	;volatile
   473  0010A2  0E00               	movlw	0
   474  0010A4  6E2B               	movwf	(_elapsed_time+3)^0,c	;volatile
   475  0010A6                     
   476                           ;ece376_hw9_ccp_capt.c: 194:             Timer1_Enable();
   477  0010A6  ECB2  F00B         	call	_Timer1_Enable	;wreg free
   478  0010AA                     
   479                           ;ece376_hw9_ccp_capt.c: 195:             (INTCONbits.PEIE = 1u);
   480  0010AA  8CF2               	bsf	242,6,c	;volatile
   481  0010AC                     
   482                           ;ece376_hw9_ccp_capt.c: 196:             (INTCONbits.GIE = 1);
   483  0010AC  8EF2               	bsf	242,7,c	;volatile
   484  0010AE                     l1980:
   485  0010AE  502C               	movf	_game_done_flag^0,w,c	;volatile
   486  0010B0  B4D8               	btfsc	status,2,c
   487  0010B2  EF5D  F008         	goto	u761
   488  0010B6  EF5F  F008         	goto	u760
   489  0010BA                     u761:
   490  0010BA  EF57  F008         	goto	l1980
   491  0010BE                     u760:
   492  0010BE  C028  F00E         	movff	_elapsed_time,___lldiv@dividend	;volatile
   493  0010C2  C029  F00F         	movff	_elapsed_time+1,___lldiv@dividend+1	;volatile
   494  0010C6  C02A  F010         	movff	_elapsed_time+2,___lldiv@dividend+2	;volatile
   495  0010CA  C02B  F011         	movff	_elapsed_time+3,___lldiv@dividend+3	;volatile
   496  0010CE  0E80               	movlw	128
   497  0010D0  6E12               	movwf	___lldiv@divisor^0,c
   498  0010D2  0E96               	movlw	150
   499  0010D4  6E13               	movwf	(___lldiv@divisor+1)^0,c
   500  0010D6  0E98               	movlw	152
   501  0010D8  6E14               	movwf	(___lldiv@divisor+2)^0,c
   502  0010DA  0E00               	movlw	0
   503  0010DC  6E15               	movwf	(___lldiv@divisor+3)^0,c
   504  0010DE  EC0A  F00A         	call	___lldiv	;wreg free
   505  0010E2  0E80               	movlw	128
   506  0010E4  6E09               	movwf	___llmod@divisor^0,c
   507  0010E6  0E96               	movlw	150
   508  0010E8  6E0A               	movwf	(___llmod@divisor+1)^0,c
   509  0010EA  0E98               	movlw	152
   510  0010EC  6E0B               	movwf	(___llmod@divisor+2)^0,c
   511  0010EE  0E00               	movlw	0
   512  0010F0  6E0C               	movwf	(___llmod@divisor+3)^0,c
   513  0010F2  C028  F005         	movff	_elapsed_time,___llmod@dividend	;volatile
   514  0010F6  C029  F006         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
   515  0010FA  C02A  F007         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
   516  0010FE  C02B  F008         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
   517  001102  EC5C  F00A         	call	___llmod	;wreg free
   518  001106  C005  F00E         	movff	?___llmod,___lldiv@dividend
   519  00110A  C006  F00F         	movff	?___llmod+1,___lldiv@dividend+1
   520  00110E  C007  F010         	movff	?___llmod+2,___lldiv@dividend+2
   521  001112  C008  F011         	movff	?___llmod+3,___lldiv@dividend+3
   522  001116  0E10               	movlw	16
   523  001118  6E12               	movwf	___lldiv@divisor^0,c
   524  00111A  0E27               	movlw	39
   525  00111C  6E13               	movwf	(___lldiv@divisor+1)^0,c
   526  00111E  0E00               	movlw	0
   527  001120  6E14               	movwf	(___lldiv@divisor+2)^0,c
   528  001122  0E00               	movlw	0
   529  001124  6E15               	movwf	(___lldiv@divisor+3)^0,c
   530  001126  EC0A  F00A         	call	___lldiv	;wreg free
   531                           
   532                           ;ece376_hw9_ccp_capt.c: 211:             uint16_t num_of_us = (uint16_t) ((elapsed_time 
      +                          % 10000000u) % 10000u) / 10u;
   533  00112A  0E80               	movlw	128
   534  00112C  6E09               	movwf	___llmod@divisor^0,c
   535  00112E  0E96               	movlw	150
   536  001130  6E0A               	movwf	(___llmod@divisor+1)^0,c
   537  001132  0E98               	movlw	152
   538  001134  6E0B               	movwf	(___llmod@divisor+2)^0,c
   539  001136  0E00               	movlw	0
   540  001138  6E0C               	movwf	(___llmod@divisor+3)^0,c
   541  00113A  C028  F005         	movff	_elapsed_time,___llmod@dividend	;volatile
   542  00113E  C029  F006         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
   543  001142  C02A  F007         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
   544  001146  C02B  F008         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
   545  00114A  EC5C  F00A         	call	___llmod	;wreg free
   546  00114E  C005  F023         	movff	?___llmod,_main$1188
   547  001152  C006  F024         	movff	?___llmod+1,_main$1188+1
   548  001156  C007  F025         	movff	?___llmod+2,_main$1188+2
   549  00115A  C008  F026         	movff	?___llmod+3,_main$1188+3
   550  00115E  0E10               	movlw	16
   551  001160  6E09               	movwf	___llmod@divisor^0,c
   552  001162  0E27               	movlw	39
   553  001164  6E0A               	movwf	(___llmod@divisor+1)^0,c
   554  001166  0E00               	movlw	0
   555  001168  6E0B               	movwf	(___llmod@divisor+2)^0,c
   556  00116A  0E00               	movlw	0
   557  00116C  6E0C               	movwf	(___llmod@divisor+3)^0,c
   558  00116E  C023  F005         	movff	_main$1188,___llmod@dividend
   559  001172  C024  F006         	movff	_main$1188+1,___llmod@dividend+1
   560  001176  C025  F007         	movff	_main$1188+2,___llmod@dividend+2
   561  00117A  C026  F008         	movff	_main$1188+3,___llmod@dividend+3
   562  00117E  EC5C  F00A         	call	___llmod	;wreg free
   563  001182  C005  F00E         	movff	?___llmod,___lwdiv@dividend
   564  001186  C006  F00F         	movff	?___llmod+1,___lwdiv@dividend+1
   565  00118A  0E00               	movlw	0
   566  00118C  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   567  00118E  0E0A               	movlw	10
   568  001190  6E10               	movwf	___lwdiv@divisor^0,c
   569  001192  ECDB  F00A         	call	___lwdiv	;wreg free
   570  001196  EF44  F008         	goto	l1970
   571  00119A  EF07  F004         	goto	start
   572  00119E                     __end_of_main:
   573                           	callstack 0
   574                           
   575 ;; *************** function ___lwdiv *****************
   576 ;; Defined at:
   577 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  dividend        2   13[COMRAM] unsigned int 
   580 ;;  divisor         2   15[COMRAM] unsigned int 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  quotient        2   17[COMRAM] unsigned int 
   583 ;;  counter         1   19[COMRAM] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  2   13[COMRAM] unsigned int 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;Total ram usage:        7 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text1
   608  0015B6                     __ptext1:
   609                           	callstack 0
   610  0015B6                     ___lwdiv:
   611                           	callstack 29
   612  0015B6  0E00               	movlw	0
   613  0015B8  6E13               	movwf	(___lwdiv@quotient+1)^0,c
   614  0015BA  0E00               	movlw	0
   615  0015BC  6E12               	movwf	___lwdiv@quotient^0,c
   616  0015BE  5010               	movf	___lwdiv@divisor^0,w,c
   617  0015C0  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
   618  0015C2  B4D8               	btfsc	status,2,c
   619  0015C4  EFE6  F00A         	goto	u571
   620  0015C8  EFE8  F00A         	goto	u570
   621  0015CC                     u571:
   622  0015CC  EF10  F00B         	goto	l726
   623  0015D0                     u570:
   624  0015D0  0E01               	movlw	1
   625  0015D2  6E14               	movwf	___lwdiv@counter^0,c
   626  0015D4  EFF0  F00A         	goto	l1696
   627  0015D8                     l1694:
   628  0015D8  90D8               	bcf	status,0,c
   629  0015DA  3610               	rlcf	___lwdiv@divisor^0,f,c
   630  0015DC  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
   631  0015DE  2A14               	incf	___lwdiv@counter^0,f,c
   632  0015E0                     l1696:
   633  0015E0  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
   634  0015E2  EFF5  F00A         	goto	u581
   635  0015E6  EFF7  F00A         	goto	u580
   636  0015EA                     u581:
   637  0015EA  EFEC  F00A         	goto	l1694
   638  0015EE                     u580:
   639  0015EE                     l1698:
   640  0015EE  90D8               	bcf	status,0,c
   641  0015F0  3612               	rlcf	___lwdiv@quotient^0,f,c
   642  0015F2  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
   643  0015F4  5010               	movf	___lwdiv@divisor^0,w,c
   644  0015F6  5C0E               	subwf	___lwdiv@dividend^0,w,c
   645  0015F8  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   646  0015FA  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
   647  0015FC  A0D8               	btfss	status,0,c
   648  0015FE  EF03  F00B         	goto	u591
   649  001602  EF05  F00B         	goto	u590
   650  001606                     u591:
   651  001606  EF0A  F00B         	goto	l1706
   652  00160A                     u590:
   653  00160A  5010               	movf	___lwdiv@divisor^0,w,c
   654  00160C  5E0E               	subwf	___lwdiv@dividend^0,f,c
   655  00160E  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   656  001610  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
   657  001612  8012               	bsf	___lwdiv@quotient^0,0,c
   658  001614                     l1706:
   659  001614  90D8               	bcf	status,0,c
   660  001616  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
   661  001618  3210               	rrcf	___lwdiv@divisor^0,f,c
   662  00161A  2E14               	decfsz	___lwdiv@counter^0,f,c
   663  00161C  EFF7  F00A         	goto	l1698
   664  001620                     l726:
   665  001620  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
   666  001624  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
   667  001628  0012               	return		;funcret
   668  00162A                     __end_of___lwdiv:
   669                           	callstack 0
   670                           
   671 ;; *************** function ___llmod *****************
   672 ;; Defined at:
   673 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\llmod.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  dividend        4    4[COMRAM] unsigned long 
   676 ;;  divisor         4    8[COMRAM] unsigned long 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  counter         1   12[COMRAM] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  4    4[COMRAM] unsigned long 
   681 ;; Registers used:
   682 ;;		wreg, status,2, status,0
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;Total ram usage:        9 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text2
   703  0014B8                     __ptext2:
   704                           	callstack 0
   705  0014B8                     ___llmod:
   706                           	callstack 29
   707  0014B8  5009               	movf	___llmod@divisor^0,w,c
   708  0014BA  100A               	iorwf	(___llmod@divisor+1)^0,w,c
   709  0014BC  100B               	iorwf	(___llmod@divisor+2)^0,w,c
   710  0014BE  100C               	iorwf	(___llmod@divisor+3)^0,w,c
   711  0014C0  B4D8               	btfsc	status,2,c
   712  0014C2  EF65  F00A         	goto	u541
   713  0014C6  EF67  F00A         	goto	u540
   714  0014CA                     u541:
   715  0014CA  EF97  F00A         	goto	l655
   716  0014CE                     u540:
   717  0014CE  0E01               	movlw	1
   718  0014D0  6E0D               	movwf	___llmod@counter^0,c
   719  0014D2  EF71  F00A         	goto	l1678
   720  0014D6                     l1676:
   721  0014D6  90D8               	bcf	status,0,c
   722  0014D8  3609               	rlcf	___llmod@divisor^0,f,c
   723  0014DA  360A               	rlcf	(___llmod@divisor+1)^0,f,c
   724  0014DC  360B               	rlcf	(___llmod@divisor+2)^0,f,c
   725  0014DE  360C               	rlcf	(___llmod@divisor+3)^0,f,c
   726  0014E0  2A0D               	incf	___llmod@counter^0,f,c
   727  0014E2                     l1678:
   728  0014E2  AE0C               	btfss	(___llmod@divisor+3)^0,7,c
   729  0014E4  EF76  F00A         	goto	u551
   730  0014E8  EF78  F00A         	goto	u550
   731  0014EC                     u551:
   732  0014EC  EF6B  F00A         	goto	l1676
   733  0014F0                     u550:
   734  0014F0                     l1680:
   735  0014F0  5009               	movf	___llmod@divisor^0,w,c
   736  0014F2  5C05               	subwf	___llmod@dividend^0,w,c
   737  0014F4  500A               	movf	(___llmod@divisor+1)^0,w,c
   738  0014F6  5806               	subwfb	(___llmod@dividend+1)^0,w,c
   739  0014F8  500B               	movf	(___llmod@divisor+2)^0,w,c
   740  0014FA  5807               	subwfb	(___llmod@dividend+2)^0,w,c
   741  0014FC  500C               	movf	(___llmod@divisor+3)^0,w,c
   742  0014FE  5808               	subwfb	(___llmod@dividend+3)^0,w,c
   743  001500  A0D8               	btfss	status,0,c
   744  001502  EF85  F00A         	goto	u561
   745  001506  EF87  F00A         	goto	u560
   746  00150A                     u561:
   747  00150A  EF8F  F00A         	goto	l1684
   748  00150E                     u560:
   749  00150E  5009               	movf	___llmod@divisor^0,w,c
   750  001510  5E05               	subwf	___llmod@dividend^0,f,c
   751  001512  500A               	movf	(___llmod@divisor+1)^0,w,c
   752  001514  5A06               	subwfb	(___llmod@dividend+1)^0,f,c
   753  001516  500B               	movf	(___llmod@divisor+2)^0,w,c
   754  001518  5A07               	subwfb	(___llmod@dividend+2)^0,f,c
   755  00151A  500C               	movf	(___llmod@divisor+3)^0,w,c
   756  00151C  5A08               	subwfb	(___llmod@dividend+3)^0,f,c
   757  00151E                     l1684:
   758  00151E  90D8               	bcf	status,0,c
   759  001520  320C               	rrcf	(___llmod@divisor+3)^0,f,c
   760  001522  320B               	rrcf	(___llmod@divisor+2)^0,f,c
   761  001524  320A               	rrcf	(___llmod@divisor+1)^0,f,c
   762  001526  3209               	rrcf	___llmod@divisor^0,f,c
   763  001528  2E0D               	decfsz	___llmod@counter^0,f,c
   764  00152A  EF78  F00A         	goto	l1680
   765  00152E                     l655:
   766  00152E  C005  F005         	movff	___llmod@dividend,?___llmod
   767  001532  C006  F006         	movff	___llmod@dividend+1,?___llmod+1
   768  001536  C007  F007         	movff	___llmod@dividend+2,?___llmod+2
   769  00153A  C008  F008         	movff	___llmod@dividend+3,?___llmod+3
   770  00153E  0012               	return		;funcret
   771  001540                     __end_of___llmod:
   772                           	callstack 0
   773                           
   774 ;; *************** function ___lldiv *****************
   775 ;; Defined at:
   776 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  dividend        4   13[COMRAM] unsigned long 
   779 ;;  divisor         4   17[COMRAM] unsigned long 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  quotient        4   21[COMRAM] unsigned long 
   782 ;;  counter         1   25[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  4   13[COMRAM] unsigned long 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:       13 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text3
   807  001414                     __ptext3:
   808                           	callstack 0
   809  001414                     ___lldiv:
   810                           	callstack 29
   811  001414  0E00               	movlw	0
   812  001416  6E16               	movwf	___lldiv@quotient^0,c
   813  001418  0E00               	movlw	0
   814  00141A  6E17               	movwf	(___lldiv@quotient+1)^0,c
   815  00141C  0E00               	movlw	0
   816  00141E  6E18               	movwf	(___lldiv@quotient+2)^0,c
   817  001420  0E00               	movlw	0
   818  001422  6E19               	movwf	(___lldiv@quotient+3)^0,c
   819  001424  5012               	movf	___lldiv@divisor^0,w,c
   820  001426  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
   821  001428  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
   822  00142A  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
   823  00142C  B4D8               	btfsc	status,2,c
   824  00142E  EF1B  F00A         	goto	u511
   825  001432  EF1D  F00A         	goto	u510
   826  001436                     u511:
   827  001436  EF53  F00A         	goto	l262
   828  00143A                     u510:
   829  00143A  0E01               	movlw	1
   830  00143C  6E1A               	movwf	___lldiv@counter^0,c
   831  00143E  EF27  F00A         	goto	l1658
   832  001442                     l1656:
   833  001442  90D8               	bcf	status,0,c
   834  001444  3612               	rlcf	___lldiv@divisor^0,f,c
   835  001446  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
   836  001448  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
   837  00144A  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
   838  00144C  2A1A               	incf	___lldiv@counter^0,f,c
   839  00144E                     l1658:
   840  00144E  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
   841  001450  EF2C  F00A         	goto	u521
   842  001454  EF2E  F00A         	goto	u520
   843  001458                     u521:
   844  001458  EF21  F00A         	goto	l1656
   845  00145C                     u520:
   846  00145C                     l1660:
   847  00145C  90D8               	bcf	status,0,c
   848  00145E  3616               	rlcf	___lldiv@quotient^0,f,c
   849  001460  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
   850  001462  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
   851  001464  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
   852  001466  5012               	movf	___lldiv@divisor^0,w,c
   853  001468  5C0E               	subwf	___lldiv@dividend^0,w,c
   854  00146A  5013               	movf	(___lldiv@divisor+1)^0,w,c
   855  00146C  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
   856  00146E  5014               	movf	(___lldiv@divisor+2)^0,w,c
   857  001470  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
   858  001472  5015               	movf	(___lldiv@divisor+3)^0,w,c
   859  001474  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
   860  001476  A0D8               	btfss	status,0,c
   861  001478  EF40  F00A         	goto	u531
   862  00147C  EF42  F00A         	goto	u530
   863  001480                     u531:
   864  001480  EF4B  F00A         	goto	l1668
   865  001484                     u530:
   866  001484  5012               	movf	___lldiv@divisor^0,w,c
   867  001486  5E0E               	subwf	___lldiv@dividend^0,f,c
   868  001488  5013               	movf	(___lldiv@divisor+1)^0,w,c
   869  00148A  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
   870  00148C  5014               	movf	(___lldiv@divisor+2)^0,w,c
   871  00148E  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
   872  001490  5015               	movf	(___lldiv@divisor+3)^0,w,c
   873  001492  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
   874  001494  8016               	bsf	___lldiv@quotient^0,0,c
   875  001496                     l1668:
   876  001496  90D8               	bcf	status,0,c
   877  001498  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
   878  00149A  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
   879  00149C  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
   880  00149E  3212               	rrcf	___lldiv@divisor^0,f,c
   881  0014A0  2E1A               	decfsz	___lldiv@counter^0,f,c
   882  0014A2  EF2E  F00A         	goto	l1660
   883  0014A6                     l262:
   884  0014A6  C016  F00E         	movff	___lldiv@quotient,?___lldiv
   885  0014AA  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
   886  0014AE  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
   887  0014B2  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
   888  0014B6  0012               	return		;funcret
   889  0014B8                     __end_of___lldiv:
   890                           	callstack 0
   891                           
   892 ;; *************** function _Timer1_Init_Default *****************
   893 ;; Defined at:
   894 ;;		line 31 in file "src/timer.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text4
   923  00175A                     __ptext4:
   924                           	callstack 0
   925  00175A                     _Timer1_Init_Default:
   926                           	callstack 29
   927  00175A                     
   928                           ;src/timer.c: 32:     T1CON = 0x80;
   929  00175A  0E80               	movlw	128
   930  00175C  6ECD               	movwf	205,c	;volatile
   931  00175E  0012               	return		;funcret
   932  001760                     __end_of_Timer1_Init_Default:
   933                           	callstack 0
   934                           
   935 ;; *************** function _Timer1_Enable *****************
   936 ;; Defined at:
   937 ;;		line 43 in file "src/timer.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text5
   966  001764                     __ptext5:
   967                           	callstack 0
   968  001764                     _Timer1_Enable:
   969                           	callstack 29
   970  001764                     
   971                           ;src/timer.c: 44:     T1CON |= 0x01;
   972  001764  80CD               	bsf	205,0,c	;volatile
   973  001766  0012               	return		;funcret
   974  001768                     __end_of_Timer1_Enable:
   975                           	callstack 0
   976                           
   977 ;; *************** function _LCD_write_data_byte_4bit *****************
   978 ;; Defined at:
   979 ;;		line 126 in file "src/lcd_driver.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  data            1    wreg     unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  data            1    7[COMRAM] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;Total ram usage:        2 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    2
  1000 ;; This function calls:
  1001 ;;		_LCD_enable_toggle
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;;		_LCD_write_characters
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text6
  1009  00162A                     __ptext6:
  1010                           	callstack 0
  1011  00162A                     _LCD_write_data_byte_4bit:
  1012                           	callstack 28
  1013                           
  1014                           ;incstack = 0
  1015                           ;LCD_write_data_byte_4bit@data stored from wreg
  1016  00162A  6E08               	movwf	LCD_write_data_byte_4bit@data^0,c
  1017  00162C                     
  1018                           ;src/lcd_driver.c: 128:     (TRISC &= 0xF8);
  1019  00162C  0EF8               	movlw	248
  1020  00162E  1694               	andwf	148,f,c	;volatile
  1021                           
  1022                           ;src/lcd_driver.c: 129:     (TRISD &= 0x0Fu);
  1023  001630  0E0F               	movlw	15
  1024  001632  1695               	andwf	149,f,c	;volatile
  1025  001634                     
  1026                           ;src/lcd_driver.c: 130:     (LATCbits.LATC0 = 1u);
  1027  001634  808B               	bsf	139,0,c	;volatile
  1028  001636                     
  1029                           ;src/lcd_driver.c: 131:     (LATCbits.LATC1 = 0u);
  1030  001636  928B               	bcf	139,1,c	;volatile
  1031                           
  1032                           ;src/lcd_driver.c: 134:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
  1033  001638  C008  F007         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  1034  00163C  0EF0               	movlw	240
  1035  00163E  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  1036  001640  5083               	movf	131,w,c	;volatile
  1037  001642  0B0F               	andlw	15
  1038  001644  1007               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  1039  001646  6E83               	movwf	131,c	;volatile
  1040  001648                     
  1041                           ;src/lcd_driver.c: 135:     LCD_enable_toggle();
  1042  001648  ECA6  F009         	call	_LCD_enable_toggle	;wreg free
  1043  00164C                     
  1044                           ;src/lcd_driver.c: 136:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
  1045  00164C  C008  F007         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  1046  001650  3A07               	swapf	??_LCD_write_data_byte_4bit^0,f,c
  1047  001652  0EF0               	movlw	240
  1048  001654  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  1049  001656  0EF0               	movlw	240
  1050  001658  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  1051  00165A  5083               	movf	131,w,c	;volatile
  1052  00165C  0B0F               	andlw	15
  1053  00165E  1007               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  1054  001660  6E83               	movwf	131,c	;volatile
  1055                           
  1056                           ;src/lcd_driver.c: 137:     LCD_enable_toggle();
  1057  001662  ECA6  F009         	call	_LCD_enable_toggle	;wreg free
  1058  001666                     
  1059                           ;src/lcd_driver.c: 139:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1060  001666  0E82               	movlw	130
  1061  001668  6E07               	movwf	??_LCD_write_data_byte_4bit^0,c
  1062  00166A  0EDE               	movlw	222
  1063  00166C                     u787:
  1064  00166C  2EE8               	decfsz	wreg,f,c
  1065  00166E  D7FE               	bra	u787
  1066  001670  2E07               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
  1067  001672  D7FC               	bra	u787
  1068  001674  0012               	return		;funcret
  1069  001676                     __end_of_LCD_write_data_byte_4bit:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _LCD_set_cursor_position *****************
  1073 ;; Defined at:
  1074 ;;		line 500 in file "src/lcd_driver.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  line            1    wreg     unsigned char 
  1077 ;;  pos_on_line     1    8[COMRAM] unsigned char 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  line            1   10[COMRAM] unsigned char 
  1080 ;;  ddram_addr      1    9[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      unsigned char 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:        3 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    3
  1097 ;; This function calls:
  1098 ;;		_LCD_write_instr_byte_4bit
  1099 ;;		_LCD_write_instr_byte_8bit
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text7
  1106  001282                     __ptext7:
  1107                           	callstack 0
  1108  001282                     _LCD_set_cursor_position:
  1109                           	callstack 27
  1110                           
  1111                           ;incstack = 0
  1112                           ;LCD_set_cursor_position@line stored from wreg
  1113  001282  6E0B               	movwf	LCD_set_cursor_position@line^0,c
  1114  001284                     
  1115                           ;src/lcd_driver.c: 502:     if(line > 2u || pos_on_line > 2u * 16u){
  1116  001284  0E03               	movlw	3
  1117  001286  600B               	cpfslt	LCD_set_cursor_position@line^0,c
  1118  001288  EF48  F009         	goto	u421
  1119  00128C  EF4A  F009         	goto	u420
  1120  001290                     u421:
  1121  001290  EFA5  F009         	goto	l121
  1122  001294                     u420:
  1123  001294  0E20               	movlw	32
  1124  001296  6409               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  1125  001298  EF50  F009         	goto	u431
  1126  00129C  EF52  F009         	goto	u430
  1127  0012A0                     u431:
  1128  0012A0  EF54  F009         	goto	l1618
  1129  0012A4                     u430:
  1130  0012A4  EFA5  F009         	goto	l121
  1131  0012A8                     l1618:
  1132                           
  1133                           ;src/lcd_driver.c: 511:         if(line == 1u && pos_on_line < 16u){
  1134  0012A8  040B               	decf	LCD_set_cursor_position@line^0,w,c
  1135  0012AA  A4D8               	btfss	status,2,c
  1136  0012AC  EF5A  F009         	goto	u441
  1137  0012B0  EF5C  F009         	goto	u440
  1138  0012B4                     u441:
  1139  0012B4  EF68  F009         	goto	l1624
  1140  0012B8                     u440:
  1141  0012B8  0E10               	movlw	16
  1142  0012BA  6009               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  1143  0012BC  EF62  F009         	goto	u451
  1144  0012C0  EF64  F009         	goto	u450
  1145  0012C4                     u451:
  1146  0012C4  EF68  F009         	goto	l1624
  1147  0012C8                     u450:
  1148  0012C8                     
  1149                           ;src/lcd_driver.c: 512:             ddram_addr = 0x00u + pos_on_line - 1;
  1150  0012C8  0409               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
  1151  0012CA  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  1152                           
  1153                           ;src/lcd_driver.c: 514:         } else if(line == 2u && pos_on_line < 16u){
  1154  0012CC  EF91  F009         	goto	l1636
  1155  0012D0                     l1624:
  1156  0012D0  0E02               	movlw	2
  1157  0012D2  180B               	xorwf	LCD_set_cursor_position@line^0,w,c
  1158  0012D4  A4D8               	btfss	status,2,c
  1159  0012D6  EF6F  F009         	goto	u461
  1160  0012DA  EF71  F009         	goto	u460
  1161  0012DE                     u461:
  1162  0012DE  EF7E  F009         	goto	l1630
  1163  0012E2                     u460:
  1164  0012E2  0E10               	movlw	16
  1165  0012E4  6009               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  1166  0012E6  EF77  F009         	goto	u471
  1167  0012EA  EF79  F009         	goto	u470
  1168  0012EE                     u471:
  1169  0012EE  EF7E  F009         	goto	l1630
  1170  0012F2                     u470:
  1171  0012F2                     
  1172                           ;src/lcd_driver.c: 515:             ddram_addr = 0x40u + pos_on_line - 1;
  1173  0012F2  5009               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  1174  0012F4  0F3F               	addlw	63
  1175  0012F6  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  1176                           
  1177                           ;src/lcd_driver.c: 517:         } else if(line == 1u && pos_on_line > 16u){
  1178  0012F8  EF91  F009         	goto	l1636
  1179  0012FC                     l1630:
  1180  0012FC  040B               	decf	LCD_set_cursor_position@line^0,w,c
  1181  0012FE  A4D8               	btfss	status,2,c
  1182  001300  EF84  F009         	goto	u481
  1183  001304  EF86  F009         	goto	u480
  1184  001308                     u481:
  1185  001308  EFA5  F009         	goto	l121
  1186  00130C                     u480:
  1187  00130C  0E10               	movlw	16
  1188  00130E  6409               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  1189  001310  EF8C  F009         	goto	u491
  1190  001314  EF8E  F009         	goto	u490
  1191  001318                     u491:
  1192  001318  EFA5  F009         	goto	l121
  1193  00131C                     u490:
  1194  00131C                     
  1195                           ;src/lcd_driver.c: 518:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
  1196  00131C  5009               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  1197  00131E  0F2F               	addlw	47
  1198  001320  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  1199  001322                     l1636:
  1200                           
  1201                           ;src/lcd_driver.c: 525:     if(DISP_BIT_MODE == MODE_4BIT){
  1202  001322  5030               	movf	_DISP_BIT_MODE^0,w,c
  1203  001324  A4D8               	btfss	status,2,c
  1204  001326  EF97  F009         	goto	u501
  1205  00132A  EF99  F009         	goto	u500
  1206  00132E                     u501:
  1207  00132E  EF9F  F009         	goto	l1640
  1208  001332                     u500:
  1209  001332                     
  1210                           ;src/lcd_driver.c: 526:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
  1211  001332  500A               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  1212  001334  0980               	iorlw	128
  1213  001336  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1214                           
  1215                           ;src/lcd_driver.c: 527:     } else{
  1216  00133A  EFA3  F009         	goto	l1642
  1217  00133E                     l1640:
  1218                           
  1219                           ;src/lcd_driver.c: 528:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
  1220  00133E  500A               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  1221  001340  0980               	iorlw	128
  1222  001342  EC96  F00B         	call	_LCD_write_instr_byte_8bit
  1223  001346                     l1642:
  1224                           
  1225                           ;src/lcd_driver.c: 531:     address_counter = ddram_addr;
  1226  001346  C00A  F02D         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
  1227  00134A                     l121:
  1228  00134A  0012               	return		;funcret
  1229  00134C                     __end_of_LCD_set_cursor_position:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _LCD_clear_display *****************
  1233 ;; Defined at:
  1234 ;;		line 427 in file "src/lcd_driver.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      unsigned char 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    3
  1255 ;; This function calls:
  1256 ;;		_LCD_write_instr_byte_4bit
  1257 ;;		_LCD_write_instr_byte_8bit
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;;		_LCD_Init_amazonLCD
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text8
  1265  0016FC                     __ptext8:
  1266                           	callstack 0
  1267  0016FC                     _LCD_clear_display:
  1268                           	callstack 27
  1269  0016FC                     
  1270                           ;src/lcd_driver.c: 428:     if(DISP_BIT_MODE == MODE_4BIT){
  1271  0016FC  5030               	movf	_DISP_BIT_MODE^0,w,c
  1272  0016FE  A4D8               	btfss	status,2,c
  1273  001700  EF84  F00B         	goto	u411
  1274  001704  EF86  F00B         	goto	u410
  1275  001708                     u411:
  1276  001708  EF8B  F00B         	goto	l1608
  1277  00170C                     u410:
  1278  00170C                     
  1279                           ;src/lcd_driver.c: 429:         LCD_write_instr_byte_4bit(0x01u);
  1280  00170C  0E01               	movlw	1
  1281  00170E  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1282                           
  1283                           ;src/lcd_driver.c: 430:     } else{
  1284  001712  EF8E  F00B         	goto	l1610
  1285  001716                     l1608:
  1286                           
  1287                           ;src/lcd_driver.c: 431:         LCD_write_instr_byte_8bit(0x01u);
  1288  001716  0E01               	movlw	1
  1289  001718  EC96  F00B         	call	_LCD_write_instr_byte_8bit
  1290  00171C                     l1610:
  1291                           
  1292                           ;src/lcd_driver.c: 434:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1293  00171C  0E82               	movlw	130
  1294  00171E  6E09               	movwf	??_LCD_clear_display^0,c
  1295  001720  0EDE               	movlw	222
  1296  001722                     u797:
  1297  001722  2EE8               	decfsz	wreg,f,c
  1298  001724  D7FE               	bra	u797
  1299  001726  2E09               	decfsz	??_LCD_clear_display^0,f,c
  1300  001728  D7FC               	bra	u797
  1301  00172A  0012               	return		;funcret
  1302  00172C                     __end_of_LCD_clear_display:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _LCD_write_instr_byte_8bit *****************
  1306 ;; Defined at:
  1307 ;;		line 200 in file "src/lcd_driver.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  instr           1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  instr           1    7[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    2
  1328 ;; This function calls:
  1329 ;;		_LCD_enable_toggle
  1330 ;; This function is called by:
  1331 ;;		_LCD_clear_display
  1332 ;;		_LCD_set_cursor_position
  1333 ;;		_LCD_Init_amazonLCD
  1334 ;;		_LCD_return_home
  1335 ;;		_LCD_write_characters
  1336 ;;		_LCD_turn_off_cursor
  1337 ;;		_LCD_turn_on_cursor
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text9
  1342  00172C                     __ptext9:
  1343                           	callstack 0
  1344  00172C                     _LCD_write_instr_byte_8bit:
  1345                           	callstack 27
  1346                           
  1347                           ;incstack = 0
  1348                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  1349  00172C  6E08               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  1350  00172E                     
  1351                           ;src/lcd_driver.c: 202:     (TRISC &= 0xF8);
  1352  00172E  0EF8               	movlw	248
  1353  001730  1694               	andwf	148,f,c	;volatile
  1354  001732                     
  1355                           ;src/lcd_driver.c: 203:     (TRISD = 0x00u);
  1356  001732  0E00               	movlw	0
  1357  001734  6E95               	movwf	149,c	;volatile
  1358  001736                     
  1359                           ;src/lcd_driver.c: 204:     (LATCbits.LATC0 = 0u);
  1360  001736  908B               	bcf	139,0,c	;volatile
  1361  001738                     
  1362                           ;src/lcd_driver.c: 205:     (LATCbits.LATC1 = 0u);
  1363  001738  928B               	bcf	139,1,c	;volatile
  1364  00173A                     
  1365                           ;src/lcd_driver.c: 208:     PORTD = instr;
  1366  00173A  C008  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  1367  00173E                     
  1368                           ;src/lcd_driver.c: 209:     LCD_enable_toggle();
  1369  00173E  ECA6  F009         	call	_LCD_enable_toggle	;wreg free
  1370  001742                     
  1371                           ;src/lcd_driver.c: 211:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1372  001742  0E82               	movlw	130
  1373  001744  6E07               	movwf	??_LCD_write_instr_byte_8bit^0,c
  1374  001746  0EDE               	movlw	222
  1375  001748                     u807:
  1376  001748  2EE8               	decfsz	wreg,f,c
  1377  00174A  D7FE               	bra	u807
  1378  00174C  2E07               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  1379  00174E  D7FC               	bra	u807
  1380  001750  0012               	return		;funcret
  1381  001752                     __end_of_LCD_write_instr_byte_8bit:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _LCD_Init_ECE376 *****************
  1385 ;; Defined at:
  1386 ;;		line 224 in file "src/lcd_driver.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        2 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    3
  1407 ;; This function calls:
  1408 ;;		_LCD_write_instr_byte_4bit
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text10
  1415  00119E                     __ptext10:
  1416                           	callstack 0
  1417  00119E                     _LCD_Init_ECE376:
  1418                           	callstack 27
  1419  00119E                     
  1420                           ;src/lcd_driver.c: 227:     PORTC = 0x00; PORTD = 0x00;
  1421  00119E  0E00               	movlw	0
  1422  0011A0  6E82               	movwf	130,c	;volatile
  1423  0011A2  0E00               	movlw	0
  1424  0011A4  6E83               	movwf	131,c	;volatile
  1425  0011A6                     
  1426                           ;src/lcd_driver.c: 229:     (TRISC &= 0xF8);
  1427  0011A6  0EF8               	movlw	248
  1428  0011A8  1694               	andwf	148,f,c	;volatile
  1429  0011AA                     
  1430                           ;src/lcd_driver.c: 230:     (TRISD |= 0xF0u);
  1431  0011AA  0EF0               	movlw	240
  1432  0011AC  1295               	iorwf	149,f,c	;volatile
  1433  0011AE                     
  1434                           ;src/lcd_driver.c: 234:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  1435  0011AE  0ECB               	movlw	203
  1436  0011B0  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1437  0011B2  0EEC               	movlw	236
  1438  0011B4  6E09               	movwf	??_LCD_Init_ECE376^0,c
  1439  0011B6  0E84               	movlw	132
  1440  0011B8                     u817:
  1441  0011B8  2EE8               	decfsz	wreg,f,c
  1442  0011BA  D7FE               	bra	u817
  1443  0011BC  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  1444  0011BE  D7FC               	bra	u817
  1445  0011C0  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1446  0011C2  D7FA               	bra	u817
  1447  0011C4  D000               	nop2	
  1448  0011C6                     
  1449                           ;src/lcd_driver.c: 235:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  1450  0011C6  0ECB               	movlw	203
  1451  0011C8  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1452  0011CA  0EEC               	movlw	236
  1453  0011CC  6E09               	movwf	??_LCD_Init_ECE376^0,c
  1454  0011CE  0E84               	movlw	132
  1455  0011D0                     u827:
  1456  0011D0  2EE8               	decfsz	wreg,f,c
  1457  0011D2  D7FE               	bra	u827
  1458  0011D4  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  1459  0011D6  D7FC               	bra	u827
  1460  0011D8  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1461  0011DA  D7FA               	bra	u827
  1462  0011DC  D000               	nop2	
  1463  0011DE                     
  1464                           ;src/lcd_driver.c: 236:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  1465  0011DE  0E66               	movlw	102
  1466  0011E0  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1467  0011E2  0E76               	movlw	118
  1468  0011E4  6E09               	movwf	??_LCD_Init_ECE376^0,c
  1469  0011E6  0EC1               	movlw	193
  1470  0011E8                     u837:
  1471  0011E8  2EE8               	decfsz	wreg,f,c
  1472  0011EA  D7FE               	bra	u837
  1473  0011EC  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  1474  0011EE  D7FC               	bra	u837
  1475  0011F0  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1476  0011F2  D7FA               	bra	u837
  1477  0011F4  F000               	nop	
  1478  0011F6                     
  1479                           ;src/lcd_driver.c: 241:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  1480  0011F6  0E06               	movlw	6
  1481  0011F8  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1482  0011FA  0E13               	movlw	19
  1483  0011FC  6E09               	movwf	??_LCD_Init_ECE376^0,c
  1484  0011FE  0EAE               	movlw	174
  1485  001200                     u847:
  1486  001200  2EE8               	decfsz	wreg,f,c
  1487  001202  D7FE               	bra	u847
  1488  001204  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  1489  001206  D7FC               	bra	u847
  1490  001208  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1491  00120A  D7FA               	bra	u847
  1492  00120C                     
  1493                           ;src/lcd_driver.c: 242:     LCD_write_instr_byte_4bit(0x30u);
  1494  00120C  0E30               	movlw	48
  1495  00120E  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1496  001212                     
  1497                           ;src/lcd_driver.c: 243:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  1498  001212  0E41               	movlw	65
  1499  001214  6E09               	movwf	??_LCD_Init_ECE376^0,c
  1500  001216  0EEE               	movlw	238
  1501  001218                     u857:
  1502  001218  2EE8               	decfsz	wreg,f,c
  1503  00121A  D7FE               	bra	u857
  1504  00121C  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  1505  00121E  D7FC               	bra	u857
  1506  001220  D000               	nop2	
  1507  001222                     
  1508                           ;src/lcd_driver.c: 244:     LCD_write_instr_byte_4bit(0x30u);
  1509  001222  0E30               	movlw	48
  1510  001224  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1511  001228                     
  1512                           ;src/lcd_driver.c: 245:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  1513  001228  0ED6               	movlw	214
  1514  00122A                     u867:
  1515  00122A  D000               	nop2	
  1516  00122C  D000               	nop2	
  1517  00122E  2EE8               	decfsz	wreg,f,c
  1518  001230  D7FC               	bra	u867
  1519  001232  D000               	nop2	
  1520  001234                     
  1521                           ;src/lcd_driver.c: 246:     LCD_write_instr_byte_4bit(0x30u);
  1522  001234  0E30               	movlw	48
  1523  001236  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1524  00123A                     
  1525                           ;src/lcd_driver.c: 248:     LCD_write_instr_byte_4bit(0x28u);
  1526  00123A  0E28               	movlw	40
  1527  00123C  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1528  001240                     
  1529                           ;src/lcd_driver.c: 249:     LCD_write_instr_byte_4bit(0x0Eu);
  1530  001240  0E0E               	movlw	14
  1531  001242  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1532  001246                     
  1533                           ;src/lcd_driver.c: 250:     LCD_write_instr_byte_4bit(0x01u);
  1534  001246  0E01               	movlw	1
  1535  001248  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1536  00124C                     
  1537                           ;src/lcd_driver.c: 251:     LCD_write_instr_byte_4bit(0x06u);
  1538  00124C  0E06               	movlw	6
  1539  00124E  EC3B  F00B         	call	_LCD_write_instr_byte_4bit
  1540  001252                     
  1541                           ;src/lcd_driver.c: 253:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  1542  001252  0E06               	movlw	6
  1543  001254  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  1544  001256  0E13               	movlw	19
  1545  001258  6E09               	movwf	??_LCD_Init_ECE376^0,c
  1546  00125A  0EAE               	movlw	174
  1547  00125C                     u877:
  1548  00125C  2EE8               	decfsz	wreg,f,c
  1549  00125E  D7FE               	bra	u877
  1550  001260  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  1551  001262  D7FC               	bra	u877
  1552  001264  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  1553  001266  D7FA               	bra	u877
  1554  001268                     
  1555                           ;src/lcd_driver.c: 256:     CURRENT_DISP = QAPASS_EBAY;
  1556  001268  0E00               	movlw	0
  1557  00126A  6E31               	movwf	_CURRENT_DISP^0,c
  1558  00126C                     
  1559                           ;src/lcd_driver.c: 257:     DISP_BIT_MODE = MODE_4BIT;
  1560  00126C  0E00               	movlw	0
  1561  00126E  6E30               	movwf	_DISP_BIT_MODE^0,c
  1562  001270                     
  1563                           ;src/lcd_driver.c: 258:     init_complete = 0x01u;
  1564  001270  0E01               	movlw	1
  1565  001272  6E2F               	movwf	_init_complete^0,c
  1566  001274                     
  1567                           ;src/lcd_driver.c: 259:     current_entry_mode = 0x06u;
  1568  001274  0E06               	movlw	6
  1569  001276  6E37               	movwf	_current_entry_mode^0,c
  1570  001278                     
  1571                           ;src/lcd_driver.c: 260:     current_disp_ctrl = 0x0Eu;
  1572  001278  0E0E               	movlw	14
  1573  00127A  6E39               	movwf	_current_disp_ctrl^0,c
  1574  00127C                     
  1575                           ;src/lcd_driver.c: 261:     current_func_set = 0x28u;
  1576  00127C  0E28               	movlw	40
  1577  00127E  6E36               	movwf	_current_func_set^0,c
  1578  001280  0012               	return		;funcret
  1579  001282                     __end_of_LCD_Init_ECE376:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _LCD_write_instr_byte_4bit *****************
  1583 ;; Defined at:
  1584 ;;		line 175 in file "src/lcd_driver.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  instr           1    wreg     unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  instr           1    7[COMRAM] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;Total ram usage:        2 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    2
  1605 ;; This function calls:
  1606 ;;		_LCD_enable_toggle
  1607 ;; This function is called by:
  1608 ;;		_LCD_Init_ECE376
  1609 ;;		_LCD_clear_display
  1610 ;;		_LCD_set_cursor_position
  1611 ;;		_LCD_Init_amazonLCD
  1612 ;;		_LCD_return_home
  1613 ;;		_LCD_write_characters
  1614 ;;		_LCD_turn_off_cursor
  1615 ;;		_LCD_turn_on_cursor
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text11
  1620  001676                     __ptext11:
  1621                           	callstack 0
  1622  001676                     _LCD_write_instr_byte_4bit:
  1623                           	callstack 27
  1624                           
  1625                           ;incstack = 0
  1626                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  1627  001676  6E08               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  1628  001678                     
  1629                           ;src/lcd_driver.c: 177:     (TRISC &= 0xF8);
  1630  001678  0EF8               	movlw	248
  1631  00167A  1694               	andwf	148,f,c	;volatile
  1632                           
  1633                           ;src/lcd_driver.c: 178:     (TRISD &= 0x0Fu);
  1634  00167C  0E0F               	movlw	15
  1635  00167E  1695               	andwf	149,f,c	;volatile
  1636  001680                     
  1637                           ;src/lcd_driver.c: 179:     (LATCbits.LATC0 = 0u);
  1638  001680  908B               	bcf	139,0,c	;volatile
  1639  001682                     
  1640                           ;src/lcd_driver.c: 180:     (LATCbits.LATC1 = 0u);
  1641  001682  928B               	bcf	139,1,c	;volatile
  1642                           
  1643                           ;src/lcd_driver.c: 183:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  1644  001684  C008  F007         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  1645  001688  0EF0               	movlw	240
  1646  00168A  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1647  00168C  5083               	movf	131,w,c	;volatile
  1648  00168E  0B0F               	andlw	15
  1649  001690  1007               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  1650  001692  6E83               	movwf	131,c	;volatile
  1651  001694                     
  1652                           ;src/lcd_driver.c: 184:     LCD_enable_toggle();
  1653  001694  ECA6  F009         	call	_LCD_enable_toggle	;wreg free
  1654  001698                     
  1655                           ;src/lcd_driver.c: 185:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  1656  001698  C008  F007         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  1657  00169C  3A07               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  1658  00169E  0EF0               	movlw	240
  1659  0016A0  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1660  0016A2  0EF0               	movlw	240
  1661  0016A4  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  1662  0016A6  5083               	movf	131,w,c	;volatile
  1663  0016A8  0B0F               	andlw	15
  1664  0016AA  1007               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  1665  0016AC  6E83               	movwf	131,c	;volatile
  1666                           
  1667                           ;src/lcd_driver.c: 186:     LCD_enable_toggle();
  1668  0016AE  ECA6  F009         	call	_LCD_enable_toggle	;wreg free
  1669  0016B2                     
  1670                           ;src/lcd_driver.c: 188:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  1671  0016B2  0E82               	movlw	130
  1672  0016B4  6E07               	movwf	??_LCD_write_instr_byte_4bit^0,c
  1673  0016B6  0EDE               	movlw	222
  1674  0016B8                     u887:
  1675  0016B8  2EE8               	decfsz	wreg,f,c
  1676  0016BA  D7FE               	bra	u887
  1677  0016BC  2E07               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  1678  0016BE  D7FC               	bra	u887
  1679  0016C0  0012               	return		;funcret
  1680  0016C2                     __end_of_LCD_write_instr_byte_4bit:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _LCD_enable_toggle *****************
  1684 ;; Defined at:
  1685 ;;		line 45 in file "src/lcd_driver.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:        2 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_LCD_write_data_byte_4bit
  1710 ;;		_LCD_write_instr_byte_4bit
  1711 ;;		_LCD_write_instr_byte_8bit
  1712 ;;		_LCD_wait_for_BF
  1713 ;;		_LCD_write_data_byte_8bit
  1714 ;;		_LCD_Init
  1715 ;;		_LCD_read_current_address_counter
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text12
  1720  00134C                     __ptext12:
  1721                           	callstack 0
  1722  00134C                     _LCD_enable_toggle:
  1723                           	callstack 28
  1724  00134C                     
  1725                           ;src/lcd_driver.c: 46:     switch(CURRENT_DISP){
  1726  00134C  EFEC  F009         	goto	l1496
  1727  001350                     l62:
  1728                           
  1729                           ;src/lcd_driver.c: 49:             (LATCbits.LATC2 = 0u);
  1730  001350  948B               	bcf	139,2,c	;volatile
  1731  001352                     
  1732                           ;src/lcd_driver.c: 50:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1733  001352  0E06               	movlw	6
  1734  001354                     u897:
  1735  001354  2EE8               	decfsz	wreg,f,c
  1736  001356  D7FE               	bra	u897
  1737  001358  D000               	nop2	
  1738  00135A                     
  1739                           ;src/lcd_driver.c: 51:             (LATCbits.LATC2 = 1u);
  1740  00135A  848B               	bsf	139,2,c	;volatile
  1741                           
  1742                           ;src/lcd_driver.c: 52:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1743  00135C  0E06               	movlw	6
  1744  00135E                     u907:
  1745  00135E  2EE8               	decfsz	wreg,f,c
  1746  001360  D7FE               	bra	u907
  1747  001362  D000               	nop2	
  1748  001364                     
  1749                           ;src/lcd_driver.c: 53:             (LATCbits.LATC2 = 0u);
  1750  001364  948B               	bcf	139,2,c	;volatile
  1751                           
  1752                           ;src/lcd_driver.c: 54:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1753  001366  0E06               	movlw	6
  1754  001368                     u917:
  1755  001368  2EE8               	decfsz	wreg,f,c
  1756  00136A  D7FE               	bra	u917
  1757  00136C  D000               	nop2	
  1758                           
  1759                           ;src/lcd_driver.c: 55:             break;
  1760  00136E  EF09  F00A         	goto	l67
  1761  001372                     l64:
  1762                           
  1763                           ;src/lcd_driver.c: 58:             (LATCbits.LATC2 = 0u);
  1764  001372  948B               	bcf	139,2,c	;volatile
  1765  001374                     
  1766                           ;src/lcd_driver.c: 59:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  1767  001374  0E03               	movlw	3
  1768  001376                     u927:
  1769  001376  2EE8               	decfsz	wreg,f,c
  1770  001378  D7FE               	bra	u927
  1771  00137A  F000               	nop	
  1772  00137C                     
  1773                           ;src/lcd_driver.c: 60:             (LATCbits.LATC2 = 1u);
  1774  00137C  848B               	bsf	139,2,c	;volatile
  1775                           
  1776                           ;src/lcd_driver.c: 61:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  1777  00137E  0E03               	movlw	3
  1778  001380                     u937:
  1779  001380  2EE8               	decfsz	wreg,f,c
  1780  001382  D7FE               	bra	u937
  1781  001384  F000               	nop	
  1782  001386                     
  1783                           ;src/lcd_driver.c: 62:             (LATCbits.LATC2 = 0u);
  1784  001386  948B               	bcf	139,2,c	;volatile
  1785                           
  1786                           ;src/lcd_driver.c: 63:             _delay((unsigned long)((100u)*(40000000u/4000000.0)))
      +                          ;
  1787  001388  0EC8               	movlw	200
  1788  00138A                     u947:
  1789  00138A  D000               	nop2	
  1790  00138C  2EE8               	decfsz	wreg,f,c
  1791  00138E  D7FD               	bra	u947
  1792                           
  1793                           ;src/lcd_driver.c: 64:             break;
  1794  001390  EF09  F00A         	goto	l67
  1795  001394                     l65:
  1796                           
  1797                           ;src/lcd_driver.c: 67:             (LATCbits.LATC2 = 0u);
  1798  001394  948B               	bcf	139,2,c	;volatile
  1799  001396                     
  1800                           ;src/lcd_driver.c: 68:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1801  001396  0E06               	movlw	6
  1802  001398                     u957:
  1803  001398  2EE8               	decfsz	wreg,f,c
  1804  00139A  D7FE               	bra	u957
  1805  00139C  D000               	nop2	
  1806  00139E                     
  1807                           ;src/lcd_driver.c: 69:             (LATCbits.LATC2 = 1u);
  1808  00139E  848B               	bsf	139,2,c	;volatile
  1809                           
  1810                           ;src/lcd_driver.c: 70:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1811  0013A0  0E06               	movlw	6
  1812  0013A2                     u967:
  1813  0013A2  2EE8               	decfsz	wreg,f,c
  1814  0013A4  D7FE               	bra	u967
  1815  0013A6  D000               	nop2	
  1816  0013A8                     
  1817                           ;src/lcd_driver.c: 71:             (LATCbits.LATC2 = 0u);
  1818  0013A8  948B               	bcf	139,2,c	;volatile
  1819                           
  1820                           ;src/lcd_driver.c: 72:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1821  0013AA  0E06               	movlw	6
  1822  0013AC                     u977:
  1823  0013AC  2EE8               	decfsz	wreg,f,c
  1824  0013AE  D7FE               	bra	u977
  1825  0013B0  D000               	nop2	
  1826                           
  1827                           ;src/lcd_driver.c: 73:             break;
  1828  0013B2  EF09  F00A         	goto	l67
  1829  0013B6                     l66:
  1830                           
  1831                           ;src/lcd_driver.c: 76:             (LATCbits.LATC2 = 0u);
  1832  0013B6  948B               	bcf	139,2,c	;volatile
  1833  0013B8                     
  1834                           ;src/lcd_driver.c: 77:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1835  0013B8  0E06               	movlw	6
  1836  0013BA                     u987:
  1837  0013BA  2EE8               	decfsz	wreg,f,c
  1838  0013BC  D7FE               	bra	u987
  1839  0013BE  D000               	nop2	
  1840  0013C0                     
  1841                           ;src/lcd_driver.c: 78:             (LATCbits.LATC2 = 1u);
  1842  0013C0  848B               	bsf	139,2,c	;volatile
  1843                           
  1844                           ;src/lcd_driver.c: 79:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1845  0013C2  0E06               	movlw	6
  1846  0013C4                     u997:
  1847  0013C4  2EE8               	decfsz	wreg,f,c
  1848  0013C6  D7FE               	bra	u997
  1849  0013C8  D000               	nop2	
  1850  0013CA                     
  1851                           ;src/lcd_driver.c: 80:             (LATCbits.LATC2 = 0u);
  1852  0013CA  948B               	bcf	139,2,c	;volatile
  1853                           
  1854                           ;src/lcd_driver.c: 81:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  1855  0013CC  0E06               	movlw	6
  1856  0013CE                     u1007:
  1857  0013CE  2EE8               	decfsz	wreg,f,c
  1858  0013D0  D7FE               	bra	u1007
  1859  0013D2  D000               	nop2	
  1860                           
  1861                           ;src/lcd_driver.c: 82:             break;
  1862  0013D4  EF09  F00A         	goto	l67
  1863  0013D8                     l1496:
  1864  0013D8  5031               	movf	_CURRENT_DISP^0,w,c
  1865  0013DA  6E05               	movwf	??_LCD_enable_toggle^0,c
  1866  0013DC  6A06               	clrf	(??_LCD_enable_toggle+1)^0,c
  1867                           
  1868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1869                           ; Switch size 1, requested type "simple"
  1870                           ; Number of cases is 1, Range of values is 0 to 0
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte            4     3 (average)
  1874                           ;	Chosen strategy is simple_byte
  1875  0013DE  5006               	movf	(??_LCD_enable_toggle+1)^0,w,c
  1876  0013E0  0A00               	xorlw	0	; case 0
  1877  0013E2  B4D8               	btfsc	status,2,c
  1878  0013E4  EFF6  F009         	goto	l1988
  1879  0013E8  EF09  F00A         	goto	l67
  1880  0013EC                     l1988:
  1881                           
  1882                           ; Switch size 1, requested type "simple"
  1883                           ; Number of cases is 4, Range of values is 0 to 3
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte           13     7 (average)
  1887                           ;	Chosen strategy is simple_byte
  1888  0013EC  5005               	movf	??_LCD_enable_toggle^0,w,c
  1889  0013EE  0A00               	xorlw	0	; case 0
  1890  0013F0  B4D8               	btfsc	status,2,c
  1891  0013F2  EFA8  F009         	goto	l62
  1892  0013F6  0A01               	xorlw	1	; case 1
  1893  0013F8  B4D8               	btfsc	status,2,c
  1894  0013FA  EFB9  F009         	goto	l64
  1895  0013FE  0A03               	xorlw	3	; case 2
  1896  001400  B4D8               	btfsc	status,2,c
  1897  001402  EFCA  F009         	goto	l65
  1898  001406  0A01               	xorlw	1	; case 3
  1899  001408  B4D8               	btfsc	status,2,c
  1900  00140A  EFDB  F009         	goto	l66
  1901  00140E  EF09  F00A         	goto	l67
  1902  001412                     l67:
  1903  001412  0012               	return		;funcret
  1904  001414                     __end_of_LCD_enable_toggle:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _CCP1_Capture_Init_Default *****************
  1908 ;; Defined at:
  1909 ;;		line 63 in file "src/ccp.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text13
  1938  001752                     __ptext13:
  1939                           	callstack 0
  1940  001752                     _CCP1_Capture_Init_Default:
  1941                           	callstack 29
  1942  001752                     
  1943                           ;src/ccp.c: 64:     (CCP1CON = 0x5);
  1944  001752  0E05               	movlw	5
  1945  001754  6EBD               	movwf	189,c	;volatile
  1946  001756                     
  1947                           ;src/ccp.c: 65:     (PIE1bits.CCP1IE = 1u);
  1948  001756  849D               	bsf	157,2,c	;volatile
  1949  001758  0012               	return		;funcret
  1950  00175A                     __end_of_CCP1_Capture_Init_Default:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _isr *****************
  1954 ;; Defined at:
  1955 ;;		line 126 in file "ece376_hw9_ccp_capt.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;Total ram usage:        4 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		Interrupt level 2
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	intcode
  1983  000808                     __pintcode:
  1984                           	callstack 0
  1985  000808                     _isr:
  1986                           	callstack 27
  1987                           
  1988                           ;incstack = 0
  1989  000808  823A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1990  00080A  EDA0  F00A         	call	int_func,f	;refresh shadow registers
  1991                           
  1992                           	psect	intcode_body
  1993  001540                     __pintcode_body:
  1994                           	callstack 27
  1995  001540                     int_func:
  1996                           	callstack 27
  1997  001540  0006               	pop		; remove dummy address from shadow register refresh
  1998  001542                     
  1999                           ;ece376_hw9_ccp_capt.c: 132:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  2000  001542  A09E               	btfss	158,0,c	;volatile
  2001  001544  EFA6  F00A         	goto	i2u34_41
  2002  001548  EFA8  F00A         	goto	i2u34_40
  2003  00154C                     i2u34_41:
  2004  00154C  EFB6  F00A         	goto	i2l1400
  2005  001550                     i2u34_40:
  2006  001550  A09D               	btfss	157,0,c	;volatile
  2007  001552  EFAD  F00A         	goto	i2u35_41
  2008  001556  EFAF  F00A         	goto	i2u35_40
  2009  00155A                     i2u35_41:
  2010  00155A  EFB6  F00A         	goto	i2l1400
  2011  00155E                     i2u35_40:
  2012  00155E                     
  2013                           ;ece376_hw9_ccp_capt.c: 133:         timer1_overflow_count++;
  2014  00155E  0E01               	movlw	1
  2015  001560  2632               	addwf	_timer1_overflow_count^0,f,c	;volatile
  2016  001562  0E00               	movlw	0
  2017  001564  2233               	addwfc	(_timer1_overflow_count+1)^0,f,c	;volatile
  2018  001566  2234               	addwfc	(_timer1_overflow_count+2)^0,f,c	;volatile
  2019  001568  2235               	addwfc	(_timer1_overflow_count+3)^0,f,c	;volatile
  2020  00156A                     
  2021                           ;ece376_hw9_ccp_capt.c: 135:         (PIR1bits.TMR1IF = 0u);
  2022  00156A  909E               	bcf	158,0,c	;volatile
  2023  00156C                     i2l1400:
  2024                           
  2025                           ;ece376_hw9_ccp_capt.c: 143:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  2026  00156C  A49E               	btfss	158,2,c	;volatile
  2027  00156E  EFBB  F00A         	goto	i2u36_41
  2028  001572  EFBD  F00A         	goto	i2u36_40
  2029  001576                     i2u36_41:
  2030  001576  EFD9  F00A         	goto	i2l218
  2031  00157A                     i2u36_40:
  2032  00157A  A49D               	btfss	157,2,c	;volatile
  2033  00157C  EFC2  F00A         	goto	i2u37_41
  2034  001580  EFC4  F00A         	goto	i2u37_40
  2035  001584                     i2u37_41:
  2036  001584  EFD9  F00A         	goto	i2l218
  2037  001588                     i2u37_40:
  2038  001588                     
  2039                           ;ece376_hw9_ccp_capt.c: 144:         elapsed_time = ((uint32_t) 0xFFFFFFFF * timer1_over
      +                          flow_count) + (uint32_t) CCPR1;
  2040  001588  50BE               	movf	190,w,c	;volatile
  2041  00158A  6E01               	movwf	??_isr^0,c
  2042  00158C  50BF               	movf	191,w,c	;volatile
  2043  00158E  6E02               	movwf	(??_isr+1)^0,c
  2044  001590  6A03               	clrf	(??_isr+2)^0,c
  2045  001592  6A04               	clrf	(??_isr+3)^0,c
  2046  001594  5032               	movf	_timer1_overflow_count^0,w,c	;volatile
  2047  001596  5C01               	subwf	??_isr^0,w,c
  2048  001598  6E28               	movwf	_elapsed_time^0,c	;volatile
  2049  00159A  5033               	movf	(_timer1_overflow_count+1)^0,w,c	;volatile
  2050  00159C  5802               	subwfb	(??_isr+1)^0,w,c
  2051  00159E  6E29               	movwf	(_elapsed_time+1)^0,c	;volatile
  2052  0015A0  5034               	movf	(_timer1_overflow_count+2)^0,w,c	;volatile
  2053  0015A2  5803               	subwfb	(??_isr+2)^0,w,c
  2054  0015A4  6E2A               	movwf	(_elapsed_time+2)^0,c	;volatile
  2055  0015A6  5035               	movf	(_timer1_overflow_count+3)^0,w,c	;volatile
  2056  0015A8  5804               	subwfb	(??_isr+3)^0,w,c
  2057  0015AA  6E2B               	movwf	(_elapsed_time+3)^0,c	;volatile
  2058  0015AC                     
  2059                           ;ece376_hw9_ccp_capt.c: 145:   game_done_flag = 0x01u;
  2060  0015AC  0E01               	movlw	1
  2061  0015AE  6E2C               	movwf	_game_done_flag^0,c	;volatile
  2062  0015B0                     
  2063                           ;ece376_hw9_ccp_capt.c: 148:   (PIR1bits.CCP1IF = 0u);
  2064  0015B0  949E               	bcf	158,2,c	;volatile
  2065  0015B2                     i2l218:
  2066  0015B2  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2067  0015B4  0011               	retfie		f
  2068  0015B6                     __end_of_isr:
  2069                           	callstack 0
  2070                           
  2071                           	psect	rparam
  2072  0000                     
  2073                           	psect	temp
  2074  00003A                     btemp:
  2075                           	callstack 0
  2076  00003A                     	ds	1
  2077  0000                     int$flags	set	btemp
  2078  0000                     wtemp8	set	btemp+1
  2079  0000                     ttemp5	set	btemp+1
  2080  0000                     ttemp6	set	btemp+4
  2081  0000                     ttemp7	set	btemp+8
  2082                           
  2083                           	psect	idloc
  2084                           
  2085                           ;Config register IDLOC0 @ 0x200000
  2086                           ;	unspecified, using default values
  2087  200000                     	org	2097152
  2088  200000  FF                 	db	255
  2089                           
  2090                           ;Config register IDLOC1 @ 0x200001
  2091                           ;	unspecified, using default values
  2092  200001                     	org	2097153
  2093  200001  FF                 	db	255
  2094                           
  2095                           ;Config register IDLOC2 @ 0x200002
  2096                           ;	unspecified, using default values
  2097  200002                     	org	2097154
  2098  200002  FF                 	db	255
  2099                           
  2100                           ;Config register IDLOC3 @ 0x200003
  2101                           ;	unspecified, using default values
  2102  200003                     	org	2097155
  2103  200003  FF                 	db	255
  2104                           
  2105                           ;Config register IDLOC4 @ 0x200004
  2106                           ;	unspecified, using default values
  2107  200004                     	org	2097156
  2108  200004  FF                 	db	255
  2109                           
  2110                           ;Config register IDLOC5 @ 0x200005
  2111                           ;	unspecified, using default values
  2112  200005                     	org	2097157
  2113  200005  FF                 	db	255
  2114                           
  2115                           ;Config register IDLOC6 @ 0x200006
  2116                           ;	unspecified, using default values
  2117  200006                     	org	2097158
  2118  200006  FF                 	db	255
  2119                           
  2120                           ;Config register IDLOC7 @ 0x200007
  2121                           ;	unspecified, using default values
  2122  200007                     	org	2097159
  2123  200007  FF                 	db	255
  2124                           
  2125                           	psect	config
  2126                           
  2127                           ; Padding undefined space
  2128  300000                     	org	3145728
  2129  300000  FF                 	db	255
  2130                           
  2131                           ;Config register CONFIG1H @ 0x300001
  2132                           ;	Oscillator Selection bits
  2133                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2134                           ;	Fail-Safe Clock Monitor Enable bit
  2135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2136                           ;	Internal/External Oscillator Switchover bit
  2137                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2138  300001                     	org	3145729
  2139  300001  06                 	db	6
  2140                           
  2141                           ;Config register CONFIG2L @ 0x300002
  2142                           ;	Power-up Timer Enable bit
  2143                           ;	PWRT = OFF, PWRT disabled
  2144                           ;	Brown-out Reset Enable bits
  2145                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2146                           ;	Brown Out Reset Voltage bits
  2147                           ;	BORV = 3, Minimum setting
  2148  300002                     	org	3145730
  2149  300002  1F                 	db	31
  2150                           
  2151                           ;Config register CONFIG2H @ 0x300003
  2152                           ;	Watchdog Timer Enable bit
  2153                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2154                           ;	Watchdog Timer Postscale Select bits
  2155                           ;	WDTPS = 32768, 1:32768
  2156  300003                     	org	3145731
  2157  300003  1E                 	db	30
  2158                           
  2159                           ; Padding undefined space
  2160  300004                     	org	3145732
  2161  300004  FF                 	db	255
  2162                           
  2163                           ;Config register CONFIG3H @ 0x300005
  2164                           ;	CCP2 MUX bit
  2165                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2166                           ;	PORTB A/D Enable bit
  2167                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2168                           ;	Low-Power Timer1 Oscillator Enable bit
  2169                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2170                           ;	MCLR Pin Enable bit
  2171                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2172  300005                     	org	3145733
  2173  300005  81                 	db	129
  2174                           
  2175                           ;Config register CONFIG4L @ 0x300006
  2176                           ;	Stack Full/Underflow Reset Enable bit
  2177                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2178                           ;	Single-Supply ICSP Enable bit
  2179                           ;	LVP = OFF, Single-Supply ICSP disabled
  2180                           ;	Extended Instruction Set Enable bit
  2181                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2182                           ;	Background Debugger Enable bit
  2183                           ;	DEBUG = 0x1, unprogrammed default
  2184  300006                     	org	3145734
  2185  300006  81                 	db	129
  2186                           
  2187                           ; Padding undefined space
  2188  300007                     	org	3145735
  2189  300007  FF                 	db	255
  2190                           
  2191                           ;Config register CONFIG5L @ 0x300008
  2192                           ;	Code Protection bit
  2193                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2194                           ;	Code Protection bit
  2195                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2196                           ;	Code Protection bit
  2197                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2198                           ;	Code Protection bit
  2199                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2200  300008                     	org	3145736
  2201  300008  0F                 	db	15
  2202                           
  2203                           ;Config register CONFIG5H @ 0x300009
  2204                           ;	Boot Block Code Protection bit
  2205                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2206                           ;	Data EEPROM Code Protection bit
  2207                           ;	CPD = OFF, Data EEPROM not code-protected
  2208  300009                     	org	3145737
  2209  300009  C0                 	db	192
  2210                           
  2211                           ;Config register CONFIG6L @ 0x30000A
  2212                           ;	Write Protection bit
  2213                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2214                           ;	Write Protection bit
  2215                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2216                           ;	Write Protection bit
  2217                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2218                           ;	Write Protection bit
  2219                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2220  30000A                     	org	3145738
  2221  30000A  0F                 	db	15
  2222                           
  2223                           ;Config register CONFIG6H @ 0x30000B
  2224                           ;	Configuration Register Write Protection bit
  2225                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2226                           ;	Boot Block Write Protection bit
  2227                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2228                           ;	Data EEPROM Write Protection bit
  2229                           ;	WRTD = OFF, Data EEPROM not write-protected
  2230  30000B                     	org	3145739
  2231  30000B  E0                 	db	224
  2232                           
  2233                           ;Config register CONFIG7L @ 0x30000C
  2234                           ;	Table Read Protection bit
  2235                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2236                           ;	Table Read Protection bit
  2237                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2238                           ;	Table Read Protection bit
  2239                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2240                           ;	Table Read Protection bit
  2241                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2242  30000C                     	org	3145740
  2243  30000C  0F                 	db	15
  2244                           
  2245                           ;Config register CONFIG7H @ 0x30000D
  2246                           ;	Boot Block Table Read Protection bit
  2247                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2248  30000D                     	org	3145741
  2249  30000D  40                 	db	64
  2250                           tosu	equ	0xFFF
  2251                           tosh	equ	0xFFE
  2252                           tosl	equ	0xFFD
  2253                           stkptr	equ	0xFFC
  2254                           pclatu	equ	0xFFB
  2255                           pclath	equ	0xFFA
  2256                           pcl	equ	0xFF9
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           indf0	equ	0xFEF
  2264                           postinc0	equ	0xFEE
  2265                           postdec0	equ	0xFED
  2266                           preinc0	equ	0xFEC
  2267                           plusw0	equ	0xFEB
  2268                           fsr0h	equ	0xFEA
  2269                           fsr0l	equ	0xFE9
  2270                           wreg	equ	0xFE8
  2271                           indf1	equ	0xFE7
  2272                           postinc1	equ	0xFE6
  2273                           postdec1	equ	0xFE5
  2274                           preinc1	equ	0xFE4
  2275                           plusw1	equ	0xFE3
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           bsr	equ	0xFE0
  2279                           indf2	equ	0xFDF
  2280                           postinc2	equ	0xFDE
  2281                           postdec2	equ	0xFDD
  2282                           preinc2	equ	0xFDC
  2283                           plusw2	equ	0xFDB
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    14
    Data        4
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lldiv
    ___lwdiv->___llmod
    ___lldiv->___llmod
    _LCD_write_data_byte_4bit->_LCD_enable_toggle
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_write_instr_byte_8bit->_LCD_enable_toggle
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit
    _LCD_write_instr_byte_4bit->_LCD_enable_toggle

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    2172
                                             26 COMRAM    13    13      0
          _CCP1_Capture_Init_Default
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
                      _Timer1_Enable
                _Timer1_Init_Default
                            ___lldiv
                            ___llmod
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             13 COMRAM     7     3      4
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     615
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                             13 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      44
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              3     2      1     529
                                              8 COMRAM     3     2      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      66
                                              8 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      22
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      44
                                              8 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      44
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Capture_Init_Default                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Capture_Init_Default
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _Timer1_Enable
   _Timer1_Init_Default
   ___lldiv
     ___llmod (ARG)
   ___llmod
   ___lwdiv
     ___llmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      39       1       45.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      34        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 10 14:51:23 2021

        ?_CCP1_Capture_Init_Default 0001                                  l21 1758  
                                l62 1350                                  l64 1372  
                                l65 1394                                  l66 13B6  
                                l82 16C0                                  l67 1412  
                                l76 1674                                  l85 1750  
                                l88 1280                                 l121 134A  
                               l106 172A                                 l162 1766  
                               l262 14A6                                 l159 175E  
                               l269 14B6                                 l733 1628  
                               l662 153E                                 l726 1620  
                               l655 152E                                 u410 170C  
                               u411 1708                                 u500 1332  
                               u420 1294                                 u501 132E  
                               u421 1290                                 u430 12A4  
                               u510 143A                                 u431 12A0  
                               u511 1436                                 u440 12B8  
                               u520 145C                                 u441 12B4  
                               u521 1458                                 u450 12C8  
                               u530 1484                                 u451 12C4  
                               u531 1480                                 u460 12E2  
                               u540 14CE                                 u461 12DE  
                               u541 14CA                                 u470 12F2  
                               u550 14F0                                 u471 12EE  
                               u551 14EC                                 u480 130C  
                               u560 150E                                 u481 1308  
                               u561 150A                                 u490 131C  
                               u570 15D0                                 u491 1318  
                               u571 15CC                                 u580 15EE  
                               u740 105A                                 u581 15EA  
                               u741 1056                                 u590 160A  
                               u750 1096                                 u807 1748  
                               u591 1606                                 u751 1092  
                               u760 10BE                                 u817 11B8  
                               u761 10BA                                 u907 135E  
                               u827 11D0                                 u917 1368  
                               u837 11E8                                 u927 1376  
                               u847 1200                                 u937 1380  
                               u857 1218                                 u777 1064  
                               u947 138A                                 u867 122A  
                               u787 166C                                 u957 1398  
                               u877 125C                                 u797 1722  
                               u967 13A2                                 u887 16B8  
                               u977 13AC                                 u897 1354  
                               u987 13BA                                 u997 13C4  
                               _isr 0808                                 wreg 000FE8  
                _current_entry_mode 0037                                l1510 1698  
                              l1502 1678                                l1512 16B2  
                              l1504 1680                                l1600 1278  
                              l1520 1738                                l1530 1756  
                              l1506 1682                                l1602 127C  
                              l1522 173A                                l1514 172E  
                              l1610 171C                                l1508 1694  
                              l1524 173E                                l1516 1732  
                              l1604 16FC                                l1620 12B8  
                              l1540 164C                                l1532 162C  
                              l1700 15F4                                l1470 1352  
                              l1526 1742                                l1518 1736  
                              l1606 170C                                l1630 12FC  
                              l1622 12C8                                l1614 1284  
                              l1542 1666                                l1534 1634  
                              l1702 160A                                l1528 1752  
                              l1480 1386                                l1472 135A  
                              l1560 11A6                                l1608 1716  
                              l1640 133E                                l1632 130C  
                              l1624 12D0                                l1616 1294  
                              l1536 1636                                l1704 1612  
                              l1490 13C0                                l1482 1396  
                              l1474 1364                                l1570 11F6  
                              l1562 11AA                                l1642 1346  
                              l1634 131C                                l1626 12E2  
                              l1618 12A8                                l1538 1648  
                              l1650 1414                                l1706 1614  
                              l1492 13CA                                l1484 139E  
                              l1476 1374                                l1468 134C  
                              l1580 1234                                l1572 120C  
                              l1564 11AE                                l1628 12F2  
                              l1636 1322                                l1660 145C  
                              l1652 1424                                l1708 161A  
                              l1486 13A8                                l1478 137C  
                              l1590 1252                                l1582 123A  
                              l1574 1212                                l1566 11C6  
                              l1558 119E                                l1638 1332  
                              l1646 175A                                l1670 14A0  
                              l1662 1466                                l1654 143A  
                              l1488 13B8                                l1496 13D8  
                              l1592 1268                                l1584 1240  
                              l1576 1222                                l1568 11DE  
                              l1648 1764                                l1664 1484  
                              l1656 1442                                l1680 14F0  
                              l1672 14B8                                l1594 126C  
                              l1586 1246                                l1578 1228  
                              l1666 1494                                l1658 144E  
                              l1682 150E                                l1674 14CE  
                              l1690 15BE                                l1596 1270  
                              l1588 124C                                l1668 1496  
                              l1684 151E                                l1676 14D6  
                              l1692 15D0                                l1940 101A  
                              l1932 1010                                l1598 1274  
                              l1686 1528                                l1678 14E2  
                              l1694 15D8                                l1942 101E  
                              l1934 1012                                l1696 15E0  
                              l1688 15B6                                l1960 105A  
                              l1944 1022                                l1936 1016  
                              l1698 15EE                                l1970 1088  
                              l1962 1072                                l1954 1034  
                              l1946 1026                                l1938 1018  
                              l1980 10AE                                l1972 1096  
                              l1964 1076                                l1956 1048  
                              l1948 1030                                l1982 10BE  
                              l1974 10A6                                l1966 1080  
                              l1958 104A                                l1976 10AA  
                              l1968 1084                                l1978 10AC  
                              l1988 13EC                                ?_isr 0001  
                              u1007 13CE                                _main 1010  
                              fsr1l 000FE1                                btemp 003A  
                              start 080E                        ___param_bank 000000  
 __end_of_CCP1_Capture_Init_Default 175A                               ??_isr 0001  
           __end_of_LCD_Init_ECE376 1282                               ?_main 0001  
                             _CCPR1 000FBE                               _CCPR2 000FBB  
                   __end_of___lldiv 14B8                               _T1CON 000FCD  
                   __end_of___llmod 1540                     __end_of___lwdiv 162A  
                             i2l218 15B2                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95   LCD_set_cursor_position@ddram_addr 000A  
                             main@i 0027    __size_of_LCD_set_cursor_position 00CA  
                             tablat 000FF5        LCD_write_data_byte_4bit@data 0008  
             __end_of_Timer1_Enable 1768                               ttemp5 003B  
                             ttemp6 003E                               ttemp7 0042  
                             status 000FD8                               wtemp8 003B  
       LCD_set_cursor_position@line 000B         __end_of_Timer1_Init_Default 1760  
                   __initialization 16C2                        __end_of_main 119E  
                            ??_main 001B         ??_LCD_write_instr_byte_4bit 0007  
       ??_LCD_write_instr_byte_8bit 0007                       __activetblptr 000002  
                            _ADCON1 000FC1                    ___llmod@dividend 0005  
                            i2l1400 156C                              i2l1402 157A  
                            i2l1404 1588                              i2l1406 15AC  
                            i2l1408 15B0                              i2l1392 1542  
                            i2l1394 1550                              i2l1396 155E  
                            i2l1398 156A                           ??___lldiv 0016  
                         ??___llmod 000D                           ??___lwdiv 0012  
                  __end_of_init_msg 100F                              clear_0 16E8  
                  ?_LCD_Init_ECE376 0001    __end_of_LCD_write_data_byte_4bit 1676  
                      __pdataCOMRAM 0036                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                          __accesstop 0080  
           __end_of__initialization 16EE           _LCD_write_instr_byte_4bit 1676  
         _LCD_write_instr_byte_8bit 172C                       ___rparam_used 000001  
                    __pcstackCOMRAM 0001         ??_CCP1_Capture_Init_Default 0005  
                     _init_complete 002F               _timer1_overflow_count 0032  
           _LCD_set_cursor_position 1282                      _game_done_flag 002C  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
                           i2u34_40 1550                             i2u34_41 154C  
                           i2u35_40 155E                             i2u35_41 155A  
                           i2u36_40 157A                             i2u36_41 1576  
                           i2u37_40 1588                             i2u37_41 1584  
          _LCD_write_data_byte_4bit 162A           _CCP1_Capture_Init_Default 1752  
                           __Hparam 0000                             __Lparam 0000  
                           ___lldiv 1414                             ___llmod 14B8  
                           ___lwdiv 15B6                        __psmallconst 1000  
                           __pcinit 16C2                             __ramtop 1000  
                           __ptext0 1010                             __ptext1 15B6  
                           __ptext2 14B8                             __ptext3 1414  
                           __ptext4 175A                             __ptext5 1764  
                           __ptext6 162A                             __ptext7 1282  
                           __ptext8 16FC                             __ptext9 172C  
                      __size_of_isr 0DAE           ??_LCD_set_cursor_position 000A  
                      _elapsed_time 0028                      __pintcode_body 1540  
              end_of_initialization 16EE                       __Lmediumconst 0000  
                           int_func 1540                     ___lldiv@divisor 0012  
                   ___lldiv@counter 001A                          _shift_mode 002E  
                           postdec1 000FE5                             postinc0 000FEE  
      __size_of_Timer1_Init_Default 0006                           _PORTBbits 000F81  
                         _PORTDbits 000F83              __size_of_Timer1_Enable 0004  
LCD_set_cursor_position@pos_on_line 0009                     _address_counter 002D  
                      _CURRENT_DISP 0031                    _current_func_set 0036  
                 _LCD_clear_display 16FC                       __pidataCOMRAM 1760  
                ?_LCD_clear_display 0001                 start_initialization 16C2  
               ??_LCD_clear_display 0009                         __end_of_isr 15B6  
          __size_of_LCD_Init_ECE376 00E4                       _Timer1_Enable 1764  
                   ___llmod@divisor 0009                     ___llmod@counter 000D  
         __end_of_LCD_clear_display 172C          ??_LCD_write_data_byte_4bit 0007  
                       __pbssCOMRAM 0028                      ?_Timer1_Enable 0001  
                         _main$1188 0023                    ___lwdiv@dividend 000E  
                         __pintcode 0808                           _disp_16x2 0038  
                 _LCD_enable_toggle 134C                            ?___lldiv 000E  
                          ?___llmod 0005                            ?___lwdiv 000E  
                ?_LCD_enable_toggle 0001                         __smallconst 1000  
               ??_LCD_enable_toggle 0005                    ___lwdiv@quotient 0012  
               _Timer1_Init_Default 175A                            _LATCbits 000F8B  
                 ??_LCD_Init_ECE376 0009                            _PIE1bits 000F9D  
                          _PIE2bits 000FA0                       _DISP_BIT_MODE 0030  
         __end_of_LCD_enable_toggle 1414                            _PIR1bits 000F9E  
        __size_of_LCD_clear_display 0030                ?_Timer1_Init_Default 0001  
    LCD_write_instr_byte_4bit@instr 0008                     ??_Timer1_Enable 0005  
                         copy_data0 16D6      LCD_write_instr_byte_8bit@instr 0008  
                          __Hrparam 0000                            __Lrparam 0000  
             ??_Timer1_Init_Default 0005                    __size_of___lldiv 00A4  
                  __size_of___llmod 0088                    __size_of___lwdiv 0074  
          ?_LCD_set_cursor_position 0009                     ___lwdiv@divisor 0010  
                   ___lwdiv@counter 0014                            __ptext10 119E  
                          __ptext11 1676                            __ptext12 134C  
                          __ptext13 1752                       __size_of_main 018E  
                          _init_msg 1001          __size_of_LCD_enable_toggle 00C8  
                          int$flags 003A  __size_of_LCD_write_instr_byte_4bit 004C  
__size_of_LCD_write_instr_byte_8bit 0026          ?_LCD_write_instr_byte_4bit 0001  
        ?_LCD_write_instr_byte_8bit 0001                          _INTCONbits 000FF2  
                          intlevel2 0000                    ___lldiv@dividend 000E  
   __end_of_LCD_set_cursor_position 134C   __end_of_LCD_write_instr_byte_4bit 16C2  
 __end_of_LCD_write_instr_byte_8bit 1752                    ___lldiv@quotient 0016  
                   _LCD_Init_ECE376 119E   __size_of_LCD_write_data_byte_4bit 004C  
         ?_LCD_write_data_byte_4bit 0001                   _current_disp_ctrl 0039  
__size_of_CCP1_Capture_Init_Default 0008  
