

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 10 21:38:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4620 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  002778                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _current_disp_ctrl
    98  002778  08                 	db	8
    99                           
   100                           	psect	idataBANK0
   101  002738                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for main@F3016
   105  002738  53                 	db	83
   106  002739  54                 	db	84
   107  00273A  4B                 	db	75
   108  00273B  50                 	db	80
   109  00273C  54                 	db	84
   110  00273D  52                 	db	82
   111  00273E  3A                 	db	58
   112  00273F  20                 	db	32
   113  002740  00                 	db	0
   114  002741  00                 	db	0
   115  002742  00                 	db	0
   116  002743  00                 	db	0
   117  002744  00                 	db	0
   118  002745  00                 	db	0
   119  002746  00                 	db	0
   120  002747  00                 	db	0
   121                           
   122                           ;initializer for main@F3014
   123  002748  52                 	db	82
   124  002749  43                 	db	67
   125  00274A  4F                 	db	79
   126  00274B  4E                 	db	78
   127  00274C  3A                 	db	58
   128  00274D  20                 	db	32
   129  00274E  00                 	db	0
   130  00274F  00                 	db	0
   131  002750  00                 	db	0
   132  002751  00                 	db	0
   133  002752  00                 	db	0
   134  002753  00                 	db	0
   135  002754  00                 	db	0
   136  002755  00                 	db	0
   137  002756  00                 	db	0
   138  002757  00                 	db	0
   139                           
   140                           ;initializer for _current_func_set
   141  002758  30                 	db	48
   142                           
   143                           ;initializer for _current_entry_mode
   144  002759  06                 	db	6
   145                           
   146                           ;initializer for _disp_16x2
   147  00275A  01                 	db	1
   148                           
   149                           	psect	smallconst
   150  001000                     __psmallconst:
   151                           	callstack 0
   152  001000  00                 	db	0
   153  001001                     _init_msg:
   154                           	callstack 0
   155  001001  49                 	db	73
   156  001002  6E                 	db	110
   157  001003  69                 	db	105
   158  001004  74                 	db	116
   159  001005  20                 	db	32
   160  001006  73                 	db	115
   161  001007  75                 	db	117
   162  001008  63                 	db	99
   163  001009  63                 	db	99
   164  00100A  65                 	db	101
   165  00100B  73                 	db	115
   166  00100C  73                 	db	115
   167  00100D  21                 	db	33
   168  00100E  00                 	db	0
   169  00100F                     __end_of_init_msg:
   170                           	callstack 0
   171  00100F                     _start_game_msg:
   172                           	callstack 0
   173  00100F  47                 	db	71
   174  001010  61                 	db	97
   175  001011  6D                 	db	109
   176  001012  65                 	db	101
   177  001013  20                 	db	32
   178  001014  62                 	db	98
   179  001015  65                 	db	101
   180  001016  67                 	db	103
   181  001017  75                 	db	117
   182  001018  6E                 	db	110
   183  001019  21                 	db	33
   184  00101A  00                 	db	0
   185  00101B                     __end_of_start_game_msg:
   186                           	callstack 0
   187  00101B                     _result_msg_title:
   188                           	callstack 0
   189  00101B  52                 	db	82
   190  00101C  65                 	db	101
   191  00101D  73                 	db	115
   192  00101E  75                 	db	117
   193  00101F  6C                 	db	108
   194  001020  74                 	db	116
   195  001021  3A                 	db	58
   196  001022  00                 	db	0
   197  001023                     __end_of_result_msg_title:
   198                           	callstack 0
   199  0000                     _CCPR2	set	4027
   200  0000                     _CCPR1	set	4030
   201  0000                     _INTCONbits	set	4082
   202  0000                     _PORTBbits	set	3969
   203  0000                     _RCONbits	set	4048
   204  0000                     _STKPTR	set	4092
   205  0000                     _RCON	set	4048
   206  0000                     _PORTB	set	3969
   207  0000                     _TRISB	set	3987
   208  0000                     _ADCON1	set	4033
   209  0000                     _PIR1bits	set	3998
   210  0000                     _T1CON	set	4045
   211  0000                     _PORTC	set	3970
   212  0000                     _PORTD	set	3971
   213  0000                     _TRISC	set	3988
   214  0000                     _PORTDbits	set	3971
   215  0000                     _LATCbits	set	3979
   216  0000                     _TRISD	set	3989
   217  0000                     _LATDbits	set	3980
   218  0000                     _PIE2bits	set	4000
   219  0000                     _CCP2CON	set	4026
   220  0000                     _PIE1bits	set	3997
   221  0000                     _T3CON	set	4017
   222  0000                     _CCP1CON	set	4029
   223  001023                     STR_1:
   224  001023  25                 	db	37
   225  001024  2D                 	db	45
   226  001025  33                 	db	51	;'3'
   227  001026  75                 	db	117	;'u'
   228  001027  73                 	db	115	;'s'
   229  001028  3A                 	db	58	;':'
   230  001029  25                 	db	37
   231  00102A  2D                 	db	45
   232  00102B  33                 	db	51	;'3'
   233  00102C  75                 	db	117	;'u'
   234  00102D  6D                 	db	109	;'m'
   235  00102E  73                 	db	115	;'s'
   236  00102F  3A                 	db	58	;':'
   237  001030  25                 	db	37
   238  001031  2D                 	db	45
   239  001032  33                 	db	51	;'3'
   240  001033  75                 	db	117	;'u'
   241  001034  75                 	db	117	;'u'
   242  001035  73                 	db	115	;'s'
   243  001036  00                 	db	0
   244  001037  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           ; #config settings
   247                           
   248                           	psect	cinit
   249  00239E                     __pcinit:
   250                           	callstack 0
   251  00239E                     start_initialization:
   252                           	callstack 0
   253  00239E                     __initialization:
   254                           	callstack 0
   255                           
   256                           ; Initialize objects allocated to BANK0 (35 bytes)
   257                           ; load TBLPTR registers with __pidataBANK0
   258  00239E  0E38               	movlw	low __pidataBANK0
   259  0023A0  6EF6               	movwf	tblptrl,c
   260  0023A2  0E27               	movlw	high __pidataBANK0
   261  0023A4  6EF7               	movwf	tblptrh,c
   262  0023A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   263  0023A8  6EF8               	movwf	tblptru,c
   264  0023AA  EE00  F0A6         	lfsr	0,__pdataBANK0
   265  0023AE  EE10 F023          	lfsr	1,35
   266  0023B2                     copy_data0:
   267  0023B2  0009               	tblrd		*+
   268  0023B4  CFF5 FFEE          	movff	tablat,postinc0
   269  0023B8  50E5               	movf	postdec1,w,c
   270  0023BA  50E1               	movf	fsr1l,w,c
   271  0023BC  E1FA               	bnz	copy_data0
   272                           
   273                           ; Initialize objects allocated to COMRAM (1 bytes)
   274                           ; load TBLPTR registers with __pidataCOMRAM
   275  0023BE  0E78               	movlw	low __pidataCOMRAM
   276  0023C0  6EF6               	movwf	tblptrl,c
   277  0023C2  0E27               	movlw	high __pidataCOMRAM
   278  0023C4  6EF7               	movwf	tblptrh,c
   279  0023C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   280  0023C8  6EF8               	movwf	tblptru,c
   281  0023CA  0009               	tblrd		*+	;fetch initializer
   282  0023CC  CFF5 F074          	movff	tablat,__pdataCOMRAM
   283                           
   284                           ; Clear objects allocated to BANK1 (32 bytes)
   285  0023D0  EE01  F030         	lfsr	0,__pbssBANK1
   286  0023D4  0E20               	movlw	32
   287  0023D6                     clear_0:
   288  0023D6  6AEE               	clrf	postinc0,c
   289  0023D8  06E8               	decf	wreg,f,c
   290  0023DA  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to BANK0 (38 bytes)
   293  0023DC  EE00  F080         	lfsr	0,__pbssBANK0
   294  0023E0  0E26               	movlw	38
   295  0023E2                     clear_1:
   296  0023E2  6AEE               	clrf	postinc0,c
   297  0023E4  06E8               	decf	wreg,f,c
   298  0023E6  E1FD               	bnz	clear_1
   299                           
   300                           ; Clear objects allocated to COMRAM (10 bytes)
   301  0023E8  EE00  F06A         	lfsr	0,__pbssCOMRAM
   302  0023EC  0E0A               	movlw	10
   303  0023EE                     clear_2:
   304  0023EE  6AEE               	clrf	postinc0,c
   305  0023F0  06E8               	decf	wreg,f,c
   306  0023F2  E1FD               	bnz	clear_2
   307  0023F4                     end_of_initialization:
   308                           	callstack 0
   309  0023F4                     __end_of__initialization:
   310                           	callstack 0
   311  0023F4  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312  0023F6  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313  0023F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  0023FA  6EF8               	movwf	tblptru,c
   315  0023FC  0100               	movlb	0
   316  0023FE  EF1C  F008         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMRAM
   319  00006A                     __pbssCOMRAM:
   320                           	callstack 0
   321  00006A                     _width:
   322                           	callstack 0
   323  00006A                     	ds	2
   324  00006C                     _prec:
   325                           	callstack 0
   326  00006C                     	ds	2
   327  00006E                     _flags:
   328                           	callstack 0
   329  00006E                     	ds	2
   330  000070                     	ds	1
   331  000071                     _init_complete:
   332                           	callstack 0
   333  000071                     	ds	1
   334  000072                     _DISP_BIT_MODE:
   335                           	callstack 0
   336  000072                     	ds	1
   337  000073                     _CURRENT_DISP:
   338                           	callstack 0
   339  000073                     	ds	1
   340                           
   341                           	psect	dataCOMRAM
   342  000074                     __pdataCOMRAM:
   343                           	callstack 0
   344  000074                     _current_disp_ctrl:
   345                           	callstack 0
   346  000074                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349  000080                     __pbssBANK0:
   350                           	callstack 0
   351  000080                     _timer1_overflow_count:
   352                           	callstack 0
   353  000080                     	ds	4
   354  000084                     _elapsed_time:
   355                           	callstack 0
   356  000084                     	ds	4
   357  000088                     _nout:
   358                           	callstack 0
   359  000088                     	ds	2
   360  00008A                     _game_done_flag:
   361                           	callstack 0
   362  00008A                     	ds	1
   363  00008B                     _address_counter:
   364                           	callstack 0
   365  00008B                     	ds	1
   366  00008C                     _result_msg:
   367                           	callstack 0
   368  00008C                     	ds	17
   369  00009D                     hex_to_bit_string@bit_string:
   370                           	callstack 0
   371  00009D                     	ds	9
   372                           
   373                           	psect	dataBANK0
   374  0000A6                     __pdataBANK0:
   375                           	callstack 0
   376  0000A6                     main@F3016:
   377                           	callstack 0
   378  0000A6                     	ds	16
   379  0000B6                     main@F3014:
   380                           	callstack 0
   381  0000B6                     	ds	16
   382  0000C6                     _current_func_set:
   383                           	callstack 0
   384  0000C6                     	ds	1
   385  0000C7                     _current_entry_mode:
   386                           	callstack 0
   387  0000C7                     	ds	1
   388  0000C8                     	ds	1
   389                           
   390                           	psect	bssBANK1
   391  000130                     __pbssBANK1:
   392                           	callstack 0
   393  000130                     _dbuf:
   394                           	callstack 0
   395  000130                     	ds	32
   396                           
   397                           	psect	cstackBANK1
   398  000100                     __pcstackBANK1:
   399                           	callstack 0
   400  000100                     main@rcon_reg_string:
   401                           	callstack 0
   402                           
   403                           ; 16 bytes @ 0x0
   404  000100                     	ds	16
   405  000110                     main@stkptr_reg_string:
   406                           	callstack 0
   407                           
   408                           ; 16 bytes @ 0x10
   409  000110                     	ds	16
   410  000120                     _main$1563:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x20
   414  000120                     	ds	4
   415  000124                     main@num_of_seconds:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x24
   419  000124                     	ds	2
   420  000126                     main@num_of_ms:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x26
   424  000126                     	ds	2
   425  000128                     main@num_of_us:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x28
   429  000128                     	ds	2
   430  00012A                     main@i:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x2A
   434  00012A                     	ds	1
   435  00012B                     main@i_664:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x2B
   439  00012B                     	ds	1
   440  00012C                     main@i_665:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x2C
   444  00012C                     	ds	1
   445  00012D                     main@i_690:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x2D
   449  00012D                     	ds	1
   450  00012E                     main@i_695:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x2E
   454  00012E                     	ds	1
   455  00012F                     main@i_696:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x2F
   459  00012F                     	ds	1
   460                           
   461                           	psect	cstackBANK0
   462  0000C9                     __pcstackBANK0:
   463                           	callstack 0
   464  0000C9                     	ds	2
   465  0000CB                     sprintf@ap:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x2
   469  0000CB                     	ds	2
   470  0000CD                     sprintf@f:
   471                           	callstack 0
   472                           
   473                           ; 6 bytes @ 0x4
   474  0000CD                     	ds	6
   475                           
   476                           	psect	cstackCOMRAM
   477  000001                     __pcstackCOMRAM:
   478                           	callstack 0
   479  000001                     ??_isr:
   480  000001                     
   481                           ; 1 bytes @ 0x0
   482  000001                     	ds	4
   483  000005                     ??_LCD_enable_toggle:
   484  000005                     ?_hex_to_bit_string:
   485                           	callstack 0
   486  000005                     ?_strlen:
   487                           	callstack 0
   488  000005                     ?_isdigit:
   489                           	callstack 0
   490  000005                     ?_isspace:
   491                           	callstack 0
   492  000005                     ?___wmul:
   493                           	callstack 0
   494  000005                     ?___llmod:
   495                           	callstack 0
   496  000005                     ?___lodiv:
   497                           	callstack 0
   498  000005                     ?___lomod:
   499                           	callstack 0
   500  000005                     ___wmul@multiplier:
   501                           	callstack 0
   502  000005                     isdigit@c:
   503                           	callstack 0
   504  000005                     isspace@c:
   505                           	callstack 0
   506  000005                     fputc@c:
   507                           	callstack 0
   508  000005                     strlen@s:
   509                           	callstack 0
   510  000005                     ___llmod@dividend:
   511                           	callstack 0
   512  000005                     ___lodiv@dividend:
   513                           	callstack 0
   514  000005                     ___lomod@dividend:
   515                           	callstack 0
   516                           
   517                           ; 8 bytes @ 0x4
   518  000005                     	ds	2
   519  000007                     ??_hex_to_bit_string:
   520  000007                     ??_isdigit:
   521  000007                     ??_isspace:
   522  000007                     ??_LCD_write_data_byte_4bit:
   523  000007                     ??_LCD_write_instr_byte_4bit:
   524  000007                     ??_LCD_write_instr_byte_8bit:
   525  000007                     ___wmul@multiplicand:
   526                           	callstack 0
   527  000007                     fputc@fp:
   528                           	callstack 0
   529  000007                     strlen@a:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x6
   533  000007                     	ds	1
   534  000008                     LCD_write_data_byte_4bit@data:
   535                           	callstack 0
   536  000008                     LCD_write_instr_byte_4bit@instr:
   537                           	callstack 0
   538  000008                     LCD_write_instr_byte_8bit@instr:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x7
   542  000008                     	ds	1
   543  000009                     ??_LCD_clear_display:
   544  000009                     ??_fputc:
   545  000009                     ??_LCD_Init_ECE376:
   546  000009                     LCD_set_cursor_position@pos_on_line:
   547                           	callstack 0
   548  000009                     hex_to_bit_string@hex_val:
   549                           	callstack 0
   550  000009                     ___wmul@product:
   551                           	callstack 0
   552  000009                     strcpy@dest:
   553                           	callstack 0
   554  000009                     ___llmod@divisor:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x8
   558  000009                     	ds	1
   559  00000A                     LCD_set_cursor_position@ddram_addr:
   560                           	callstack 0
   561  00000A                     _hex_to_bit_string$702:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x9
   565  00000A                     	ds	1
   566  00000B                     LCD_set_cursor_position@line:
   567                           	callstack 0
   568  00000B                     _isspace$1267:
   569                           	callstack 0
   570  00000B                     strcpy@src:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xA
   574  00000B                     	ds	1
   575  00000C                     ?_atoi:
   576                           	callstack 0
   577  00000C                     hex_to_bit_string@i:
   578                           	callstack 0
   579  00000C                     atoi@s:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xB
   583  00000C                     	ds	1
   584  00000D                     ___llmod@counter:
   585                           	callstack 0
   586  00000D                     strcpy@s:
   587                           	callstack 0
   588  00000D                     ___lodiv@divisor:
   589                           	callstack 0
   590  00000D                     ___lomod@divisor:
   591                           	callstack 0
   592                           
   593                           ; 8 bytes @ 0xC
   594  00000D                     	ds	1
   595  00000E                     ??_atoi:
   596  00000E                     ?___lwdiv:
   597                           	callstack 0
   598  00000E                     ?___lldiv:
   599                           	callstack 0
   600  00000E                     ___lwdiv@dividend:
   601                           	callstack 0
   602  00000E                     fputs@s:
   603                           	callstack 0
   604  00000E                     ___lldiv@dividend:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0xD
   608  00000E                     	ds	1
   609  00000F                     strcpy@d:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xE
   613  00000F                     	ds	1
   614  000010                     ___lwdiv@divisor:
   615                           	callstack 0
   616  000010                     fputs@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0xF
   620  000010                     	ds	1
   621  000011                     strcat@dest:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x10
   625  000011                     	ds	1
   626  000012                     ___lwdiv@counter:
   627                           	callstack 0
   628  000012                     fputs@c:
   629                           	callstack 0
   630  000012                     atoi@neg:
   631                           	callstack 0
   632  000012                     ___lldiv@divisor:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x11
   636  000012                     	ds	1
   637  000013                     ___lwdiv@quotient:
   638                           	callstack 0
   639  000013                     fputs@i:
   640                           	callstack 0
   641  000013                     strcat@src:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x12
   645  000013                     	ds	1
   646  000014                     _atoi$1249:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x13
   650  000014                     	ds	1
   651  000015                     ?_pad:
   652                           	callstack 0
   653  000015                     ___lomod@counter:
   654                           	callstack 0
   655  000015                     pad@fp:
   656                           	callstack 0
   657  000015                     ___lodiv@quotient:
   658                           	callstack 0
   659                           
   660                           ; 8 bytes @ 0x14
   661  000015                     	ds	1
   662  000016                     _atoi$1251:
   663                           	callstack 0
   664  000016                     ___lldiv@quotient:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x15
   668  000016                     	ds	1
   669  000017                     pad@buf:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x16
   673  000017                     	ds	1
   674  000018                     _atoi$1250:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x17
   678  000018                     	ds	1
   679  000019                     pad@p:
   680                           	callstack 0
   681  000019                     atoi@n:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x18
   685  000019                     	ds	1
   686  00001A                     ___lldiv@counter:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x19
   690  00001A                     	ds	1
   691  00001B                     ??_pad:
   692                           
   693                           ; 1 bytes @ 0x1A
   694  00001B                     	ds	1
   695  00001C                     pad@i:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x1B
   699  00001C                     	ds	1
   700  00001D                     ___lodiv@counter:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x1C
   704  00001D                     	ds	1
   705  00001E                     pad@w:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x1D
   709  00001E                     	ds	2
   710  000020                     ?_utoa:
   711                           	callstack 0
   712  000020                     utoa@fp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x1F
   716  000020                     	ds	2
   717  000022                     utoa@d:
   718                           	callstack 0
   719                           
   720                           ; 8 bytes @ 0x21
   721  000022                     	ds	8
   722  00002A                     ??_utoa:
   723                           
   724                           ; 1 bytes @ 0x29
   725  00002A                     	ds	8
   726  000032                     utoa@p:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x31
   730  000032                     	ds	2
   731  000034                     utoa@w:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x33
   735  000034                     	ds	2
   736  000036                     utoa@n:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x35
   740  000036                     	ds	8
   741  00003E                     utoa@i:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x3D
   745  00003E                     	ds	2
   746  000040                     ?_vfpfcnvrt:
   747                           	callstack 0
   748  000040                     vfpfcnvrt@fp:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x3F
   752  000040                     	ds	2
   753  000042                     vfpfcnvrt@fmt:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x41
   757  000042                     	ds	2
   758  000044                     vfpfcnvrt@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x43
   762  000044                     	ds	2
   763  000046                     ??_vfpfcnvrt:
   764                           
   765                           ; 1 bytes @ 0x45
   766  000046                     	ds	4
   767  00004A                     vfpfcnvrt@llu:
   768                           	callstack 0
   769                           
   770                           ; 8 bytes @ 0x49
   771  00004A                     	ds	8
   772  000052                     vfpfcnvrt@done:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x51
   776  000052                     	ds	2
   777  000054                     _vfpfcnvrt$1231:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x53
   781  000054                     	ds	2
   782  000056                     ?_vfprintf:
   783                           	callstack 0
   784  000056                     vfprintf@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x55
   788  000056                     	ds	2
   789  000058                     vfprintf@fmt:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x57
   793  000058                     	ds	2
   794  00005A                     vfprintf@ap:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x59
   798  00005A                     	ds	2
   799  00005C                     vfprintf@cfmt:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x5B
   803  00005C                     	ds	2
   804  00005E                     ?_sprintf:
   805                           	callstack 0
   806  00005E                     sprintf@s:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x5D
   810  00005E                     	ds	2
   811  000060                     sprintf@fmt:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x5F
   815  000060                     	ds	8
   816  000068                     ??_main:
   817                           
   818                           ; 1 bytes @ 0x67
   819  000068                     	ds	2
   820                           
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 176 in file "ece376_hw9_ccp_capt.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  i               1   47[BANK1 ] unsigned char 
   831 ;;  i               1   46[BANK1 ] unsigned char 
   832 ;;  i               1   45[BANK1 ] unsigned char 
   833 ;;  num_of_us       2   40[BANK1 ] unsigned short 
   834 ;;  num_of_ms       2   38[BANK1 ] unsigned short 
   835 ;;  num_of_secon    2   36[BANK1 ] unsigned short 
   836 ;;  i               1   44[BANK1 ] unsigned char 
   837 ;;  i               1   43[BANK1 ] unsigned char 
   838 ;;  i               1   42[BANK1 ] unsigned char 
   839 ;;  stkptr_reg_s   16   16[BANK1 ] unsigned char [16]
   840 ;;  rcon_reg_str   16    0[BANK1 ] unsigned char [16]
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Locals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Totals:         2       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;Total ram usage:       50 bytes
   855 ;; Hardware stack levels required when called:    9
   856 ;; This function calls:
   857 ;;		_CCP1_Capture_Init_Default
   858 ;;		_LCD_Init_ECE376
   859 ;;		_LCD_clear_display
   860 ;;		_LCD_set_cursor_position
   861 ;;		_LCD_write_data_byte_4bit
   862 ;;		_Timer1_Disable
   863 ;;		_Timer1_Enable
   864 ;;		_Timer1_Init_Default
   865 ;;		___lldiv
   866 ;;		___llmod
   867 ;;		___lwdiv
   868 ;;		_hex_to_bit_string
   869 ;;		_sprintf
   870 ;;		_strcat
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text0
   877  001038                     __ptext0:
   878                           	callstack 0
   879  001038                     _main:
   880                           	callstack 22
   881  001038                     
   882                           ;ece376_hw9_ccp_capt.c: 184:  TRISC |= (1u << 2);
   883  001038  8494               	bsf	148,2,c	;volatile
   884  00103A                     
   885                           ;ece376_hw9_ccp_capt.c: 185:  ADCON1 |= 0x0F;
   886  00103A  0E0F               	movlw	15
   887  00103C  12C1               	iorwf	193,f,c	;volatile
   888  00103E                     
   889                           ;ece376_hw9_ccp_capt.c: 186:  TRISB |= (1u << 0);
   890  00103E  8093               	bsf	147,0,c	;volatile
   891  001040                     
   892                           ;ece376_hw9_ccp_capt.c: 187:     TRISD &= ~(1u << 0);
   893  001040  9095               	bcf	149,0,c	;volatile
   894  001042                     
   895                           ;ece376_hw9_ccp_capt.c: 189:     PORTB = 0x00;
   896  001042  0E00               	movlw	0
   897  001044  6E81               	movwf	129,c	;volatile
   898  001046                     
   899                           ;ece376_hw9_ccp_capt.c: 190:     PORTC = 0x00;
   900  001046  0E00               	movlw	0
   901  001048  6E82               	movwf	130,c	;volatile
   902  00104A                     
   903                           ;ece376_hw9_ccp_capt.c: 191:     PORTD = 0x00;
   904  00104A  0E00               	movlw	0
   905  00104C  6E83               	movwf	131,c	;volatile
   906  00104E                     
   907                           ;ece376_hw9_ccp_capt.c: 194:  LCD_Init_ECE376();
   908  00104E  EC12  F00E         	call	_LCD_Init_ECE376	;wreg free
   909  001052                     
   910                           ;ece376_hw9_ccp_capt.c: 195:     LCD_set_cursor_position(1,1);
   911  001052  0E01               	movlw	1
   912  001054  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   913  001056  0E01               	movlw	1
   914  001058  EC53  F00F         	call	_LCD_set_cursor_position
   915  00105C                     
   916                           ;ece376_hw9_ccp_capt.c: 196:     for(uint8_t i=0; i<13; i++){
   917  00105C  0E00               	movlw	0
   918  00105E  0101               	movlb	1	; () banked
   919  001060  6F2A               	movwf	main@i& (0+255),b
   920  001062                     l4169:
   921                           
   922                           ; BSR set to: 1
   923                           ;ece376_hw9_ccp_capt.c: 197:         LCD_write_data_byte_4bit(init_msg[i]);
   924  001062  0E01               	movlw	low _init_msg
   925  001064  252A               	addwf	main@i& (0+255),w,b
   926  001066  6EF6               	movwf	tblptrl,c
   927  001068  6AF7               	clrf	tblptrh,c
   928  00106A  0E10               	movlw	high _init_msg
   929  00106C  22F7               	addwfc	tblptrh,f,c
   930  00106E                     	if	0	;There are less than 3 active tblptr bytes
   931  00106E                     	endif
   932  00106E  0008               	tblrd		*
   933  001070  50F5               	movf	tablat,w,c
   934  001072  EC84  F012         	call	_LCD_write_data_byte_4bit
   935  001076                     
   936                           ;ece376_hw9_ccp_capt.c: 198:     }
   937  001076  0101               	movlb	1	; () banked
   938  001078  2B2A               	incf	main@i& (0+255),f,b
   939  00107A                     
   940                           ; BSR set to: 1
   941  00107A  0E0C               	movlw	12
   942  00107C  652A               	cpfsgt	main@i& (0+255),b
   943  00107E  EF43  F008         	goto	u2801
   944  001082  EF45  F008         	goto	u2800
   945  001086                     u2801:
   946  001086  EF31  F008         	goto	l4169
   947  00108A                     u2800:
   948  00108A                     
   949                           ; BSR set to: 1
   950                           ;ece376_hw9_ccp_capt.c: 199:     LATDbits.LATD0 = 1u;
   951  00108A  808C               	bsf	140,0,c	;volatile
   952  00108C                     
   953                           ; BSR set to: 1
   954                           ;ece376_hw9_ccp_capt.c: 200:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
   955  00108C  0E66               	movlw	102
   956  00108E  6E69               	movwf	(??_main+1)^0,c
   957  001090  0E76               	movlw	118
   958  001092  6E68               	movwf	??_main^0,c
   959  001094  0EC1               	movlw	193
   960  001096                     u2917:
   961  001096  2EE8               	decfsz	wreg,f,c
   962  001098  D7FE               	bra	u2917
   963  00109A  2E68               	decfsz	??_main^0,f,c
   964  00109C  D7FC               	bra	u2917
   965  00109E  2E69               	decfsz	(??_main+1)^0,f,c
   966  0010A0  D7FA               	bra	u2917
   967  0010A2  F000               	nop	
   968  0010A4                     
   969                           ;ece376_hw9_ccp_capt.c: 201:     LATDbits.LATD0 = 0u;
   970  0010A4  908C               	bcf	140,0,c	;volatile
   971  0010A6                     
   972                           ;ece376_hw9_ccp_capt.c: 202:     LCD_clear_display();
   973  0010A6  EC4A  F013         	call	_LCD_clear_display	;wreg free
   974  0010AA                     
   975                           ;ece376_hw9_ccp_capt.c: 203:     LCD_set_cursor_position(1,1);
   976  0010AA  0E01               	movlw	1
   977  0010AC  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   978  0010AE  0E01               	movlw	1
   979  0010B0  EC53  F00F         	call	_LCD_set_cursor_position
   980  0010B4                     
   981                           ;ece376_hw9_ccp_capt.c: 228:     char rcon_reg_string[16] = "RCON: ";
   982  0010B4  EE20  F0B6         	lfsr	2,main@F3014
   983  0010B8  EE11  F000         	lfsr	1,main@rcon_reg_string
   984  0010BC  0E0F               	movlw	15
   985  0010BE                     u2811:
   986  0010BE  CFDB FFE3          	movff	plusw2,plusw1
   987  0010C2  06E8               	decf	wreg,f,c
   988  0010C4  E2FC               	bc	u2811
   989  0010C6                     
   990                           ;ece376_hw9_ccp_capt.c: 229:     char stkptr_reg_string[16] = "STKPTR: ";
   991  0010C6  EE20  F0A6         	lfsr	2,main@F3016
   992  0010CA  EE11  F010         	lfsr	1,main@stkptr_reg_string
   993  0010CE  0E0F               	movlw	15
   994  0010D0                     u2821:
   995  0010D0  CFDB FFE3          	movff	plusw2,plusw1
   996  0010D4  06E8               	decf	wreg,f,c
   997  0010D6  E2FC               	bc	u2821
   998  0010D8                     
   999                           ;ece376_hw9_ccp_capt.c: 230:     strcat(rcon_reg_string, hex_to_bit_string( (uint8_t)RCO
      +                          N ) );
  1000  0010D8  0E00               	movlw	low main@rcon_reg_string
  1001  0010DA  6E11               	movwf	strcat@dest^0,c
  1002  0010DC  0E01               	movlw	high main@rcon_reg_string
  1003  0010DE  6E12               	movwf	(strcat@dest+1)^0,c
  1004  0010E0  50D0               	movf	208,w,c	;volatile
  1005  0010E2  EC58  F011         	call	_hex_to_bit_string
  1006  0010E6  C005  F013         	movff	?_hex_to_bit_string,strcat@src
  1007  0010EA  C006  F014         	movff	?_hex_to_bit_string+1,strcat@src+1
  1008  0010EE  EC76  F013         	call	_strcat	;wreg free
  1009  0010F2                     
  1010                           ;ece376_hw9_ccp_capt.c: 231:     strcat(stkptr_reg_string, hex_to_bit_string( (uint8_t)S
      +                          TKPTR ) );
  1011  0010F2  0E10               	movlw	low main@stkptr_reg_string
  1012  0010F4  6E11               	movwf	strcat@dest^0,c
  1013  0010F6  0E01               	movlw	high main@stkptr_reg_string
  1014  0010F8  6E12               	movwf	(strcat@dest+1)^0,c
  1015  0010FA  50FC               	movf	252,w,c	;volatile
  1016  0010FC  EC58  F011         	call	_hex_to_bit_string
  1017  001100  C005  F013         	movff	?_hex_to_bit_string,strcat@src
  1018  001104  C006  F014         	movff	?_hex_to_bit_string+1,strcat@src+1
  1019  001108  EC76  F013         	call	_strcat	;wreg free
  1020  00110C                     
  1021                           ;ece376_hw9_ccp_capt.c: 233:     LCD_set_cursor_position(1,1);
  1022  00110C  0E01               	movlw	1
  1023  00110E  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1024  001110  0E01               	movlw	1
  1025  001112  EC53  F00F         	call	_LCD_set_cursor_position
  1026  001116                     
  1027                           ;ece376_hw9_ccp_capt.c: 234:     for(uint8_t i=0; i<14; i++) LCD_write_data_byte_4bit(rc
      +                          on_reg_string[i]);
  1028  001116  0E00               	movlw	0
  1029  001118  0101               	movlb	1	; () banked
  1030  00111A  6F2B               	movwf	main@i_664& (0+255),b
  1031  00111C                     l4199:
  1032                           
  1033                           ; BSR set to: 1
  1034  00111C  0E00               	movlw	low main@rcon_reg_string
  1035  00111E  252B               	addwf	main@i_664& (0+255),w,b
  1036  001120  6ED9               	movwf	fsr2l,c
  1037  001122  6ADA               	clrf	fsr2h,c
  1038  001124  0E01               	movlw	high main@rcon_reg_string
  1039  001126  22DA               	addwfc	fsr2h,f,c
  1040  001128  50DF               	movf	indf2,w,c
  1041  00112A  EC84  F012         	call	_LCD_write_data_byte_4bit
  1042  00112E  0101               	movlb	1	; () banked
  1043  001130  2B2B               	incf	main@i_664& (0+255),f,b
  1044  001132                     
  1045                           ; BSR set to: 1
  1046  001132  0E0D               	movlw	13
  1047  001134  652B               	cpfsgt	main@i_664& (0+255),b
  1048  001136  EF9F  F008         	goto	u2831
  1049  00113A  EFA1  F008         	goto	u2830
  1050  00113E                     u2831:
  1051  00113E  EF8E  F008         	goto	l4199
  1052  001142                     u2830:
  1053  001142                     
  1054                           ; BSR set to: 1
  1055                           ;ece376_hw9_ccp_capt.c: 235:     LCD_set_cursor_position(2,1);
  1056  001142  0E01               	movlw	1
  1057  001144  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1058  001146  0E02               	movlw	2
  1059  001148  EC53  F00F         	call	_LCD_set_cursor_position
  1060  00114C                     
  1061                           ;ece376_hw9_ccp_capt.c: 236:     for(uint8_t i=0; i<16; i++) LCD_write_data_byte_4bit(st
      +                          kptr_reg_string[i]);
  1062  00114C  0E00               	movlw	0
  1063  00114E  0101               	movlb	1	; () banked
  1064  001150  6F2C               	movwf	main@i_665& (0+255),b
  1065  001152                     l4213:
  1066                           
  1067                           ; BSR set to: 1
  1068  001152  0E10               	movlw	low main@stkptr_reg_string
  1069  001154  252C               	addwf	main@i_665& (0+255),w,b
  1070  001156  6ED9               	movwf	fsr2l,c
  1071  001158  6ADA               	clrf	fsr2h,c
  1072  00115A  0E01               	movlw	high main@stkptr_reg_string
  1073  00115C  22DA               	addwfc	fsr2h,f,c
  1074  00115E  50DF               	movf	indf2,w,c
  1075  001160  EC84  F012         	call	_LCD_write_data_byte_4bit
  1076  001164  0101               	movlb	1	; () banked
  1077  001166  2B2C               	incf	main@i_665& (0+255),f,b
  1078  001168                     
  1079                           ; BSR set to: 1
  1080  001168  0E0F               	movlw	15
  1081  00116A  652C               	cpfsgt	main@i_665& (0+255),b
  1082  00116C  EFBA  F008         	goto	u2841
  1083  001170  EFBC  F008         	goto	u2840
  1084  001174                     u2841:
  1085  001174  EFA9  F008         	goto	l4213
  1086  001178                     u2840:
  1087  001178                     
  1088                           ; BSR set to: 1
  1089                           ;ece376_hw9_ccp_capt.c: 239:     RCONbits.POR = 1u;
  1090  001178  82D0               	bsf	208,1,c	;volatile
  1091                           
  1092                           ;ece376_hw9_ccp_capt.c: 240:     RCONbits.BOR = 1u;
  1093  00117A  80D0               	bsf	208,0,c	;volatile
  1094  00117C                     l261:
  1095  00117C  A081               	btfss	129,0,c	;volatile
  1096  00117E  EFC3  F008         	goto	u2851
  1097  001182  EFC5  F008         	goto	u2850
  1098  001186                     u2851:
  1099  001186  EFBE  F008         	goto	l261
  1100  00118A                     u2850:
  1101  00118A                     
  1102                           ;ece376_hw9_ccp_capt.c: 243:     LCD_clear_display();
  1103  00118A  EC4A  F013         	call	_LCD_clear_display	;wreg free
  1104                           
  1105                           ;ece376_hw9_ccp_capt.c: 244:     LCD_set_cursor_position(1,1);
  1106  00118E  0E01               	movlw	1
  1107  001190  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1108  001192  0E01               	movlw	1
  1109  001194  EC53  F00F         	call	_LCD_set_cursor_position
  1110  001198                     
  1111                           ;ece376_hw9_ccp_capt.c: 245:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  1112  001198  0E66               	movlw	102
  1113  00119A  6E69               	movwf	(??_main+1)^0,c
  1114  00119C  0E76               	movlw	118
  1115  00119E  6E68               	movwf	??_main^0,c
  1116  0011A0  0EC1               	movlw	193
  1117  0011A2                     u2927:
  1118  0011A2  2EE8               	decfsz	wreg,f,c
  1119  0011A4  D7FE               	bra	u2927
  1120  0011A6  2E68               	decfsz	??_main^0,f,c
  1121  0011A8  D7FC               	bra	u2927
  1122  0011AA  2E69               	decfsz	(??_main+1)^0,f,c
  1123  0011AC  D7FA               	bra	u2927
  1124  0011AE  F000               	nop	
  1125  0011B0                     
  1126                           ;ece376_hw9_ccp_capt.c: 252:  Timer1_Init_Default();
  1127  0011B0  ECB4  F013         	call	_Timer1_Init_Default	;wreg free
  1128  0011B4                     
  1129                           ;ece376_hw9_ccp_capt.c: 253:     CCP1_Capture_Init_Default();
  1130  0011B4  ECAE  F013         	call	_CCP1_Capture_Init_Default	;wreg free
  1131  0011B8                     
  1132                           ;ece376_hw9_ccp_capt.c: 256:     PORTB = 0x00;
  1133  0011B8  0E00               	movlw	0
  1134  0011BA  6E81               	movwf	129,c	;volatile
  1135  0011BC                     
  1136                           ;ece376_hw9_ccp_capt.c: 257:     PORTC = 0x00;
  1137  0011BC  0E00               	movlw	0
  1138  0011BE  6E82               	movwf	130,c	;volatile
  1139  0011C0                     
  1140                           ;ece376_hw9_ccp_capt.c: 258:     PORTD = 0x00;
  1141  0011C0  0E00               	movlw	0
  1142  0011C2  6E83               	movwf	131,c	;volatile
  1143  0011C4                     l4233:
  1144                           
  1145                           ;ece376_hw9_ccp_capt.c: 263:   if(PORTBbits.RB0) {
  1146  0011C4  A081               	btfss	129,0,c	;volatile
  1147  0011C6  EFE7  F008         	goto	u2861
  1148  0011CA  EFE9  F008         	goto	u2860
  1149  0011CE                     u2861:
  1150  0011CE  EFE2  F008         	goto	l4233
  1151  0011D2                     u2860:
  1152  0011D2                     
  1153                           ;ece376_hw9_ccp_capt.c: 264:             elapsed_time = 0u;
  1154  0011D2  0E00               	movlw	0
  1155  0011D4  0100               	movlb	0	; () banked
  1156  0011D6  6F84               	movwf	_elapsed_time& (0+255),b	;volatile
  1157  0011D8  0E00               	movlw	0
  1158  0011DA  6F85               	movwf	(_elapsed_time+1)& (0+255),b	;volatile
  1159  0011DC  0E00               	movlw	0
  1160  0011DE  6F86               	movwf	(_elapsed_time+2)& (0+255),b	;volatile
  1161  0011E0  0E00               	movlw	0
  1162  0011E2  6F87               	movwf	(_elapsed_time+3)& (0+255),b	;volatile
  1163  0011E4                     
  1164                           ; BSR set to: 0
  1165                           ;ece376_hw9_ccp_capt.c: 267:             Timer1_Enable();
  1166  0011E4  ECB7  F013         	call	_Timer1_Enable	;wreg free
  1167  0011E8                     
  1168                           ;ece376_hw9_ccp_capt.c: 268:             (INTCONbits.PEIE = 1u);
  1169  0011E8  8CF2               	bsf	242,6,c	;volatile
  1170  0011EA                     
  1171                           ;ece376_hw9_ccp_capt.c: 269:             (INTCONbits.GIE = 1);
  1172  0011EA  8EF2               	bsf	242,7,c	;volatile
  1173  0011EC                     
  1174                           ;ece376_hw9_ccp_capt.c: 272:             for(uint8_t i=0; i<11; i++) LCD_write_data_byte
      +                          _4bit(start_game_msg[i]);
  1175  0011EC  0E00               	movlw	0
  1176  0011EE  0101               	movlb	1	; () banked
  1177  0011F0  6F2D               	movwf	main@i_690& (0+255),b
  1178  0011F2                     l4249:
  1179                           
  1180                           ; BSR set to: 1
  1181  0011F2  0E0F               	movlw	low _start_game_msg
  1182  0011F4  252D               	addwf	main@i_690& (0+255),w,b
  1183  0011F6  6EF6               	movwf	tblptrl,c
  1184  0011F8  6AF7               	clrf	tblptrh,c
  1185  0011FA  0E10               	movlw	high _start_game_msg
  1186  0011FC  22F7               	addwfc	tblptrh,f,c
  1187  0011FE                     	if	0	;There are less than 3 active tblptr bytes
  1188  0011FE                     	endif
  1189  0011FE  0008               	tblrd		*
  1190  001200  50F5               	movf	tablat,w,c
  1191  001202  EC84  F012         	call	_LCD_write_data_byte_4bit
  1192  001206  0101               	movlb	1	; () banked
  1193  001208  2B2D               	incf	main@i_690& (0+255),f,b
  1194  00120A                     
  1195                           ; BSR set to: 1
  1196  00120A  0E0A               	movlw	10
  1197  00120C  652D               	cpfsgt	main@i_690& (0+255),b
  1198  00120E  EF0B  F009         	goto	u2871
  1199  001212  EF0D  F009         	goto	u2870
  1200  001216                     u2871:
  1201  001216  EFF9  F008         	goto	l4249
  1202  00121A                     u2870:
  1203  00121A                     
  1204                           ; BSR set to: 1
  1205                           ;ece376_hw9_ccp_capt.c: 273:             _delay((unsigned long)((1000)*(40000000u/4000.0
      +                          )));
  1206  00121A  0E33               	movlw	51
  1207  00121C  6E69               	movwf	(??_main+1)^0,c
  1208  00121E  0EBB               	movlw	187
  1209  001220  6E68               	movwf	??_main^0,c
  1210  001222  0EE0               	movlw	224
  1211  001224                     u2937:
  1212  001224  2EE8               	decfsz	wreg,f,c
  1213  001226  D7FE               	bra	u2937
  1214  001228  2E68               	decfsz	??_main^0,f,c
  1215  00122A  D7FC               	bra	u2937
  1216  00122C  2E69               	decfsz	(??_main+1)^0,f,c
  1217  00122E  D7FA               	bra	u2937
  1218  001230                     
  1219                           ;ece376_hw9_ccp_capt.c: 274:             LCD_clear_display();
  1220  001230  EC4A  F013         	call	_LCD_clear_display	;wreg free
  1221  001234                     
  1222                           ;ece376_hw9_ccp_capt.c: 275:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1223  001234  0E66               	movlw	102
  1224  001236  6E69               	movwf	(??_main+1)^0,c
  1225  001238  0E76               	movlw	118
  1226  00123A  6E68               	movwf	??_main^0,c
  1227  00123C  0EC1               	movlw	193
  1228  00123E                     u2947:
  1229  00123E  2EE8               	decfsz	wreg,f,c
  1230  001240  D7FE               	bra	u2947
  1231  001242  2E68               	decfsz	??_main^0,f,c
  1232  001244  D7FC               	bra	u2947
  1233  001246  2E69               	decfsz	(??_main+1)^0,f,c
  1234  001248  D7FA               	bra	u2947
  1235  00124A  F000               	nop	
  1236  00124C                     
  1237                           ;ece376_hw9_ccp_capt.c: 276:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1238  00124C  0E66               	movlw	102
  1239  00124E  6E69               	movwf	(??_main+1)^0,c
  1240  001250  0E76               	movlw	118
  1241  001252  6E68               	movwf	??_main^0,c
  1242  001254  0EC1               	movlw	193
  1243  001256                     u2957:
  1244  001256  2EE8               	decfsz	wreg,f,c
  1245  001258  D7FE               	bra	u2957
  1246  00125A  2E68               	decfsz	??_main^0,f,c
  1247  00125C  D7FC               	bra	u2957
  1248  00125E  2E69               	decfsz	(??_main+1)^0,f,c
  1249  001260  D7FA               	bra	u2957
  1250  001262  F000               	nop	
  1251  001264                     
  1252                           ;ece376_hw9_ccp_capt.c: 279:             LATDbits.LATD0 = 1u;
  1253  001264  808C               	bsf	140,0,c	;volatile
  1254  001266                     l4265:
  1255  001266  0100               	movlb	0	; () banked
  1256  001268  518A               	movf	_game_done_flag& (0+255),w,b	;volatile
  1257  00126A  B4D8               	btfsc	status,2,c
  1258  00126C  EF3A  F009         	goto	u2881
  1259  001270  EF3C  F009         	goto	u2880
  1260  001274                     u2881:
  1261  001274  EF33  F009         	goto	l4265
  1262  001278                     u2880:
  1263  001278                     
  1264                           ; BSR set to: 0
  1265                           ;ece376_hw9_ccp_capt.c: 293:             uint16_t num_of_seconds = (uint16_t) (elapsed_t
      +                          ime / 10000000u);
  1266  001278  C084  F00E         	movff	_elapsed_time,___lldiv@dividend	;volatile
  1267  00127C  C085  F00F         	movff	_elapsed_time+1,___lldiv@dividend+1	;volatile
  1268  001280  C086  F010         	movff	_elapsed_time+2,___lldiv@dividend+2	;volatile
  1269  001284  C087  F011         	movff	_elapsed_time+3,___lldiv@dividend+3	;volatile
  1270  001288  0E80               	movlw	128
  1271  00128A  6E12               	movwf	___lldiv@divisor^0,c
  1272  00128C  0E96               	movlw	150
  1273  00128E  6E13               	movwf	(___lldiv@divisor+1)^0,c
  1274  001290  0E98               	movlw	152
  1275  001292  6E14               	movwf	(___lldiv@divisor+2)^0,c
  1276  001294  0E00               	movlw	0
  1277  001296  6E15               	movwf	(___lldiv@divisor+3)^0,c
  1278  001298  EC7D  F010         	call	___lldiv	;wreg free
  1279  00129C  C00E  F124         	movff	?___lldiv,main@num_of_seconds
  1280  0012A0  C00F  F125         	movff	?___lldiv+1,main@num_of_seconds+1
  1281                           
  1282                           ;ece376_hw9_ccp_capt.c: 294:             uint16_t num_of_ms = (uint16_t) ((elapsed_time 
      +                          % 10000000u) / 10000u);
  1283  0012A4  0E80               	movlw	128
  1284  0012A6  6E09               	movwf	___llmod@divisor^0,c
  1285  0012A8  0E96               	movlw	150
  1286  0012AA  6E0A               	movwf	(___llmod@divisor+1)^0,c
  1287  0012AC  0E98               	movlw	152
  1288  0012AE  6E0B               	movwf	(___llmod@divisor+2)^0,c
  1289  0012B0  0E00               	movlw	0
  1290  0012B2  6E0C               	movwf	(___llmod@divisor+3)^0,c
  1291  0012B4  C084  F005         	movff	_elapsed_time,___llmod@dividend	;volatile
  1292  0012B8  C085  F006         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
  1293  0012BC  C086  F007         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
  1294  0012C0  C087  F008         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
  1295  0012C4  EC14  F011         	call	___llmod	;wreg free
  1296  0012C8  C005  F00E         	movff	?___llmod,___lldiv@dividend
  1297  0012CC  C006  F00F         	movff	?___llmod+1,___lldiv@dividend+1
  1298  0012D0  C007  F010         	movff	?___llmod+2,___lldiv@dividend+2
  1299  0012D4  C008  F011         	movff	?___llmod+3,___lldiv@dividend+3
  1300  0012D8  0E10               	movlw	16
  1301  0012DA  6E12               	movwf	___lldiv@divisor^0,c
  1302  0012DC  0E27               	movlw	39
  1303  0012DE  6E13               	movwf	(___lldiv@divisor+1)^0,c
  1304  0012E0  0E00               	movlw	0
  1305  0012E2  6E14               	movwf	(___lldiv@divisor+2)^0,c
  1306  0012E4  0E00               	movlw	0
  1307  0012E6  6E15               	movwf	(___lldiv@divisor+3)^0,c
  1308  0012E8  EC7D  F010         	call	___lldiv	;wreg free
  1309  0012EC  C00E  F126         	movff	?___lldiv,main@num_of_ms
  1310  0012F0  C00F  F127         	movff	?___lldiv+1,main@num_of_ms+1
  1311                           
  1312                           ;ece376_hw9_ccp_capt.c: 295:             uint16_t num_of_us = (uint16_t) ((elapsed_time 
      +                          % 10000000u) % 10000u) / 10u;
  1313  0012F4  0E80               	movlw	128
  1314  0012F6  6E09               	movwf	___llmod@divisor^0,c
  1315  0012F8  0E96               	movlw	150
  1316  0012FA  6E0A               	movwf	(___llmod@divisor+1)^0,c
  1317  0012FC  0E98               	movlw	152
  1318  0012FE  6E0B               	movwf	(___llmod@divisor+2)^0,c
  1319  001300  0E00               	movlw	0
  1320  001302  6E0C               	movwf	(___llmod@divisor+3)^0,c
  1321  001304  C084  F005         	movff	_elapsed_time,___llmod@dividend	;volatile
  1322  001308  C085  F006         	movff	_elapsed_time+1,___llmod@dividend+1	;volatile
  1323  00130C  C086  F007         	movff	_elapsed_time+2,___llmod@dividend+2	;volatile
  1324  001310  C087  F008         	movff	_elapsed_time+3,___llmod@dividend+3	;volatile
  1325  001314  EC14  F011         	call	___llmod	;wreg free
  1326  001318  C005  F120         	movff	?___llmod,_main$1563
  1327  00131C  C006  F121         	movff	?___llmod+1,_main$1563+1
  1328  001320  C007  F122         	movff	?___llmod+2,_main$1563+2
  1329  001324  C008  F123         	movff	?___llmod+3,_main$1563+3
  1330                           
  1331                           ;ece376_hw9_ccp_capt.c: 295:             uint16_t num_of_us = (uint16_t) ((elapsed_time 
      +                          % 10000000u) % 10000u) / 10u;
  1332  001328  0E10               	movlw	16
  1333  00132A  6E09               	movwf	___llmod@divisor^0,c
  1334  00132C  0E27               	movlw	39
  1335  00132E  6E0A               	movwf	(___llmod@divisor+1)^0,c
  1336  001330  0E00               	movlw	0
  1337  001332  6E0B               	movwf	(___llmod@divisor+2)^0,c
  1338  001334  0E00               	movlw	0
  1339  001336  6E0C               	movwf	(___llmod@divisor+3)^0,c
  1340  001338  C120  F005         	movff	_main$1563,___llmod@dividend
  1341  00133C  C121  F006         	movff	_main$1563+1,___llmod@dividend+1
  1342  001340  C122  F007         	movff	_main$1563+2,___llmod@dividend+2
  1343  001344  C123  F008         	movff	_main$1563+3,___llmod@dividend+3
  1344  001348  EC14  F011         	call	___llmod	;wreg free
  1345  00134C  C005  F00E         	movff	?___llmod,___lwdiv@dividend
  1346  001350  C006  F00F         	movff	?___llmod+1,___lwdiv@dividend+1
  1347  001354  0E00               	movlw	0
  1348  001356  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1349  001358  0E0A               	movlw	10
  1350  00135A  6E10               	movwf	___lwdiv@divisor^0,c
  1351  00135C  EC95  F011         	call	___lwdiv	;wreg free
  1352  001360  C00E  F128         	movff	?___lwdiv,main@num_of_us
  1353  001364  C00F  F129         	movff	?___lwdiv+1,main@num_of_us+1
  1354  001368                     
  1355                           ;ece376_hw9_ccp_capt.c: 299:             sprintf(result_msg, "%-3us:%-3ums:%-3uus", num_
      +                          of_seconds, num_of_ms, num_of_us);
  1356  001368  0E8C               	movlw	low _result_msg
  1357  00136A  6E5E               	movwf	sprintf@s^0,c
  1358  00136C  0E00               	movlw	high _result_msg
  1359  00136E  6E5F               	movwf	(sprintf@s+1)^0,c
  1360  001370  0E23               	movlw	low STR_1
  1361  001372  6E60               	movwf	sprintf@fmt^0,c
  1362  001374  0E10               	movlw	high STR_1
  1363  001376  6E61               	movwf	(sprintf@fmt+1)^0,c
  1364  001378  C124  F062         	movff	main@num_of_seconds,?_sprintf+4
  1365  00137C  C125  F063         	movff	main@num_of_seconds+1,?_sprintf+5
  1366  001380  C126  F064         	movff	main@num_of_ms,?_sprintf+6
  1367  001384  C127  F065         	movff	main@num_of_ms+1,?_sprintf+7
  1368  001388  C128  F066         	movff	main@num_of_us,?_sprintf+8
  1369  00138C  C129  F067         	movff	main@num_of_us+1,?_sprintf+9
  1370  001390  EC32  F012         	call	_sprintf	;wreg free
  1371  001394                     
  1372                           ;ece376_hw9_ccp_capt.c: 301:             LCD_set_cursor_position(1,1);
  1373  001394  0E01               	movlw	1
  1374  001396  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1375  001398  0E01               	movlw	1
  1376  00139A  EC53  F00F         	call	_LCD_set_cursor_position
  1377  00139E                     
  1378                           ;ece376_hw9_ccp_capt.c: 302:             for(uint8_t i=0; i<7; i++) LCD_write_data_byte_
      +                          4bit(result_msg_title[i]);
  1379  00139E  0E00               	movlw	0
  1380  0013A0  0101               	movlb	1	; () banked
  1381  0013A2  6F2E               	movwf	main@i_695& (0+255),b
  1382  0013A4                     l4275:
  1383                           
  1384                           ; BSR set to: 1
  1385  0013A4  0E06               	movlw	6
  1386  0013A6  652E               	cpfsgt	main@i_695& (0+255),b
  1387  0013A8  EFD8  F009         	goto	u2891
  1388  0013AC  EFDA  F009         	goto	u2890
  1389  0013B0                     u2891:
  1390  0013B0  EFDC  F009         	goto	l4279
  1391  0013B4                     u2890:
  1392  0013B4  EFEA  F009         	goto	l4285
  1393  0013B8                     l4279:
  1394                           
  1395                           ; BSR set to: 1
  1396  0013B8  0E1B               	movlw	low _result_msg_title
  1397  0013BA  252E               	addwf	main@i_695& (0+255),w,b
  1398  0013BC  6EF6               	movwf	tblptrl,c
  1399  0013BE  6AF7               	clrf	tblptrh,c
  1400  0013C0  0E10               	movlw	high _result_msg_title
  1401  0013C2  22F7               	addwfc	tblptrh,f,c
  1402  0013C4                     	if	0	;There are less than 3 active tblptr bytes
  1403  0013C4                     	endif
  1404  0013C4  0008               	tblrd		*
  1405  0013C6  50F5               	movf	tablat,w,c
  1406  0013C8  EC84  F012         	call	_LCD_write_data_byte_4bit
  1407  0013CC  0101               	movlb	1	; () banked
  1408  0013CE  2B2E               	incf	main@i_695& (0+255),f,b
  1409  0013D0  EFD2  F009         	goto	l4275
  1410  0013D4                     l4285:
  1411                           
  1412                           ; BSR set to: 1
  1413                           ;ece376_hw9_ccp_capt.c: 303:             LCD_set_cursor_position(2,1);
  1414  0013D4  0E01               	movlw	1
  1415  0013D6  6E09               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1416  0013D8  0E02               	movlw	2
  1417  0013DA  EC53  F00F         	call	_LCD_set_cursor_position
  1418  0013DE                     
  1419                           ;ece376_hw9_ccp_capt.c: 304:             for(uint8_t i=0; i<16; i++) LCD_write_data_byte
      +                          _4bit(result_msg[i]);
  1420  0013DE  0E00               	movlw	0
  1421  0013E0  0101               	movlb	1	; () banked
  1422  0013E2  6F2F               	movwf	main@i_696& (0+255),b
  1423  0013E4                     l4289:
  1424                           
  1425                           ; BSR set to: 1
  1426  0013E4  0E0F               	movlw	15
  1427  0013E6  652F               	cpfsgt	main@i_696& (0+255),b
  1428  0013E8  EFF8  F009         	goto	u2901
  1429  0013EC  EFFA  F009         	goto	u2900
  1430  0013F0                     u2901:
  1431  0013F0  EFFC  F009         	goto	l4293
  1432  0013F4                     u2900:
  1433  0013F4  EF09  F00A         	goto	l4299
  1434  0013F8                     l4293:
  1435                           
  1436                           ; BSR set to: 1
  1437  0013F8  0E8C               	movlw	low _result_msg
  1438  0013FA  252F               	addwf	main@i_696& (0+255),w,b
  1439  0013FC  6ED9               	movwf	fsr2l,c
  1440  0013FE  6ADA               	clrf	fsr2h,c
  1441  001400  0E00               	movlw	high _result_msg
  1442  001402  22DA               	addwfc	fsr2h,f,c
  1443  001404  50DF               	movf	indf2,w,c
  1444  001406  EC84  F012         	call	_LCD_write_data_byte_4bit
  1445  00140A  0101               	movlb	1	; () banked
  1446  00140C  2B2F               	incf	main@i_696& (0+255),f,b
  1447  00140E  EFF2  F009         	goto	l4289
  1448  001412                     l4299:
  1449                           
  1450                           ; BSR set to: 1
  1451                           ;ece376_hw9_ccp_capt.c: 306:             _delay((unsigned long)((3000)*(40000000u/4000.0
      +                          )));
  1452  001412  0E99               	movlw	153
  1453  001414  6E69               	movwf	(??_main+1)^0,c
  1454  001416  0E31               	movlw	49
  1455  001418  6E68               	movwf	??_main^0,c
  1456  00141A  0EA2               	movlw	162
  1457  00141C                     u2967:
  1458  00141C  2EE8               	decfsz	wreg,f,c
  1459  00141E  D7FE               	bra	u2967
  1460  001420  2E68               	decfsz	??_main^0,f,c
  1461  001422  D7FC               	bra	u2967
  1462  001424  2E69               	decfsz	(??_main+1)^0,f,c
  1463  001426  D7FA               	bra	u2967
  1464  001428  D000               	nop2	
  1465                           
  1466                           ;ece376_hw9_ccp_capt.c: 307:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1467  00142A  0E66               	movlw	102
  1468  00142C  6E69               	movwf	(??_main+1)^0,c
  1469  00142E  0E76               	movlw	118
  1470  001430  6E68               	movwf	??_main^0,c
  1471  001432  0EC1               	movlw	193
  1472  001434                     u2977:
  1473  001434  2EE8               	decfsz	wreg,f,c
  1474  001436  D7FE               	bra	u2977
  1475  001438  2E68               	decfsz	??_main^0,f,c
  1476  00143A  D7FC               	bra	u2977
  1477  00143C  2E69               	decfsz	(??_main+1)^0,f,c
  1478  00143E  D7FA               	bra	u2977
  1479  001440  F000               	nop	
  1480  001442                     
  1481                           ;ece376_hw9_ccp_capt.c: 310:             LATDbits.LATD0 = 0u;
  1482  001442  908C               	bcf	140,0,c	;volatile
  1483  001444                     
  1484                           ;ece376_hw9_ccp_capt.c: 311:             LCD_clear_display();
  1485  001444  EC4A  F013         	call	_LCD_clear_display	;wreg free
  1486  001448                     
  1487                           ;ece376_hw9_ccp_capt.c: 312:             game_done_flag = 0x00;
  1488  001448  0E00               	movlw	0
  1489  00144A  0100               	movlb	0	; () banked
  1490  00144C  6F8A               	movwf	_game_done_flag& (0+255),b	;volatile
  1491  00144E                     
  1492                           ; BSR set to: 0
  1493                           ;ece376_hw9_ccp_capt.c: 313:             Timer1_Disable();
  1494  00144E  ECB9  F013         	call	_Timer1_Disable	;wreg free
  1495  001452                     
  1496                           ;ece376_hw9_ccp_capt.c: 314:             (INTCONbits.PEIE = 0u);
  1497  001452  9CF2               	bcf	242,6,c	;volatile
  1498  001454                     
  1499                           ;ece376_hw9_ccp_capt.c: 315:             (INTCONbits.GIE = 0);
  1500  001454  9EF2               	bcf	242,7,c	;volatile
  1501  001456  EFE2  F008         	goto	l4233
  1502  00145A  EF07  F004         	goto	start
  1503  00145E                     __end_of_main:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _strcat *****************
  1507 ;; Defined at:
  1508 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcat.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  dest            2   16[COMRAM] PTR unsigned char 
  1511 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1512 ;;  src             2   18[COMRAM] PTR const unsigned char 
  1513 ;;		 -> hex_to_bit_string@bit_string(9), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2   16[COMRAM] PTR unsigned char 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;Total ram usage:        4 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    2
  1532 ;; This function calls:
  1533 ;;		_strcpy
  1534 ;;		_strlen
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text1
  1541  0026EC                     __ptext1:
  1542                           	callstack 0
  1543  0026EC                     _strcat:
  1544                           	callstack 28
  1545  0026EC  C011  F005         	movff	strcat@dest,strlen@s
  1546  0026F0  C012  F006         	movff	strcat@dest+1,strlen@s+1
  1547  0026F4  EC2F  F013         	call	_strlen	;wreg free
  1548  0026F8  5005               	movf	?_strlen^0,w,c
  1549  0026FA  2411               	addwf	strcat@dest^0,w,c
  1550  0026FC  6E09               	movwf	strcpy@dest^0,c
  1551  0026FE  5006               	movf	(?_strlen+1)^0,w,c
  1552  002700  2012               	addwfc	(strcat@dest+1)^0,w,c
  1553  002702  6E0A               	movwf	(strcpy@dest+1)^0,c
  1554  002704  C013  F00B         	movff	strcat@src,strcpy@src
  1555  002708  C014  F00C         	movff	strcat@src+1,strcpy@src+1
  1556  00270C  ECF4  F012         	call	_strcpy	;wreg free
  1557  002710  0012               	return		;funcret
  1558  002712                     __end_of_strcat:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _strcpy *****************
  1562 ;; Defined at:
  1563 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  dest            2    8[COMRAM] PTR unsigned char 
  1566 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1567 ;;  src             2   10[COMRAM] PTR const unsigned char 
  1568 ;;		 -> hex_to_bit_string@bit_string(9), 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  d               2   14[COMRAM] PTR unsigned char 
  1571 ;;		 -> main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  1572 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1573 ;;		 -> hex_to_bit_string@bit_string(9), 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    8[COMRAM] PTR unsigned char 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;Total ram usage:        8 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_strcat
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text2
  1598  0025E8                     __ptext2:
  1599                           	callstack 0
  1600  0025E8                     _strcpy:
  1601                           	callstack 28
  1602  0025E8  C00B  F00D         	movff	strcpy@src,strcpy@s
  1603  0025EC  C00C  F00E         	movff	strcpy@src+1,strcpy@s+1
  1604  0025F0  C009  F00F         	movff	strcpy@dest,strcpy@d
  1605  0025F4  C00A  F010         	movff	strcpy@dest+1,strcpy@d+1
  1606  0025F8                     l3683:
  1607  0025F8  C00D  FFD9         	movff	strcpy@s,fsr2l
  1608  0025FC  C00E  FFDA         	movff	strcpy@s+1,fsr2h
  1609  002600  4A0D               	infsnz	strcpy@s^0,f,c
  1610  002602  2A0E               	incf	(strcpy@s+1)^0,f,c
  1611  002604  C00F  FFE1         	movff	strcpy@d,fsr1l
  1612  002608  C010  FFE2         	movff	strcpy@d+1,fsr1h
  1613  00260C  4A0F               	infsnz	strcpy@d^0,f,c
  1614  00260E  2A10               	incf	(strcpy@d+1)^0,f,c
  1615  002610  CFDF FFE7          	movff	indf2,indf1
  1616  002614  50E7               	movf	indf1,w,c
  1617  002616  A4D8               	btfss	status,2,c
  1618  002618  EF10  F013         	goto	u2431
  1619  00261C  EF12  F013         	goto	u2430
  1620  002620                     u2431:
  1621  002620  EFFC  F012         	goto	l3683
  1622  002624                     u2430:
  1623  002624  0012               	return		;funcret
  1624  002626                     __end_of_strcpy:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _sprintf *****************
  1628 ;; Defined at:
  1629 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  s               2   93[COMRAM] PTR unsigned char 
  1632 ;;		 -> result_msg(17), 
  1633 ;;  fmt             2   95[COMRAM] PTR const unsigned char 
  1634 ;;		 -> STR_1(20), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1637 ;;  ap              2    2[BANK0 ] PTR void [1]
  1638 ;;		 -> ?_sprintf(2), 
  1639 ;;  ret             2    0        int 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2   93[COMRAM] int 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:       20 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    8
  1656 ;; This function calls:
  1657 ;;		_vfprintf
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text3
  1664  002464                     __ptext3:
  1665                           	callstack 0
  1666  002464                     _sprintf:
  1667                           	callstack 22
  1668  002464  0E62               	movlw	low (?_sprintf+4)
  1669  002466  0100               	movlb	0	; () banked
  1670  002468  6FCB               	movwf	sprintf@ap& (0+255),b
  1671  00246A  0E00               	movlw	high (?_sprintf+4)
  1672  00246C  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  1673  00246E  C05E  F0CD         	movff	sprintf@s,sprintf@f
  1674  002472  C05F  F0CE         	movff	sprintf@s+1,sprintf@f+1
  1675  002476                     
  1676                           ; BSR set to: 0
  1677  002476  0E00               	movlw	0
  1678  002478  6FD0               	movwf	(sprintf@f+3)& (0+255),b
  1679  00247A  0E00               	movlw	0
  1680  00247C  6FCF               	movwf	(sprintf@f+2)& (0+255),b
  1681  00247E                     
  1682                           ; BSR set to: 0
  1683  00247E  0E00               	movlw	0
  1684  002480  6FD2               	movwf	(sprintf@f+5)& (0+255),b
  1685  002482  0E00               	movlw	0
  1686  002484  6FD1               	movwf	(sprintf@f+4)& (0+255),b
  1687  002486                     
  1688                           ; BSR set to: 0
  1689  002486  0ECD               	movlw	low sprintf@f
  1690  002488  6E56               	movwf	vfprintf@fp^0,c
  1691  00248A  0E00               	movlw	high sprintf@f
  1692  00248C  6E57               	movwf	(vfprintf@fp+1)^0,c
  1693  00248E  C060  F058         	movff	sprintf@fmt,vfprintf@fmt
  1694  002492  C061  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1695  002496  0ECB               	movlw	low sprintf@ap
  1696  002498  6E5A               	movwf	vfprintf@ap^0,c
  1697  00249A  0E00               	movlw	high sprintf@ap
  1698  00249C  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1699  00249E  EC01  F012         	call	_vfprintf	;wreg free
  1700  0024A2  0100               	movlb	0	; () banked
  1701  0024A4  51CF               	movf	(sprintf@f+2)& (0+255),w,b
  1702  0024A6  245E               	addwf	sprintf@s^0,w,c
  1703  0024A8  6ED9               	movwf	fsr2l,c
  1704  0024AA  51D0               	movf	(sprintf@f+3)& (0+255),w,b
  1705  0024AC  205F               	addwfc	(sprintf@s+1)^0,w,c
  1706  0024AE  6EDA               	movwf	fsr2h,c
  1707  0024B0  0E00               	movlw	0
  1708  0024B2  6EDF               	movwf	indf2,c
  1709  0024B4                     
  1710                           ; BSR set to: 0
  1711  0024B4  0012               	return		;funcret
  1712  0024B6                     __end_of_sprintf:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _vfprintf *****************
  1716 ;; Defined at:
  1717 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1720 ;;		 -> sprintf@f(6), 
  1721 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1722 ;;		 -> STR_1(20), 
  1723 ;;  ap              2   89[COMRAM] PTR PTR void 
  1724 ;;		 -> sprintf@ap(2), 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1727 ;;		 -> STR_1(20), 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2   85[COMRAM] int 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    7
  1744 ;; This function calls:
  1745 ;;		_vfpfcnvrt
  1746 ;; This function is called by:
  1747 ;;		_sprintf
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text4
  1752  002402                     __ptext4:
  1753                           	callstack 0
  1754  002402                     _vfprintf:
  1755                           	callstack 22
  1756  002402                     
  1757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1758  002402  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1759  002406  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1760  00240A                     
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1762  00240A  0E00               	movlw	0
  1763  00240C  0100               	movlb	0	; () banked
  1764  00240E  6F89               	movwf	(_nout+1)& (0+255),b
  1765  002410  0E00               	movlw	0
  1766  002412  6F88               	movwf	_nout& (0+255),b
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1769  002414  EF1F  F012         	goto	l3679
  1770  002418                     l3677:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1774  002418  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1775  00241C  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1776  002420  0E5C               	movlw	low vfprintf@cfmt
  1777  002422  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1778  002424  0E00               	movlw	high vfprintf@cfmt
  1779  002426  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1780  002428  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1781  00242C  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1782  002430  EC2F  F00A         	call	_vfpfcnvrt	;wreg free
  1783  002434  5040               	movf	?_vfpfcnvrt^0,w,c
  1784  002436  0100               	movlb	0	; () banked
  1785  002438  2788               	addwf	_nout& (0+255),f,b
  1786  00243A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1787  00243C  2389               	addwfc	(_nout+1)& (0+255),f,b
  1788  00243E                     l3679:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1792  00243E  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1793  002442  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1794  002446                     	if	0	;tblptru may be non-zero
  1795  002446                     	endif
  1796  002446                     	if	0	;tblptru may be non-zero
  1797  002446                     	endif
  1798  002446  0008               	tblrd		*
  1799  002448  50F5               	movf	tablat,w,c
  1800  00244A  0900               	iorlw	0
  1801  00244C  A4D8               	btfss	status,2,c
  1802  00244E  EF2B  F012         	goto	u2421
  1803  002452  EF2D  F012         	goto	u2420
  1804  002456                     u2421:
  1805  002456  EF0C  F012         	goto	l3677
  1806  00245A                     u2420:
  1807  00245A                     
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1810  00245A  C088  F056         	movff	_nout,?_vfprintf
  1811  00245E  C089  F057         	movff	_nout+1,?_vfprintf+1
  1812  002462                     
  1813                           ; BSR set to: 0
  1814  002462  0012               	return		;funcret
  1815  002464                     __end_of_vfprintf:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _vfpfcnvrt *****************
  1819 ;; Defined at:
  1820 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1823 ;;		 -> sprintf@f(6), 
  1824 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1825 ;;		 -> vfprintf@cfmt(2), 
  1826 ;;  ap              2   67[COMRAM] PTR PTR void 
  1827 ;;		 -> sprintf@ap(2), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  llu             8   73[COMRAM] unsigned long long 
  1830 ;;  ll              8    0        long long 
  1831 ;;  f               4    0        long long 
  1832 ;;  vp              3    0        PTR void 
  1833 ;;  ct              3    0        unsigned char [3]
  1834 ;;  cp              3    0        PTR unsigned char 
  1835 ;;  done            2   81[COMRAM] int 
  1836 ;;  i               2    0        int 
  1837 ;;  c               1    0        unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  2   63[COMRAM] int 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1847 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;Total ram usage:       22 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    6
  1854 ;; This function calls:
  1855 ;;		_atoi
  1856 ;;		_fputc
  1857 ;;		_isdigit
  1858 ;;		_utoa
  1859 ;; This function is called by:
  1860 ;;		_vfprintf
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text5
  1865  00145E                     __ptext5:
  1866                           	callstack 0
  1867  00145E                     _vfpfcnvrt:
  1868                           	callstack 22
  1869  00145E                     
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1871  00145E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1872  001462  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1873  001466  CFDE FFF6          	movff	postinc2,tblptrl
  1874  00146A  CFDD FFF7          	movff	postdec2,tblptrh
  1875  00146E                     	if	0	;tblptru may be non-zero
  1876  00146E                     	endif
  1877  00146E                     	if	0	;tblptru may be non-zero
  1878  00146E                     	endif
  1879  00146E  0008               	tblrd		*
  1880  001470  50F5               	movf	tablat,w,c
  1881  001472  0A25               	xorlw	37
  1882  001474  A4D8               	btfss	status,2,c
  1883  001476  EF3F  F00A         	goto	u2321
  1884  00147A  EF41  F00A         	goto	u2320
  1885  00147E                     u2321:
  1886  00147E  EFB6  F00B         	goto	l3625
  1887  001482                     u2320:
  1888  001482                     
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1890  001482  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1891  001486  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1892  00148A  2ADE               	incf	postinc2,f,c
  1893  00148C  0E00               	movlw	0
  1894  00148E  22DD               	addwfc	postdec2,f,c
  1895  001490                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1897  001490  0E00               	movlw	0
  1898  001492  6E6B               	movwf	(_width+1)^0,c
  1899  001494  0E00               	movlw	0
  1900  001496  6E6A               	movwf	_width^0,c
  1901  001498  C06A  F06E         	movff	_width,_flags
  1902  00149C  C06B  F06F         	movff	_width+1,_flags+1
  1903  0014A0                     
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1905  0014A0  686C               	setf	_prec^0,c
  1906  0014A2  686D               	setf	(_prec+1)^0,c
  1907  0014A4                     
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1909  0014A4  0E00               	movlw	0
  1910  0014A6  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1911  0014A8  0E00               	movlw	0
  1912  0014AA  6E52               	movwf	vfpfcnvrt@done^0,c
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1915  0014AC  EF9E  F00A         	goto	l3579
  1916  0014B0                     l3553:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1919  0014B0  806E               	bsf	_flags^0,0,c
  1920  0014B2                     l3555:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1923  0014B2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1924  0014B6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1925  0014BA  2ADE               	incf	postinc2,f,c
  1926  0014BC  0E00               	movlw	0
  1927  0014BE  22DD               	addwfc	postdec2,f,c
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1930  0014C0  EF9E  F00A         	goto	l3579
  1931  0014C4                     l3557:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1934  0014C4  826E               	bsf	_flags^0,1,c
  1935  0014C6  EF59  F00A         	goto	l3555
  1936  0014CA                     l3561:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1939  0014CA  846E               	bsf	_flags^0,2,c
  1940  0014CC  EF59  F00A         	goto	l3555
  1941  0014D0                     l3565:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1944  0014D0  866E               	bsf	_flags^0,3,c
  1945  0014D2  EF59  F00A         	goto	l3555
  1946  0014D6                     l3569:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1949  0014D6  886E               	bsf	_flags^0,4,c
  1950  0014D8  EF59  F00A         	goto	l3555
  1951  0014DC                     l3573:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1954  0014DC  0E00               	movlw	0
  1955  0014DE  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1956  0014E0  0E01               	movlw	1
  1957  0014E2  6E52               	movwf	vfpfcnvrt@done^0,c
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1960  0014E4  EF9E  F00A         	goto	l3579
  1961  0014E8                     l3577:
  1962  0014E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1963  0014EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1964  0014F0  CFDE FFF6          	movff	postinc2,tblptrl
  1965  0014F4  CFDD FFF7          	movff	postdec2,tblptrh
  1966  0014F8                     	if	0	;tblptru may be non-zero
  1967  0014F8                     	endif
  1968  0014F8                     	if	0	;tblptru may be non-zero
  1969  0014F8                     	endif
  1970  0014F8  0008               	tblrd		*
  1971  0014FA  50F5               	movf	tablat,w,c
  1972  0014FC  6E46               	movwf	??_vfpfcnvrt^0,c
  1973  0014FE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982  001500  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1983  001502  0A00               	xorlw	0	; case 0
  1984  001504  B4D8               	btfsc	status,2,c
  1985  001506  EF87  F00A         	goto	l4373
  1986  00150A  EF6E  F00A         	goto	l3573
  1987  00150E                     l4373:
  1988                           
  1989                           ; Switch size 1, requested type "simple"
  1990                           ; Number of cases is 5, Range of values is 32 to 48
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte           16     9 (average)
  1994                           ;	Chosen strategy is simple_byte
  1995  00150E  5046               	movf	??_vfpfcnvrt^0,w,c
  1996  001510  0A20               	xorlw	32	; case 32
  1997  001512  B4D8               	btfsc	status,2,c
  1998  001514  EF68  F00A         	goto	l3565
  1999  001518  0A03               	xorlw	3	; case 35
  2000  00151A  B4D8               	btfsc	status,2,c
  2001  00151C  EF6B  F00A         	goto	l3569
  2002  001520  0A08               	xorlw	8	; case 43
  2003  001522  B4D8               	btfsc	status,2,c
  2004  001524  EF65  F00A         	goto	l3561
  2005  001528  0A06               	xorlw	6	; case 45
  2006  00152A  B4D8               	btfsc	status,2,c
  2007  00152C  EF58  F00A         	goto	l3553
  2008  001530  0A1D               	xorlw	29	; case 48
  2009  001532  B4D8               	btfsc	status,2,c
  2010  001534  EF62  F00A         	goto	l3557
  2011  001538  EF6E  F00A         	goto	l3573
  2012  00153C                     l3579:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2015  00153C  5052               	movf	vfpfcnvrt@done^0,w,c
  2016  00153E  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2017  001540  B4D8               	btfsc	status,2,c
  2018  001542  EFA5  F00A         	goto	u2331
  2019  001546  EFA7  F00A         	goto	u2330
  2020  00154A                     u2331:
  2021  00154A  EF74  F00A         	goto	l3577
  2022  00154E                     u2330:
  2023  00154E                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2025  00154E  A06E               	btfss	_flags^0,0,c
  2026  001550  EFAC  F00A         	goto	u2341
  2027  001554  EFAE  F00A         	goto	u2340
  2028  001558                     u2341:
  2029  001558  EFAF  F00A         	goto	l3583
  2030  00155C                     u2340:
  2031  00155C                     
  2032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2033  00155C  926E               	bcf	_flags^0,1,c
  2034  00155E                     l3583:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2037  00155E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2038  001562  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2039  001566  CFDE FFF6          	movff	postinc2,tblptrl
  2040  00156A  CFDD FFF7          	movff	postdec2,tblptrh
  2041  00156E                     	if	0	;tblptru may be non-zero
  2042  00156E                     	endif
  2043  00156E                     	if	0	;tblptru may be non-zero
  2044  00156E                     	endif
  2045  00156E  0008               	tblrd		*
  2046  001570  50F5               	movf	tablat,w,c
  2047  001572  0A2A               	xorlw	42
  2048  001574  A4D8               	btfss	status,2,c
  2049  001576  EFBF  F00A         	goto	u2351
  2050  00157A  EFC1  F00A         	goto	u2350
  2051  00157E                     u2351:
  2052  00157E  EFEA  F00A         	goto	l3591
  2053  001582                     u2350:
  2054  001582                     
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2056  001582  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2057  001586  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2058  00158A  2ADE               	incf	postinc2,f,c
  2059  00158C  0E00               	movlw	0
  2060  00158E  22DD               	addwfc	postdec2,f,c
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2063  001590  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2064  001594  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2065  001598  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2066  00159C  0E02               	movlw	2
  2067  00159E  26DE               	addwf	postinc2,f,c
  2068  0015A0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2069  0015A4  0E00               	movlw	0
  2070  0015A6  22DD               	addwfc	postdec2,f,c
  2071  0015A8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2072  0015AC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2073  0015B0  CFDE F06A          	movff	postinc2,_width
  2074  0015B4  CFDD F06B          	movff	postdec2,_width+1
  2075  0015B8                     
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2077  0015B8  BE6B               	btfsc	(_width+1)^0,7,c
  2078  0015BA  EFE3  F00A         	goto	u2360
  2079  0015BE  EFE1  F00A         	goto	u2361
  2080  0015C2                     u2361:
  2081  0015C2  EF2D  F00B         	goto	l3601
  2082  0015C6                     u2360:
  2083  0015C6                     
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2085  0015C6  806E               	bsf	_flags^0,0,c
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2088  0015C8  6C6A               	negf	_width^0,c
  2089  0015CA  1E6B               	comf	(_width+1)^0,f,c
  2090  0015CC  B0D8               	btfsc	status,0,c
  2091  0015CE  2A6B               	incf	(_width+1)^0,f,c
  2092  0015D0  EF2D  F00B         	goto	l3601
  2093  0015D4                     l3591:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2096  0015D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2097  0015D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2098  0015DC  CFDE F00C          	movff	postinc2,atoi@s
  2099  0015E0  CFDD F00D          	movff	postdec2,atoi@s+1
  2100  0015E4  ECD2  F00C         	call	_atoi	;wreg free
  2101  0015E8  C00C  F06A         	movff	?_atoi,_width
  2102  0015EC  C00D  F06B         	movff	?_atoi+1,_width+1
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2105  0015F0  EF01  F00B         	goto	l3595
  2106  0015F4                     l3593:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2109  0015F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2110  0015F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2111  0015FC  2ADE               	incf	postinc2,f,c
  2112  0015FE  0E00               	movlw	0
  2113  001600  22DD               	addwfc	postdec2,f,c
  2114  001602                     l3595:
  2115  001602  0ED0               	movlw	208
  2116  001604  6E46               	movwf	??_vfpfcnvrt^0,c
  2117  001606  0EFF               	movlw	255
  2118  001608  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2119  00160A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2120  00160E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2121  001612  CFDE FFF6          	movff	postinc2,tblptrl
  2122  001616  CFDD FFF7          	movff	postdec2,tblptrh
  2123  00161A                     	if	0	;tblptru may be non-zero
  2124  00161A                     	endif
  2125  00161A                     	if	0	;tblptru may be non-zero
  2126  00161A                     	endif
  2127  00161A  0008               	tblrd		*
  2128  00161C  50F5               	movf	tablat,w,c
  2129  00161E  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2130  001620  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2131  001622  5046               	movf	??_vfpfcnvrt^0,w,c
  2132  001624  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2133  001626  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2134  001628  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2135  00162A  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2136  00162C  E10A               	bnz	u2370
  2137  00162E  0E0A               	movlw	10
  2138  001630  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2139  001632  A0D8               	btfss	status,0,c
  2140  001634  EF1E  F00B         	goto	u2371
  2141  001638  EF21  F00B         	goto	u2370
  2142  00163C                     u2371:
  2143  00163C  0E01               	movlw	1
  2144  00163E  EF22  F00B         	goto	u2380
  2145  001642                     u2370:
  2146  001642  0E00               	movlw	0
  2147  001644                     u2380:
  2148  001644  6E54               	movwf	_vfpfcnvrt$1231^0,c
  2149  001646  6A55               	clrf	(_vfpfcnvrt$1231+1)^0,c
  2150  001648  5054               	movf	_vfpfcnvrt$1231^0,w,c
  2151  00164A  1055               	iorwf	(_vfpfcnvrt$1231+1)^0,w,c
  2152  00164C  A4D8               	btfss	status,2,c
  2153  00164E  EF2B  F00B         	goto	u2391
  2154  001652  EF2D  F00B         	goto	u2390
  2155  001656                     u2391:
  2156  001656  EFFA  F00A         	goto	l3593
  2157  00165A                     u2390:
  2158  00165A                     l3601:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2161  00165A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  00165E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  001662  CFDE FFF6          	movff	postinc2,tblptrl
  2164  001666  CFDD FFF7          	movff	postdec2,tblptrh
  2165  00166A                     	if	0	;tblptru may be non-zero
  2166  00166A                     	endif
  2167  00166A                     	if	0	;tblptru may be non-zero
  2168  00166A                     	endif
  2169  00166A  0008               	tblrd		*
  2170  00166C  50F5               	movf	tablat,w,c
  2171  00166E  0A75               	xorlw	117
  2172  001670  A4D8               	btfss	status,2,c
  2173  001672  EF3D  F00B         	goto	u2401
  2174  001676  EF3F  F00B         	goto	u2400
  2175  00167A                     u2401:
  2176  00167A  EF80  F00B         	goto	l3609
  2177  00167E                     u2400:
  2178  00167E                     
  2179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2180  00167E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2181  001682  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2182  001686  2ADE               	incf	postinc2,f,c
  2183  001688  0E00               	movlw	0
  2184  00168A  22DD               	addwfc	postdec2,f,c
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2187  00168C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2188  001690  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2189  001694  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2190  001698  0E02               	movlw	2
  2191  00169A  26DE               	addwf	postinc2,f,c
  2192  00169C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2193  0016A0  0E00               	movlw	0
  2194  0016A2  22DD               	addwfc	postdec2,f,c
  2195  0016A4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2196  0016A8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2197  0016AC  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  2198  0016B0  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  2199  0016B4  C048  F04A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2200  0016B8  C049  F04B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2201  0016BC  6A4C               	clrf	(vfpfcnvrt@llu+2)^0,c
  2202  0016BE  6A4D               	clrf	(vfpfcnvrt@llu+3)^0,c
  2203  0016C0  6A4E               	clrf	(vfpfcnvrt@llu+4)^0,c
  2204  0016C2  6A4F               	clrf	(vfpfcnvrt@llu+5)^0,c
  2205  0016C4  6A50               	clrf	(vfpfcnvrt@llu+6)^0,c
  2206  0016C6  6A51               	clrf	(vfpfcnvrt@llu+7)^0,c
  2207  0016C8                     
  2208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2209  0016C8  C040  F020         	movff	vfpfcnvrt@fp,utoa@fp
  2210  0016CC  C041  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2211  0016D0  C04A  F022         	movff	vfpfcnvrt@llu,utoa@d
  2212  0016D4  C04B  F023         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2213  0016D8  C04C  F024         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2214  0016DC  C04D  F025         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2215  0016E0  C04E  F026         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2216  0016E4  C04F  F027         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2217  0016E8  C050  F028         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2218  0016EC  C051  F029         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2219  0016F0  ECD2  F00B         	call	_utoa	;wreg free
  2220  0016F4  C020  F040         	movff	?_utoa,?_vfpfcnvrt
  2221  0016F8  C021  F041         	movff	?_utoa+1,?_vfpfcnvrt+1
  2222  0016FC  EFD1  F00B         	goto	l1045
  2223  001700                     l3609:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2226  001700  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2227  001704  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2228  001708  CFDE FFF6          	movff	postinc2,tblptrl
  2229  00170C  CFDD FFF7          	movff	postdec2,tblptrh
  2230  001710                     	if	0	;tblptru may be non-zero
  2231  001710                     	endif
  2232  001710                     	if	0	;tblptru may be non-zero
  2233  001710                     	endif
  2234  001710  0008               	tblrd		*
  2235  001712  50F5               	movf	tablat,w,c
  2236  001714  0A25               	xorlw	37
  2237  001716  A4D8               	btfss	status,2,c
  2238  001718  EF90  F00B         	goto	u2411
  2239  00171C  EF92  F00B         	goto	u2410
  2240  001720                     u2411:
  2241  001720  EFA9  F00B         	goto	l3619
  2242  001724                     u2410:
  2243  001724                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2245  001724  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2246  001728  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2247  00172C  2ADE               	incf	postinc2,f,c
  2248  00172E  0E00               	movlw	0
  2249  001730  22DD               	addwfc	postdec2,f,c
  2250  001732                     
  2251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2252  001732  0E00               	movlw	0
  2253  001734  6E06               	movwf	(fputc@c+1)^0,c
  2254  001736  0E25               	movlw	37
  2255  001738  6E05               	movwf	fputc@c^0,c
  2256  00173A  C040  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2257  00173E  C041  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2258  001742  ECEE  F00E         	call	_fputc	;wreg free
  2259  001746                     l3615:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2262  001746  0E00               	movlw	0
  2263  001748  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2264  00174A  0E01               	movlw	1
  2265  00174C  6E40               	movwf	?_vfpfcnvrt^0,c
  2266  00174E  EFD1  F00B         	goto	l1045
  2267  001752                     l3619:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2270  001752  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2271  001756  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2272  00175A  2ADE               	incf	postinc2,f,c
  2273  00175C  0E00               	movlw	0
  2274  00175E  22DD               	addwfc	postdec2,f,c
  2275  001760                     
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2277  001760  0E00               	movlw	0
  2278  001762  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2279  001764  0E00               	movlw	0
  2280  001766  6E40               	movwf	?_vfpfcnvrt^0,c
  2281  001768  EFD1  F00B         	goto	l1045
  2282  00176C                     l3625:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2285  00176C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2286  001770  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2287  001774  CFDE FFF6          	movff	postinc2,tblptrl
  2288  001778  CFDD FFF7          	movff	postdec2,tblptrh
  2289  00177C                     	if	0	;tblptru may be non-zero
  2290  00177C                     	endif
  2291  00177C                     	if	0	;tblptru may be non-zero
  2292  00177C                     	endif
  2293  00177C  0008               	tblrd		*
  2294  00177E  50F5               	movf	tablat,w,c
  2295  001780  6E05               	movwf	fputc@c^0,c
  2296  001782  6A06               	clrf	(fputc@c+1)^0,c
  2297  001784  C040  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2298  001788  C041  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2299  00178C  ECEE  F00E         	call	_fputc	;wreg free
  2300  001790                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2302  001790  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2303  001794  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2304  001798  2ADE               	incf	postinc2,f,c
  2305  00179A  0E00               	movlw	0
  2306  00179C  22DD               	addwfc	postdec2,f,c
  2307  00179E  EFA3  F00B         	goto	l3615
  2308  0017A2                     l1045:
  2309  0017A2  0012               	return		;funcret
  2310  0017A4                     __end_of_vfpfcnvrt:
  2311                           	callstack 0
  2312                           
  2313 ;; *************** function _utoa *****************
  2314 ;; Defined at:
  2315 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2318 ;;		 -> sprintf@f(6), 
  2319 ;;  d               8   33[COMRAM] unsigned long long 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  n               8   53[COMRAM] unsigned long long 
  2322 ;;  i               2   61[COMRAM] int 
  2323 ;;  w               2   51[COMRAM] int 
  2324 ;;  p               2   49[COMRAM] int 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  2   31[COMRAM] int 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2334 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;Total ram usage:       32 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    5
  2341 ;; This function calls:
  2342 ;;		___lodiv
  2343 ;;		___lomod
  2344 ;;		_pad
  2345 ;; This function is called by:
  2346 ;;		_vfpfcnvrt
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text6
  2351  0017A4                     __ptext6:
  2352                           	callstack 0
  2353  0017A4                     _utoa:
  2354                           	callstack 22
  2355  0017A4                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2357  0017A4  BE6D               	btfsc	(_prec+1)^0,7,c
  2358  0017A6  EFD7  F00B         	goto	u2181
  2359  0017AA  EFD9  F00B         	goto	u2180
  2360  0017AE                     u2181:
  2361  0017AE  EFDA  F00B         	goto	l3435
  2362  0017B2                     u2180:
  2363  0017B2                     
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2365  0017B2  926E               	bcf	_flags^0,1,c
  2366  0017B4                     l3435:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2369  0017B4  BE6D               	btfsc	(_prec+1)^0,7,c
  2370  0017B6  EFE7  F00B         	goto	u2190
  2371  0017BA  506D               	movf	(_prec+1)^0,w,c
  2372  0017BC  E106               	bnz	u2191
  2373  0017BE  046C               	decf	_prec^0,w,c
  2374  0017C0  B0D8               	btfsc	status,0,c
  2375  0017C2  EFE5  F00B         	goto	u2191
  2376  0017C6  EFE7  F00B         	goto	u2190
  2377  0017CA                     u2191:
  2378  0017CA  EFED  F00B         	goto	l1008
  2379  0017CE                     u2190:
  2380  0017CE  0E00               	movlw	0
  2381  0017D0  6E33               	movwf	(utoa@p+1)^0,c
  2382  0017D2  0E01               	movlw	1
  2383  0017D4  6E32               	movwf	utoa@p^0,c
  2384  0017D6  EFF1  F00B         	goto	l1010
  2385  0017DA                     l1008:
  2386  0017DA  C06C  F032         	movff	_prec,utoa@p
  2387  0017DE  C06D  F033         	movff	_prec+1,utoa@p+1
  2388  0017E2                     l1010:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2391  0017E2  C06A  F034         	movff	_width,utoa@w
  2392  0017E6  C06B  F035         	movff	_width+1,utoa@w+1
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2395  0017EA  C022  F036         	movff	utoa@d,utoa@n
  2396  0017EE  C023  F037         	movff	utoa@d+1,utoa@n+1
  2397  0017F2  C024  F038         	movff	utoa@d+2,utoa@n+2
  2398  0017F6  C025  F039         	movff	utoa@d+3,utoa@n+3
  2399  0017FA  C026  F03A         	movff	utoa@d+4,utoa@n+4
  2400  0017FE  C027  F03B         	movff	utoa@d+5,utoa@n+5
  2401  001802  C028  F03C         	movff	utoa@d+6,utoa@n+6
  2402  001806  C029  F03D         	movff	utoa@d+7,utoa@n+7
  2403  00180A                     
  2404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2405  00180A  0E00               	movlw	0
  2406  00180C  6E3F               	movwf	(utoa@i+1)^0,c
  2407  00180E  0E1F               	movlw	31
  2408  001810  6E3E               	movwf	utoa@i^0,c
  2409  001812                     
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2411  001812  0E00               	movlw	0
  2412  001814  0101               	movlb	1	; () banked
  2413  001816  6F4F               	movwf	(_dbuf+31)& (0+255),b
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2416  001818  EF84  F00C         	goto	l3453
  2417  00181C                     l3443:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
  2420  00181C  063E               	decf	utoa@i^0,f,c
  2421  00181E  A0D8               	btfss	status,0,c
  2422  001820  063F               	decf	(utoa@i+1)^0,f,c
  2423  001822                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2425  001822  0E30               	movlw	low _dbuf
  2426  001824  243E               	addwf	utoa@i^0,w,c
  2427  001826  6ED9               	movwf	fsr2l,c
  2428  001828  0E01               	movlw	high _dbuf
  2429  00182A  203F               	addwfc	(utoa@i+1)^0,w,c
  2430  00182C  6EDA               	movwf	fsr2h,c
  2431  00182E  C036  F005         	movff	utoa@n,___lomod@dividend
  2432  001832  C037  F006         	movff	utoa@n+1,___lomod@dividend+1
  2433  001836  C038  F007         	movff	utoa@n+2,___lomod@dividend+2
  2434  00183A  C039  F008         	movff	utoa@n+3,___lomod@dividend+3
  2435  00183E  C03A  F009         	movff	utoa@n+4,___lomod@dividend+4
  2436  001842  C03B  F00A         	movff	utoa@n+5,___lomod@dividend+5
  2437  001846  C03C  F00B         	movff	utoa@n+6,___lomod@dividend+6
  2438  00184A  C03D  F00C         	movff	utoa@n+7,___lomod@dividend+7
  2439  00184E  0E0A               	movlw	10
  2440  001850  6E0D               	movwf	___lomod@divisor^0,c
  2441  001852  0E00               	movlw	0
  2442  001854  6E0E               	movwf	(___lomod@divisor+1)^0,c
  2443  001856  0E00               	movlw	0
  2444  001858  6E0F               	movwf	(___lomod@divisor+2)^0,c
  2445  00185A  0E00               	movlw	0
  2446  00185C  6E10               	movwf	(___lomod@divisor+3)^0,c
  2447  00185E  0E00               	movlw	0
  2448  001860  6E11               	movwf	(___lomod@divisor+4)^0,c
  2449  001862  0E00               	movlw	0
  2450  001864  6E12               	movwf	(___lomod@divisor+5)^0,c
  2451  001866  0E00               	movlw	0
  2452  001868  6E13               	movwf	(___lomod@divisor+6)^0,c
  2453  00186A  0E00               	movlw	0
  2454  00186C  6E14               	movwf	(___lomod@divisor+7)^0,c
  2455  00186E  EC86  F00E         	call	___lomod	;wreg free
  2456  001872  C005  F02A         	movff	?___lomod,??_utoa
  2457  001876  C006  F02B         	movff	?___lomod+1,??_utoa+1
  2458  00187A  C007  F02C         	movff	?___lomod+2,??_utoa+2
  2459  00187E  C008  F02D         	movff	?___lomod+3,??_utoa+3
  2460  001882  C009  F02E         	movff	?___lomod+4,??_utoa+4
  2461  001886  C00A  F02F         	movff	?___lomod+5,??_utoa+5
  2462  00188A  C00B  F030         	movff	?___lomod+6,??_utoa+6
  2463  00188E  C00C  F031         	movff	?___lomod+7,??_utoa+7
  2464  001892  502A               	movf	??_utoa^0,w,c
  2465  001894  0F30               	addlw	48
  2466  001896  6EDF               	movwf	indf2,c
  2467  001898                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
  2469  001898  0632               	decf	utoa@p^0,f,c
  2470  00189A  A0D8               	btfss	status,0,c
  2471  00189C  0633               	decf	(utoa@p+1)^0,f,c
  2472  00189E                     
  2473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
  2474  00189E  0634               	decf	utoa@w^0,f,c
  2475  0018A0  A0D8               	btfss	status,0,c
  2476  0018A2  0635               	decf	(utoa@w+1)^0,f,c
  2477  0018A4                     
  2478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2479  0018A4  C036  F005         	movff	utoa@n,___lodiv@dividend
  2480  0018A8  C037  F006         	movff	utoa@n+1,___lodiv@dividend+1
  2481  0018AC  C038  F007         	movff	utoa@n+2,___lodiv@dividend+2
  2482  0018B0  C039  F008         	movff	utoa@n+3,___lodiv@dividend+3
  2483  0018B4  C03A  F009         	movff	utoa@n+4,___lodiv@dividend+4
  2484  0018B8  C03B  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  2485  0018BC  C03C  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  2486  0018C0  C03D  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  2487  0018C4  0E0A               	movlw	10
  2488  0018C6  6E0D               	movwf	___lodiv@divisor^0,c
  2489  0018C8  0E00               	movlw	0
  2490  0018CA  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  2491  0018CC  0E00               	movlw	0
  2492  0018CE  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  2493  0018D0  0E00               	movlw	0
  2494  0018D2  6E10               	movwf	(___lodiv@divisor+3)^0,c
  2495  0018D4  0E00               	movlw	0
  2496  0018D6  6E11               	movwf	(___lodiv@divisor+4)^0,c
  2497  0018D8  0E00               	movlw	0
  2498  0018DA  6E12               	movwf	(___lodiv@divisor+5)^0,c
  2499  0018DC  0E00               	movlw	0
  2500  0018DE  6E13               	movwf	(___lodiv@divisor+6)^0,c
  2501  0018E0  0E00               	movlw	0
  2502  0018E2  6E14               	movwf	(___lodiv@divisor+7)^0,c
  2503  0018E4  EC9A  F00D         	call	___lodiv	;wreg free
  2504  0018E8  C005  F036         	movff	?___lodiv,utoa@n
  2505  0018EC  C006  F037         	movff	?___lodiv+1,utoa@n+1
  2506  0018F0  C007  F038         	movff	?___lodiv+2,utoa@n+2
  2507  0018F4  C008  F039         	movff	?___lodiv+3,utoa@n+3
  2508  0018F8  C009  F03A         	movff	?___lodiv+4,utoa@n+4
  2509  0018FC  C00A  F03B         	movff	?___lodiv+5,utoa@n+5
  2510  001900  C00B  F03C         	movff	?___lodiv+6,utoa@n+6
  2511  001904  C00C  F03D         	movff	?___lodiv+7,utoa@n+7
  2512  001908                     l3453:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2515  001908  503E               	movf	utoa@i^0,w,c
  2516  00190A  103F               	iorwf	(utoa@i+1)^0,w,c
  2517  00190C  B4D8               	btfsc	status,2,c
  2518  00190E  EF8B  F00C         	goto	u2201
  2519  001912  EF8D  F00C         	goto	u2200
  2520  001916                     u2201:
  2521  001916  EFBD  F00C         	goto	l3463
  2522  00191A                     u2200:
  2523  00191A  5036               	movf	utoa@n^0,w,c
  2524  00191C  1037               	iorwf	(utoa@n+1)^0,w,c
  2525  00191E  1038               	iorwf	(utoa@n+2)^0,w,c
  2526  001920  1039               	iorwf	(utoa@n+3)^0,w,c
  2527  001922  103A               	iorwf	(utoa@n+4)^0,w,c
  2528  001924  103B               	iorwf	(utoa@n+5)^0,w,c
  2529  001926  103C               	iorwf	(utoa@n+6)^0,w,c
  2530  001928  103D               	iorwf	(utoa@n+7)^0,w,c
  2531  00192A  A4D8               	btfss	status,2,c
  2532  00192C  EF9A  F00C         	goto	u2211
  2533  001930  EF9C  F00C         	goto	u2210
  2534  001934                     u2211:
  2535  001934  EF0E  F00C         	goto	l3443
  2536  001938                     u2210:
  2537  001938  BE33               	btfsc	(utoa@p+1)^0,7,c
  2538  00193A  EFA9  F00C         	goto	u2220
  2539  00193E  5033               	movf	(utoa@p+1)^0,w,c
  2540  001940  E106               	bnz	u2221
  2541  001942  0432               	decf	utoa@p^0,w,c
  2542  001944  B0D8               	btfsc	status,0,c
  2543  001946  EFA7  F00C         	goto	u2221
  2544  00194A  EFA9  F00C         	goto	u2220
  2545  00194E                     u2221:
  2546  00194E  EF0E  F00C         	goto	l3443
  2547  001952                     u2220:
  2548  001952  BE35               	btfsc	(utoa@w+1)^0,7,c
  2549  001954  EFB4  F00C         	goto	u2231
  2550  001958  5035               	movf	(utoa@w+1)^0,w,c
  2551  00195A  E108               	bnz	u2230
  2552  00195C  0434               	decf	utoa@w^0,w,c
  2553  00195E  A0D8               	btfss	status,0,c
  2554  001960  EFB4  F00C         	goto	u2231
  2555  001964  EFB6  F00C         	goto	u2230
  2556  001968                     u2231:
  2557  001968  EFBD  F00C         	goto	l3463
  2558  00196C                     u2230:
  2559  00196C  B26E               	btfsc	_flags^0,1,c
  2560  00196E  EFBB  F00C         	goto	u2241
  2561  001972  EFBD  F00C         	goto	u2240
  2562  001976                     u2241:
  2563  001976  EF0E  F00C         	goto	l3443
  2564  00197A                     u2240:
  2565  00197A                     l3463:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2568  00197A  C020  F015         	movff	utoa@fp,pad@fp
  2569  00197E  C021  F016         	movff	utoa@fp+1,pad@fp+1
  2570  001982  0E30               	movlw	low _dbuf
  2571  001984  243E               	addwf	utoa@i^0,w,c
  2572  001986  6E17               	movwf	pad@buf^0,c
  2573  001988  0E01               	movlw	high _dbuf
  2574  00198A  203F               	addwfc	(utoa@i+1)^0,w,c
  2575  00198C  6E18               	movwf	(pad@buf+1)^0,c
  2576  00198E  C034  F019         	movff	utoa@w,pad@p
  2577  001992  C035  F01A         	movff	utoa@w+1,pad@p+1
  2578  001996  EC1C  F010         	call	_pad	;wreg free
  2579  00199A  C015  F020         	movff	?_pad,?_utoa
  2580  00199E  C016  F021         	movff	?_pad+1,?_utoa+1
  2581  0019A2  0012               	return		;funcret
  2582  0019A4                     __end_of_utoa:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _pad *****************
  2586 ;; Defined at:
  2587 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2590 ;;		 -> sprintf@f(6), 
  2591 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2592 ;;		 -> dbuf(32), 
  2593 ;;  p               2   24[COMRAM] int 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  w               2   29[COMRAM] int 
  2596 ;;  i               2   27[COMRAM] int 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2   20[COMRAM] int 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:       11 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    4
  2613 ;; This function calls:
  2614 ;;		_fputc
  2615 ;;		_fputs
  2616 ;;		_strlen
  2617 ;; This function is called by:
  2618 ;;		_utoa
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text7
  2623  002038                     __ptext7:
  2624                           	callstack 0
  2625  002038                     _pad:
  2626                           	callstack 22
  2627  002038                     
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2629  002038  A06E               	btfss	_flags^0,0,c
  2630  00203A  EF21  F010         	goto	u2101
  2631  00203E  EF23  F010         	goto	u2100
  2632  002042                     u2101:
  2633  002042  EF2D  F010         	goto	l3397
  2634  002046                     u2100:
  2635  002046                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2637  002046  C017  F00E         	movff	pad@buf,fputs@s
  2638  00204A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2639  00204E  C015  F010         	movff	pad@fp,fputs@fp
  2640  002052  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2641  002056  ECD2  F012         	call	_fputs	;wreg free
  2642  00205A                     l3397:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2645  00205A  BE1A               	btfsc	(pad@p+1)^0,7,c
  2646  00205C  EF32  F010         	goto	u2111
  2647  002060  EF34  F010         	goto	u2110
  2648  002064                     u2111:
  2649  002064  EF3A  F010         	goto	l3401
  2650  002068                     u2110:
  2651  002068  C019  F01E         	movff	pad@p,pad@w
  2652  00206C  C01A  F01F         	movff	pad@p+1,pad@w+1
  2653  002070  EF3E  F010         	goto	l998
  2654  002074                     l3401:
  2655  002074  0E00               	movlw	0
  2656  002076  6E1F               	movwf	(pad@w+1)^0,c
  2657  002078  0E00               	movlw	0
  2658  00207A  6E1E               	movwf	pad@w^0,c
  2659  00207C                     l998:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2662  00207C  0E00               	movlw	0
  2663  00207E  6E1D               	movwf	(pad@i+1)^0,c
  2664  002080  0E00               	movlw	0
  2665  002082  6E1C               	movwf	pad@i^0,c
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2668  002084  EF50  F010         	goto	l3407
  2669  002088                     l3403:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2672  002088  0E00               	movlw	0
  2673  00208A  6E06               	movwf	(fputc@c+1)^0,c
  2674  00208C  0E20               	movlw	32
  2675  00208E  6E05               	movwf	fputc@c^0,c
  2676  002090  C015  F007         	movff	pad@fp,fputc@fp
  2677  002094  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2678  002098  ECEE  F00E         	call	_fputc	;wreg free
  2679  00209C                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2681  00209C  4A1C               	infsnz	pad@i^0,f,c
  2682  00209E  2A1D               	incf	(pad@i+1)^0,f,c
  2683  0020A0                     l3407:
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2686  0020A0  501E               	movf	pad@w^0,w,c
  2687  0020A2  5C1C               	subwf	pad@i^0,w,c
  2688  0020A4  501D               	movf	(pad@i+1)^0,w,c
  2689  0020A6  0A80               	xorlw	128
  2690  0020A8  6E1B               	movwf	??_pad^0,c
  2691  0020AA  501F               	movf	(pad@w+1)^0,w,c
  2692  0020AC  0A80               	xorlw	128
  2693  0020AE  581B               	subwfb	??_pad^0,w,c
  2694  0020B0  A0D8               	btfss	status,0,c
  2695  0020B2  EF5D  F010         	goto	u2121
  2696  0020B6  EF5F  F010         	goto	u2120
  2697  0020BA                     u2121:
  2698  0020BA  EF44  F010         	goto	l3403
  2699  0020BE                     u2120:
  2700  0020BE                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2702  0020BE  B06E               	btfsc	_flags^0,0,c
  2703  0020C0  EF64  F010         	goto	u2131
  2704  0020C4  EF66  F010         	goto	u2130
  2705  0020C8                     u2131:
  2706  0020C8  EF70  F010         	goto	l3411
  2707  0020CC                     u2130:
  2708  0020CC                     
  2709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2710  0020CC  C017  F00E         	movff	pad@buf,fputs@s
  2711  0020D0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2712  0020D4  C015  F010         	movff	pad@fp,fputs@fp
  2713  0020D8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2714  0020DC  ECD2  F012         	call	_fputs	;wreg free
  2715  0020E0                     l3411:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2718  0020E0  C017  F005         	movff	pad@buf,strlen@s
  2719  0020E4  C018  F006         	movff	pad@buf+1,strlen@s+1
  2720  0020E8  EC2F  F013         	call	_strlen	;wreg free
  2721  0020EC  501E               	movf	pad@w^0,w,c
  2722  0020EE  2405               	addwf	?_strlen^0,w,c
  2723  0020F0  6E15               	movwf	?_pad^0,c
  2724  0020F2  501F               	movf	(pad@w+1)^0,w,c
  2725  0020F4  2006               	addwfc	(?_strlen+1)^0,w,c
  2726  0020F6  6E16               	movwf	(?_pad+1)^0,c
  2727  0020F8  0012               	return		;funcret
  2728  0020FA                     __end_of_pad:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _strlen *****************
  2732 ;; Defined at:
  2733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2736 ;;		 -> dbuf(32), main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2739 ;;		 -> dbuf(32), main@stkptr_reg_string(16), main@rcon_reg_string(16), 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  2    4[COMRAM] unsigned int 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;Total ram usage:        4 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_pad
  2760 ;;		_strcat
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text8
  2765  00265E                     __ptext8:
  2766                           	callstack 0
  2767  00265E                     _strlen:
  2768                           	callstack 28
  2769  00265E  C005  F007         	movff	strlen@s,strlen@a
  2770  002662  C006  F008         	movff	strlen@s+1,strlen@a+1
  2771  002666  EF37  F013         	goto	l3343
  2772  00266A                     l3341:
  2773  00266A  4A05               	infsnz	strlen@s^0,f,c
  2774  00266C  2A06               	incf	(strlen@s+1)^0,f,c
  2775  00266E                     l3343:
  2776  00266E  C005  FFD9         	movff	strlen@s,fsr2l
  2777  002672  C006  FFDA         	movff	strlen@s+1,fsr2h
  2778  002676  50DF               	movf	indf2,w,c
  2779  002678  A4D8               	btfss	status,2,c
  2780  00267A  EF41  F013         	goto	u2021
  2781  00267E  EF43  F013         	goto	u2020
  2782  002682                     u2021:
  2783  002682  EF35  F013         	goto	l3341
  2784  002686                     u2020:
  2785  002686  5007               	movf	strlen@a^0,w,c
  2786  002688  5C05               	subwf	strlen@s^0,w,c
  2787  00268A  6E05               	movwf	?_strlen^0,c
  2788  00268C  5008               	movf	(strlen@a+1)^0,w,c
  2789  00268E  5806               	subwfb	(strlen@s+1)^0,w,c
  2790  002690  6E06               	movwf	(?_strlen+1)^0,c
  2791  002692  0012               	return		;funcret
  2792  002694                     __end_of_strlen:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _fputs *****************
  2796 ;; Defined at:
  2797 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2800 ;;		 -> dbuf(32), 
  2801 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2802 ;;		 -> sprintf@f(6), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  i               2   18[COMRAM] int 
  2805 ;;  c               1   17[COMRAM] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2   13[COMRAM] int 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        7 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    3
  2822 ;; This function calls:
  2823 ;;		_fputc
  2824 ;; This function is called by:
  2825 ;;		_pad
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text9
  2830  0025A4                     __ptext9:
  2831                           	callstack 0
  2832  0025A4                     _fputs:
  2833                           	callstack 22
  2834  0025A4  0E00               	movlw	0
  2835  0025A6  6E14               	movwf	(fputs@i+1)^0,c
  2836  0025A8  0E00               	movlw	0
  2837  0025AA  6E13               	movwf	fputs@i^0,c
  2838  0025AC  EFE3  F012         	goto	l3337
  2839  0025B0                     l3333:
  2840  0025B0  C012  F005         	movff	fputs@c,fputc@c
  2841  0025B4  6A06               	clrf	(fputc@c+1)^0,c
  2842  0025B6  C010  F007         	movff	fputs@fp,fputc@fp
  2843  0025BA  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2844  0025BE  ECEE  F00E         	call	_fputc	;wreg free
  2845  0025C2  4A13               	infsnz	fputs@i^0,f,c
  2846  0025C4  2A14               	incf	(fputs@i+1)^0,f,c
  2847  0025C6                     l3337:
  2848  0025C6  5013               	movf	fputs@i^0,w,c
  2849  0025C8  240E               	addwf	fputs@s^0,w,c
  2850  0025CA  6ED9               	movwf	fsr2l,c
  2851  0025CC  5014               	movf	(fputs@i+1)^0,w,c
  2852  0025CE  200F               	addwfc	(fputs@s+1)^0,w,c
  2853  0025D0  6EDA               	movwf	fsr2h,c
  2854  0025D2  50DF               	movf	indf2,w,c
  2855  0025D4  6E12               	movwf	fputs@c^0,c
  2856  0025D6  5012               	movf	fputs@c^0,w,c
  2857  0025D8  A4D8               	btfss	status,2,c
  2858  0025DA  EFF1  F012         	goto	u2011
  2859  0025DE  EFF3  F012         	goto	u2010
  2860  0025E2                     u2011:
  2861  0025E2  EFD8  F012         	goto	l3333
  2862  0025E6                     u2010:
  2863  0025E6  0012               	return		;funcret
  2864  0025E8                     __end_of_fputs:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _fputc *****************
  2868 ;; Defined at:
  2869 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  c               2    4[COMRAM] int 
  2872 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2873 ;;		 -> sprintf@f(6), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  2    4[COMRAM] int 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;Total ram usage:        9 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    2
  2892 ;; This function calls:
  2893 ;;		_putch
  2894 ;; This function is called by:
  2895 ;;		_pad
  2896 ;;		_vfpfcnvrt
  2897 ;;		_fputs
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text10
  2902  001DDC                     __ptext10:
  2903                           	callstack 0
  2904  001DDC                     _fputc:
  2905                           	callstack 22
  2906  001DDC  5007               	movf	fputc@fp^0,w,c
  2907  001DDE  1008               	iorwf	(fputc@fp+1)^0,w,c
  2908  001DE0  B4D8               	btfsc	status,2,c
  2909  001DE2  EFF5  F00E         	goto	u1971
  2910  001DE6  EFF7  F00E         	goto	u1970
  2911  001DEA                     u1971:
  2912  001DEA  EF00  F00F         	goto	l3321
  2913  001DEE                     u1970:
  2914  001DEE  5007               	movf	fputc@fp^0,w,c
  2915  001DF0  1008               	iorwf	(fputc@fp+1)^0,w,c
  2916  001DF2  A4D8               	btfss	status,2,c
  2917  001DF4  EFFE  F00E         	goto	u1981
  2918  001DF8  EF00  F00F         	goto	u1980
  2919  001DFC                     u1981:
  2920  001DFC  EF05  F00F         	goto	l3323
  2921  001E00                     u1980:
  2922  001E00                     l3321:
  2923  001E00  5005               	movf	fputc@c^0,w,c
  2924  001E02  ECBB  F013         	call	_putch
  2925  001E06  EF52  F00F         	goto	l1109
  2926  001E0A                     l3323:
  2927  001E0A  EE20 F004          	lfsr	2,4
  2928  001E0E  5007               	movf	fputc@fp^0,w,c
  2929  001E10  26D9               	addwf	fsr2l,f,c
  2930  001E12  5008               	movf	(fputc@fp+1)^0,w,c
  2931  001E14  22DA               	addwfc	fsr2h,f,c
  2932  001E16  50DE               	movf	postinc2,w,c
  2933  001E18  10DE               	iorwf	postinc2,w,c
  2934  001E1A  B4D8               	btfsc	status,2,c
  2935  001E1C  EF12  F00F         	goto	u1991
  2936  001E20  EF14  F00F         	goto	u1990
  2937  001E24                     u1991:
  2938  001E24  EF2F  F00F         	goto	l3327
  2939  001E28                     u1990:
  2940  001E28  EE20 F004          	lfsr	2,4
  2941  001E2C  5007               	movf	fputc@fp^0,w,c
  2942  001E2E  26D9               	addwf	fsr2l,f,c
  2943  001E30  5008               	movf	(fputc@fp+1)^0,w,c
  2944  001E32  22DA               	addwfc	fsr2h,f,c
  2945  001E34  EE10 F002          	lfsr	1,2
  2946  001E38  5007               	movf	fputc@fp^0,w,c
  2947  001E3A  26E1               	addwf	fsr1l,f,c
  2948  001E3C  5008               	movf	(fputc@fp+1)^0,w,c
  2949  001E3E  22E2               	addwfc	fsr1h,f,c
  2950  001E40  50DE               	movf	postinc2,w,c
  2951  001E42  5CE6               	subwf	postinc1,w,c
  2952  001E44  50E6               	movf	postinc1,w,c
  2953  001E46  0A80               	xorlw	128
  2954  001E48  6E0D               	movwf	(??_fputc+4)^0,c
  2955  001E4A  50DE               	movf	postinc2,w,c
  2956  001E4C  0A80               	xorlw	128
  2957  001E4E  580D               	subwfb	(??_fputc+4)^0,w,c
  2958  001E50  B0D8               	btfsc	status,0,c
  2959  001E52  EF2D  F00F         	goto	u2001
  2960  001E56  EF2F  F00F         	goto	u2000
  2961  001E5A                     u2001:
  2962  001E5A  EF52  F00F         	goto	l1109
  2963  001E5E                     u2000:
  2964  001E5E                     l3327:
  2965  001E5E  EE20 F002          	lfsr	2,2
  2966  001E62  5007               	movf	fputc@fp^0,w,c
  2967  001E64  26D9               	addwf	fsr2l,f,c
  2968  001E66  5008               	movf	(fputc@fp+1)^0,w,c
  2969  001E68  22DA               	addwfc	fsr2h,f,c
  2970  001E6A  CFDE F009          	movff	postinc2,??_fputc
  2971  001E6E  CFDD F00A          	movff	postdec2,??_fputc+1
  2972  001E72  C007  FFD9         	movff	fputc@fp,fsr2l
  2973  001E76  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2974  001E7A  CFDE F00B          	movff	postinc2,??_fputc+2
  2975  001E7E  CFDD F00C          	movff	postdec2,??_fputc+3
  2976  001E82  5009               	movf	??_fputc^0,w,c
  2977  001E84  240B               	addwf	(??_fputc+2)^0,w,c
  2978  001E86  6ED9               	movwf	fsr2l,c
  2979  001E88  500A               	movf	(??_fputc+1)^0,w,c
  2980  001E8A  200C               	addwfc	(??_fputc+3)^0,w,c
  2981  001E8C  6EDA               	movwf	fsr2h,c
  2982  001E8E  C005  FFDF         	movff	fputc@c,indf2
  2983  001E92  EE20 F002          	lfsr	2,2
  2984  001E96  5007               	movf	fputc@fp^0,w,c
  2985  001E98  26D9               	addwf	fsr2l,f,c
  2986  001E9A  5008               	movf	(fputc@fp+1)^0,w,c
  2987  001E9C  22DA               	addwfc	fsr2h,f,c
  2988  001E9E  2ADE               	incf	postinc2,f,c
  2989  001EA0  0E00               	movlw	0
  2990  001EA2  22DD               	addwfc	postdec2,f,c
  2991  001EA4                     l1109:
  2992  001EA4  0012               	return		;funcret
  2993  001EA6                     __end_of_fputc:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _putch *****************
  2997 ;; Defined at:
  2998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  c               1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  c               1    0[COMRAM] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_fputc
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text11
  3027  002776                     __ptext11:
  3028                           	callstack 0
  3029  002776                     _putch:
  3030                           	callstack 22
  3031  002776  0012               	return		;funcret
  3032  002778                     __end_of_putch:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function ___lomod *****************
  3036 ;; Defined at:
  3037 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  dividend        8    4[COMRAM] unsigned long long 
  3040 ;;  divisor         8   12[COMRAM] unsigned long long 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  counter         1   20[COMRAM] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  8    4[COMRAM] unsigned long long 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3052 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;Total ram usage:       17 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_utoa
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text12
  3067  001D0C                     __ptext12:
  3068                           	callstack 0
  3069  001D0C                     ___lomod:
  3070                           	callstack 25
  3071  001D0C  500D               	movf	___lomod@divisor^0,w,c
  3072  001D0E  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  3073  001D10  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  3074  001D12  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  3075  001D14  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  3076  001D16  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  3077  001D18  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  3078  001D1A  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  3079  001D1C  B4D8               	btfsc	status,2,c
  3080  001D1E  EF93  F00E         	goto	u2071
  3081  001D22  EF95  F00E         	goto	u2070
  3082  001D26                     u2071:
  3083  001D26  EFDD  F00E         	goto	l739
  3084  001D2A                     u2070:
  3085  001D2A  0E01               	movlw	1
  3086  001D2C  6E15               	movwf	___lomod@counter^0,c
  3087  001D2E  EFA3  F00E         	goto	l3383
  3088  001D32                     l3381:
  3089  001D32  90D8               	bcf	status,0,c
  3090  001D34  360D               	rlcf	___lomod@divisor^0,f,c
  3091  001D36  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  3092  001D38  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  3093  001D3A  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  3094  001D3C  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  3095  001D3E  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  3096  001D40  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  3097  001D42  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  3098  001D44  2A15               	incf	___lomod@counter^0,f,c
  3099  001D46                     l3383:
  3100  001D46  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  3101  001D48  EFA8  F00E         	goto	u2081
  3102  001D4C  EFAA  F00E         	goto	u2080
  3103  001D50                     u2081:
  3104  001D50  EF99  F00E         	goto	l3381
  3105  001D54                     u2080:
  3106  001D54                     l3385:
  3107  001D54  500D               	movf	___lomod@divisor^0,w,c
  3108  001D56  5C05               	subwf	___lomod@dividend^0,w,c
  3109  001D58  500E               	movf	(___lomod@divisor+1)^0,w,c
  3110  001D5A  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  3111  001D5C  500F               	movf	(___lomod@divisor+2)^0,w,c
  3112  001D5E  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  3113  001D60  5010               	movf	(___lomod@divisor+3)^0,w,c
  3114  001D62  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  3115  001D64  5011               	movf	(___lomod@divisor+4)^0,w,c
  3116  001D66  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  3117  001D68  5012               	movf	(___lomod@divisor+5)^0,w,c
  3118  001D6A  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  3119  001D6C  5013               	movf	(___lomod@divisor+6)^0,w,c
  3120  001D6E  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  3121  001D70  5014               	movf	(___lomod@divisor+7)^0,w,c
  3122  001D72  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  3123  001D74  A0D8               	btfss	status,0,c
  3124  001D76  EFBF  F00E         	goto	u2091
  3125  001D7A  EFC1  F00E         	goto	u2090
  3126  001D7E                     u2091:
  3127  001D7E  EFD1  F00E         	goto	l3389
  3128  001D82                     u2090:
  3129  001D82  500D               	movf	___lomod@divisor^0,w,c
  3130  001D84  5E05               	subwf	___lomod@dividend^0,f,c
  3131  001D86  500E               	movf	(___lomod@divisor+1)^0,w,c
  3132  001D88  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  3133  001D8A  500F               	movf	(___lomod@divisor+2)^0,w,c
  3134  001D8C  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  3135  001D8E  5010               	movf	(___lomod@divisor+3)^0,w,c
  3136  001D90  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  3137  001D92  5011               	movf	(___lomod@divisor+4)^0,w,c
  3138  001D94  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  3139  001D96  5012               	movf	(___lomod@divisor+5)^0,w,c
  3140  001D98  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  3141  001D9A  5013               	movf	(___lomod@divisor+6)^0,w,c
  3142  001D9C  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  3143  001D9E  5014               	movf	(___lomod@divisor+7)^0,w,c
  3144  001DA0  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  3145  001DA2                     l3389:
  3146  001DA2  90D8               	bcf	status,0,c
  3147  001DA4  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  3148  001DA6  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  3149  001DA8  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  3150  001DAA  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  3151  001DAC  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  3152  001DAE  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  3153  001DB0  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  3154  001DB2  320D               	rrcf	___lomod@divisor^0,f,c
  3155  001DB4  2E15               	decfsz	___lomod@counter^0,f,c
  3156  001DB6  EFAA  F00E         	goto	l3385
  3157  001DBA                     l739:
  3158  001DBA  C005  F005         	movff	___lomod@dividend,?___lomod
  3159  001DBE  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  3160  001DC2  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  3161  001DC6  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  3162  001DCA  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  3163  001DCE  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  3164  001DD2  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  3165  001DD6  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  3166  001DDA  0012               	return		;funcret
  3167  001DDC                     __end_of___lomod:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function ___lodiv *****************
  3171 ;; Defined at:
  3172 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  dividend        8    4[COMRAM] unsigned long long 
  3175 ;;  divisor         8   12[COMRAM] unsigned long long 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  quotient        8   20[COMRAM] unsigned long long 
  3178 ;;  counter         1   28[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  8    4[COMRAM] unsigned long long 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:       25 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_utoa
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text13
  3203  001B34                     __ptext13:
  3204                           	callstack 0
  3205  001B34                     ___lodiv:
  3206                           	callstack 25
  3207  001B34  EE20  F015         	lfsr	2,___lodiv@quotient
  3208  001B38  0E07               	movlw	7
  3209  001B3A                     u2031:
  3210  001B3A  6ADE               	clrf	postinc2,c
  3211  001B3C  06E8               	decf	wreg,f,c
  3212  001B3E  E2FD               	bc	u2031
  3213  001B40  500D               	movf	___lodiv@divisor^0,w,c
  3214  001B42  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  3215  001B44  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  3216  001B46  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  3217  001B48  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  3218  001B4A  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  3219  001B4C  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  3220  001B4E  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  3221  001B50  B4D8               	btfsc	status,2,c
  3222  001B52  EFAD  F00D         	goto	u2041
  3223  001B56  EFAF  F00D         	goto	u2040
  3224  001B5A                     u2041:
  3225  001B5A  EF01  F00E         	goto	l729
  3226  001B5E                     u2040:
  3227  001B5E  0E01               	movlw	1
  3228  001B60  6E1D               	movwf	___lodiv@counter^0,c
  3229  001B62  EFBD  F00D         	goto	l3363
  3230  001B66                     l3361:
  3231  001B66  90D8               	bcf	status,0,c
  3232  001B68  360D               	rlcf	___lodiv@divisor^0,f,c
  3233  001B6A  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  3234  001B6C  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  3235  001B6E  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  3236  001B70  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  3237  001B72  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  3238  001B74  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  3239  001B76  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  3240  001B78  2A1D               	incf	___lodiv@counter^0,f,c
  3241  001B7A                     l3363:
  3242  001B7A  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  3243  001B7C  EFC2  F00D         	goto	u2051
  3244  001B80  EFC4  F00D         	goto	u2050
  3245  001B84                     u2051:
  3246  001B84  EFB3  F00D         	goto	l3361
  3247  001B88                     u2050:
  3248  001B88                     l3365:
  3249  001B88  90D8               	bcf	status,0,c
  3250  001B8A  3615               	rlcf	___lodiv@quotient^0,f,c
  3251  001B8C  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  3252  001B8E  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  3253  001B90  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  3254  001B92  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  3255  001B94  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  3256  001B96  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  3257  001B98  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  3258  001B9A  500D               	movf	___lodiv@divisor^0,w,c
  3259  001B9C  5C05               	subwf	___lodiv@dividend^0,w,c
  3260  001B9E  500E               	movf	(___lodiv@divisor+1)^0,w,c
  3261  001BA0  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  3262  001BA2  500F               	movf	(___lodiv@divisor+2)^0,w,c
  3263  001BA4  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  3264  001BA6  5010               	movf	(___lodiv@divisor+3)^0,w,c
  3265  001BA8  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  3266  001BAA  5011               	movf	(___lodiv@divisor+4)^0,w,c
  3267  001BAC  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  3268  001BAE  5012               	movf	(___lodiv@divisor+5)^0,w,c
  3269  001BB0  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  3270  001BB2  5013               	movf	(___lodiv@divisor+6)^0,w,c
  3271  001BB4  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  3272  001BB6  5014               	movf	(___lodiv@divisor+7)^0,w,c
  3273  001BB8  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  3274  001BBA  A0D8               	btfss	status,0,c
  3275  001BBC  EFE2  F00D         	goto	u2061
  3276  001BC0  EFE4  F00D         	goto	u2060
  3277  001BC4                     u2061:
  3278  001BC4  EFF5  F00D         	goto	l3373
  3279  001BC8                     u2060:
  3280  001BC8  500D               	movf	___lodiv@divisor^0,w,c
  3281  001BCA  5E05               	subwf	___lodiv@dividend^0,f,c
  3282  001BCC  500E               	movf	(___lodiv@divisor+1)^0,w,c
  3283  001BCE  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  3284  001BD0  500F               	movf	(___lodiv@divisor+2)^0,w,c
  3285  001BD2  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  3286  001BD4  5010               	movf	(___lodiv@divisor+3)^0,w,c
  3287  001BD6  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  3288  001BD8  5011               	movf	(___lodiv@divisor+4)^0,w,c
  3289  001BDA  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  3290  001BDC  5012               	movf	(___lodiv@divisor+5)^0,w,c
  3291  001BDE  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  3292  001BE0  5013               	movf	(___lodiv@divisor+6)^0,w,c
  3293  001BE2  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  3294  001BE4  5014               	movf	(___lodiv@divisor+7)^0,w,c
  3295  001BE6  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  3296  001BE8  8015               	bsf	___lodiv@quotient^0,0,c
  3297  001BEA                     l3373:
  3298  001BEA  90D8               	bcf	status,0,c
  3299  001BEC  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  3300  001BEE  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  3301  001BF0  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  3302  001BF2  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  3303  001BF4  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  3304  001BF6  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  3305  001BF8  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  3306  001BFA  320D               	rrcf	___lodiv@divisor^0,f,c
  3307  001BFC  2E1D               	decfsz	___lodiv@counter^0,f,c
  3308  001BFE  EFC4  F00D         	goto	l3365
  3309  001C02                     l729:
  3310  001C02  C015  F005         	movff	___lodiv@quotient,?___lodiv
  3311  001C06  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  3312  001C0A  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  3313  001C0E  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  3314  001C12  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  3315  001C16  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  3316  001C1A  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  3317  001C1E  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  3318  001C22  0012               	return		;funcret
  3319  001C24                     __end_of___lodiv:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _atoi *****************
  3323 ;; Defined at:
  3324 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3327 ;;		 -> STR_1(20), 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  n               2   24[COMRAM] int 
  3330 ;;  neg             2   17[COMRAM] int 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2   11[COMRAM] int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:       15 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    2
  3347 ;; This function calls:
  3348 ;;		___wmul
  3349 ;;		_isdigit
  3350 ;;		_isspace
  3351 ;; This function is called by:
  3352 ;;		_vfpfcnvrt
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text14
  3357  0019A4                     __ptext14:
  3358                           	callstack 0
  3359  0019A4                     _atoi:
  3360                           	callstack 25
  3361  0019A4  0E00               	movlw	0
  3362  0019A6  6E1A               	movwf	(atoi@n+1)^0,c
  3363  0019A8  0E00               	movlw	0
  3364  0019AA  6E19               	movwf	atoi@n^0,c
  3365  0019AC  0E00               	movlw	0
  3366  0019AE  6E13               	movwf	(atoi@neg+1)^0,c
  3367  0019B0  0E00               	movlw	0
  3368  0019B2  6E12               	movwf	atoi@neg^0,c
  3369  0019B4  EFDE  F00C         	goto	l3471
  3370  0019B8                     l3469:
  3371  0019B8  4A0C               	infsnz	atoi@s^0,f,c
  3372  0019BA  2A0D               	incf	(atoi@s+1)^0,f,c
  3373  0019BC                     l3471:
  3374  0019BC  0E01               	movlw	1
  3375  0019BE  6E18               	movwf	_atoi$1250^0,c
  3376  0019C0  C00C  FFF6         	movff	atoi@s,tblptrl
  3377  0019C4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3378  0019C8                     	if	0	;tblptru may be non-zero
  3379  0019C8                     	endif
  3380  0019C8                     	if	0	;tblptru may be non-zero
  3381  0019C8                     	endif
  3382  0019C8  0008               	tblrd		*
  3383  0019CA  50F5               	movf	tablat,w,c
  3384  0019CC  0A20               	xorlw	32
  3385  0019CE  B4D8               	btfsc	status,2,c
  3386  0019D0  EFEC  F00C         	goto	u2251
  3387  0019D4  EFEE  F00C         	goto	u2250
  3388  0019D8                     u2251:
  3389  0019D8  EF0B  F00D         	goto	l3479
  3390  0019DC                     u2250:
  3391  0019DC  0EF7               	movlw	247
  3392  0019DE  6E0E               	movwf	??_atoi^0,c
  3393  0019E0  0EFF               	movlw	255
  3394  0019E2  6E0F               	movwf	(??_atoi+1)^0,c
  3395  0019E4  C00C  FFF6         	movff	atoi@s,tblptrl
  3396  0019E8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3397  0019EC                     	if	0	;tblptru may be non-zero
  3398  0019EC                     	endif
  3399  0019EC                     	if	0	;tblptru may be non-zero
  3400  0019EC                     	endif
  3401  0019EC  0008               	tblrd		*
  3402  0019EE  50F5               	movf	tablat,w,c
  3403  0019F0  6E10               	movwf	(??_atoi+2)^0,c
  3404  0019F2  6A11               	clrf	(??_atoi+3)^0,c
  3405  0019F4  500E               	movf	??_atoi^0,w,c
  3406  0019F6  2610               	addwf	(??_atoi+2)^0,f,c
  3407  0019F8  500F               	movf	(??_atoi+1)^0,w,c
  3408  0019FA  2211               	addwfc	(??_atoi+3)^0,f,c
  3409  0019FC  5011               	movf	(??_atoi+3)^0,w,c
  3410  0019FE  E109               	bnz	u2260
  3411  001A00  0E05               	movlw	5
  3412  001A02  5C10               	subwf	(??_atoi+2)^0,w,c
  3413  001A04  A0D8               	btfss	status,0,c
  3414  001A06  EF07  F00D         	goto	u2261
  3415  001A0A  EF09  F00D         	goto	u2260
  3416  001A0E                     u2261:
  3417  001A0E  EF0B  F00D         	goto	l3479
  3418  001A12                     u2260:
  3419  001A12  0E00               	movlw	0
  3420  001A14  6E18               	movwf	_atoi$1250^0,c
  3421  001A16                     l3479:
  3422  001A16  C018  F014         	movff	_atoi$1250,_atoi$1249
  3423  001A1A  6A15               	clrf	(_atoi$1249+1)^0,c
  3424  001A1C  5014               	movf	_atoi$1249^0,w,c
  3425  001A1E  1015               	iorwf	(_atoi$1249+1)^0,w,c
  3426  001A20  A4D8               	btfss	status,2,c
  3427  001A22  EF15  F00D         	goto	u2271
  3428  001A26  EF17  F00D         	goto	u2270
  3429  001A2A                     u2271:
  3430  001A2A  EFDC  F00C         	goto	l3469
  3431  001A2E                     u2270:
  3432  001A2E  EF21  F00D         	goto	l3489
  3433  001A32                     l3485:
  3434  001A32  0E00               	movlw	0
  3435  001A34  6E13               	movwf	(atoi@neg+1)^0,c
  3436  001A36  0E01               	movlw	1
  3437  001A38  6E12               	movwf	atoi@neg^0,c
  3438  001A3A                     l3487:
  3439  001A3A  4A0C               	infsnz	atoi@s^0,f,c
  3440  001A3C  2A0D               	incf	(atoi@s+1)^0,f,c
  3441  001A3E  EF56  F00D         	goto	l3495
  3442  001A42                     l3489:
  3443  001A42  C00C  FFF6         	movff	atoi@s,tblptrl
  3444  001A46  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3445  001A4A                     	if	0	;tblptru may be non-zero
  3446  001A4A                     	endif
  3447  001A4A                     	if	0	;tblptru may be non-zero
  3448  001A4A                     	endif
  3449  001A4A  0008               	tblrd		*
  3450  001A4C  50F5               	movf	tablat,w,c
  3451  001A4E  6E0E               	movwf	??_atoi^0,c
  3452  001A50  6A0F               	clrf	(??_atoi+1)^0,c
  3453                           
  3454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3455                           ; Switch size 1, requested type "simple"
  3456                           ; Number of cases is 1, Range of values is 0 to 0
  3457                           ; switch strategies available:
  3458                           ; Name         Instructions Cycles
  3459                           ; simple_byte            4     3 (average)
  3460                           ;	Chosen strategy is simple_byte
  3461  001A52  500F               	movf	(??_atoi+1)^0,w,c
  3462  001A54  0A00               	xorlw	0	; case 0
  3463  001A56  B4D8               	btfsc	status,2,c
  3464  001A58  EF30  F00D         	goto	l4375
  3465  001A5C  EF56  F00D         	goto	l3495
  3466  001A60                     l4375:
  3467                           
  3468                           ; Switch size 1, requested type "simple"
  3469                           ; Number of cases is 2, Range of values is 43 to 45
  3470                           ; switch strategies available:
  3471                           ; Name         Instructions Cycles
  3472                           ; simple_byte            7     4 (average)
  3473                           ;	Chosen strategy is simple_byte
  3474  001A60  500E               	movf	??_atoi^0,w,c
  3475  001A62  0A2B               	xorlw	43	; case 43
  3476  001A64  B4D8               	btfsc	status,2,c
  3477  001A66  EF1D  F00D         	goto	l3487
  3478  001A6A  0A06               	xorlw	6	; case 45
  3479  001A6C  B4D8               	btfsc	status,2,c
  3480  001A6E  EF19  F00D         	goto	l3485
  3481  001A72  EF56  F00D         	goto	l3495
  3482  001A76                     l3491:
  3483  001A76  C019  F005         	movff	atoi@n,___wmul@multiplier
  3484  001A7A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  3485  001A7E  0E00               	movlw	0
  3486  001A80  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3487  001A82  0E0A               	movlw	10
  3488  001A84  6E07               	movwf	___wmul@multiplicand^0,c
  3489  001A86  EC89  F013         	call	___wmul	;wreg free
  3490  001A8A  C00C  FFF6         	movff	atoi@s,tblptrl
  3491  001A8E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3492  001A92                     	if	0	;tblptru may be non-zero
  3493  001A92                     	endif
  3494  001A92                     	if	0	;tblptru may be non-zero
  3495  001A92                     	endif
  3496  001A92  0008               	tblrd		*
  3497  001A94  50F5               	movf	tablat,w,c
  3498  001A96  5E05               	subwf	?___wmul^0,f,c
  3499  001A98  0E00               	movlw	0
  3500  001A9A  5A06               	subwfb	(?___wmul+1)^0,f,c
  3501  001A9C  0E30               	movlw	48
  3502  001A9E  2405               	addwf	?___wmul^0,w,c
  3503  001AA0  6E19               	movwf	atoi@n^0,c
  3504  001AA2  0E00               	movlw	0
  3505  001AA4  2006               	addwfc	(?___wmul+1)^0,w,c
  3506  001AA6  6E1A               	movwf	(atoi@n+1)^0,c
  3507  001AA8  EF1D  F00D         	goto	l3487
  3508  001AAC                     l3495:
  3509  001AAC  0ED0               	movlw	208
  3510  001AAE  6E0E               	movwf	??_atoi^0,c
  3511  001AB0  0EFF               	movlw	255
  3512  001AB2  6E0F               	movwf	(??_atoi+1)^0,c
  3513  001AB4  C00C  FFF6         	movff	atoi@s,tblptrl
  3514  001AB8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3515  001ABC                     	if	0	;tblptru may be non-zero
  3516  001ABC                     	endif
  3517  001ABC                     	if	0	;tblptru may be non-zero
  3518  001ABC                     	endif
  3519  001ABC  0008               	tblrd		*
  3520  001ABE  50F5               	movf	tablat,w,c
  3521  001AC0  6E10               	movwf	(??_atoi+2)^0,c
  3522  001AC2  6A11               	clrf	(??_atoi+3)^0,c
  3523  001AC4  500E               	movf	??_atoi^0,w,c
  3524  001AC6  2610               	addwf	(??_atoi+2)^0,f,c
  3525  001AC8  500F               	movf	(??_atoi+1)^0,w,c
  3526  001ACA  2211               	addwfc	(??_atoi+3)^0,f,c
  3527  001ACC  5011               	movf	(??_atoi+3)^0,w,c
  3528  001ACE  E10A               	bnz	u2280
  3529  001AD0  0E0A               	movlw	10
  3530  001AD2  5C10               	subwf	(??_atoi+2)^0,w,c
  3531  001AD4  A0D8               	btfss	status,0,c
  3532  001AD6  EF6F  F00D         	goto	u2281
  3533  001ADA  EF72  F00D         	goto	u2280
  3534  001ADE                     u2281:
  3535  001ADE  0E01               	movlw	1
  3536  001AE0  EF73  F00D         	goto	u2290
  3537  001AE4                     u2280:
  3538  001AE4  0E00               	movlw	0
  3539  001AE6                     u2290:
  3540  001AE6  6E16               	movwf	_atoi$1251^0,c
  3541  001AE8  6A17               	clrf	(_atoi$1251+1)^0,c
  3542  001AEA  5016               	movf	_atoi$1251^0,w,c
  3543  001AEC  1017               	iorwf	(_atoi$1251+1)^0,w,c
  3544  001AEE  A4D8               	btfss	status,2,c
  3545  001AF0  EF7C  F00D         	goto	u2301
  3546  001AF4  EF7E  F00D         	goto	u2300
  3547  001AF8                     u2301:
  3548  001AF8  EF3B  F00D         	goto	l3491
  3549  001AFC                     u2300:
  3550  001AFC  5012               	movf	atoi@neg^0,w,c
  3551  001AFE  1013               	iorwf	(atoi@neg+1)^0,w,c
  3552  001B00  A4D8               	btfss	status,2,c
  3553  001B02  EF85  F00D         	goto	u2311
  3554  001B06  EF87  F00D         	goto	u2310
  3555  001B0A                     u2311:
  3556  001B0A  EF95  F00D         	goto	l1080
  3557  001B0E                     u2310:
  3558  001B0E  C019  F00E         	movff	atoi@n,??_atoi
  3559  001B12  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  3560  001B16  1E0E               	comf	??_atoi^0,f,c
  3561  001B18  1E0F               	comf	(??_atoi+1)^0,f,c
  3562  001B1A  4A0E               	infsnz	??_atoi^0,f,c
  3563  001B1C  2A0F               	incf	(??_atoi+1)^0,f,c
  3564  001B1E  C00E  F00C         	movff	??_atoi,?_atoi
  3565  001B22  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  3566  001B26  EF99  F00D         	goto	l1083
  3567  001B2A                     l1080:
  3568  001B2A  C019  F00C         	movff	atoi@n,?_atoi
  3569  001B2E  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  3570  001B32                     l1083:
  3571  001B32  0012               	return		;funcret
  3572  001B34                     __end_of_atoi:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _isspace *****************
  3576 ;; Defined at:
  3577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  c               2    4[COMRAM] int 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    4[COMRAM] int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;Total ram usage:        7 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_atoi
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text15
  3606  0024B6                     __ptext15:
  3607                           	callstack 0
  3608  0024B6                     _isspace:
  3609                           	callstack 25
  3610  0024B6  0E01               	movlw	1
  3611  0024B8  6E0B               	movwf	_isspace$1267^0,c
  3612  0024BA  0E20               	movlw	32
  3613  0024BC  1805               	xorwf	isspace@c^0,w,c
  3614  0024BE  1006               	iorwf	(isspace@c+1)^0,w,c
  3615  0024C0  B4D8               	btfsc	status,2,c
  3616  0024C2  EF65  F012         	goto	u2161
  3617  0024C6  EF67  F012         	goto	u2160
  3618  0024CA                     u2161:
  3619  0024CA  EF80  F012         	goto	l3427
  3620  0024CE                     u2160:
  3621  0024CE  0EF7               	movlw	247
  3622  0024D0  6E07               	movwf	??_isspace^0,c
  3623  0024D2  0EFF               	movlw	255
  3624  0024D4  6E08               	movwf	(??_isspace+1)^0,c
  3625  0024D6  C005  F009         	movff	isspace@c,??_isspace+2
  3626  0024DA  C006  F00A         	movff	isspace@c+1,??_isspace+3
  3627  0024DE  5007               	movf	??_isspace^0,w,c
  3628  0024E0  2609               	addwf	(??_isspace+2)^0,f,c
  3629  0024E2  5008               	movf	(??_isspace+1)^0,w,c
  3630  0024E4  220A               	addwfc	(??_isspace+3)^0,f,c
  3631  0024E6  500A               	movf	(??_isspace+3)^0,w,c
  3632  0024E8  E109               	bnz	u2170
  3633  0024EA  0E05               	movlw	5
  3634  0024EC  5C09               	subwf	(??_isspace+2)^0,w,c
  3635  0024EE  A0D8               	btfss	status,0,c
  3636  0024F0  EF7C  F012         	goto	u2171
  3637  0024F4  EF7E  F012         	goto	u2170
  3638  0024F8                     u2171:
  3639  0024F8  EF80  F012         	goto	l3427
  3640  0024FC                     u2170:
  3641  0024FC  0E00               	movlw	0
  3642  0024FE  6E0B               	movwf	_isspace$1267^0,c
  3643  002500                     l3427:
  3644  002500  C00B  F005         	movff	_isspace$1267,?_isspace
  3645  002504  6A06               	clrf	(?_isspace+1)^0,c
  3646  002506  0012               	return		;funcret
  3647  002508                     __end_of_isspace:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function _isdigit *****************
  3651 ;; Defined at:
  3652 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  c               2    4[COMRAM] int 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  2    4[COMRAM] int 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;Total ram usage:        6 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_vfpfcnvrt
  3677 ;;		_atoi
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text16
  3682  002626                     __ptext16:
  3683                           	callstack 0
  3684  002626                     _isdigit:
  3685                           	callstack 26
  3686  002626  0ED0               	movlw	208
  3687  002628  6E07               	movwf	??_isdigit^0,c
  3688  00262A  0EFF               	movlw	255
  3689  00262C  6E08               	movwf	(??_isdigit+1)^0,c
  3690  00262E  C005  F009         	movff	isdigit@c,??_isdigit+2
  3691  002632  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  3692  002636  5007               	movf	??_isdigit^0,w,c
  3693  002638  2609               	addwf	(??_isdigit+2)^0,f,c
  3694  00263A  5008               	movf	(??_isdigit+1)^0,w,c
  3695  00263C  220A               	addwfc	(??_isdigit+3)^0,f,c
  3696  00263E  500A               	movf	(??_isdigit+3)^0,w,c
  3697  002640  E10A               	bnz	u2140
  3698  002642  0E0A               	movlw	10
  3699  002644  5C09               	subwf	(??_isdigit+2)^0,w,c
  3700  002646  A0D8               	btfss	status,0,c
  3701  002648  EF28  F013         	goto	u2141
  3702  00264C  EF2B  F013         	goto	u2140
  3703  002650                     u2141:
  3704  002650  0E01               	movlw	1
  3705  002652  EF2C  F013         	goto	u2150
  3706  002656                     u2140:
  3707  002656  0E00               	movlw	0
  3708  002658                     u2150:
  3709  002658  6E05               	movwf	?_isdigit^0,c
  3710  00265A  6A06               	clrf	(?_isdigit+1)^0,c
  3711  00265C  0012               	return		;funcret
  3712  00265E                     __end_of_isdigit:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function ___wmul *****************
  3716 ;; Defined at:
  3717 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  multiplier      2    4[COMRAM] unsigned int 
  3720 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  product         2    8[COMRAM] unsigned int 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2    4[COMRAM] unsigned int 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, prodl, prodh
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:        6 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_atoi
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text17
  3747  002712                     __ptext17:
  3748                           	callstack 0
  3749  002712                     ___wmul:
  3750                           	callstack 25
  3751  002712  5005               	movf	___wmul@multiplier^0,w,c
  3752  002714  0207               	mulwf	___wmul@multiplicand^0,c
  3753  002716  CFF3 F009          	movff	prodl,___wmul@product
  3754  00271A  CFF4 F00A          	movff	prodh,___wmul@product+1
  3755  00271E  5005               	movf	___wmul@multiplier^0,w,c
  3756  002720  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3757  002722  50F3               	movf	243,w,c
  3758  002724  260A               	addwf	(___wmul@product+1)^0,f,c
  3759  002726  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3760  002728  0207               	mulwf	___wmul@multiplicand^0,c
  3761  00272A  50F3               	movf	243,w,c
  3762  00272C  260A               	addwf	(___wmul@product+1)^0,f,c
  3763  00272E  C009  F005         	movff	___wmul@product,?___wmul
  3764  002732  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3765  002736  0012               	return		;funcret
  3766  002738                     __end_of___wmul:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _hex_to_bit_string *****************
  3770 ;; Defined at:
  3771 ;;		line 324 in file "ece376_hw9_ccp_capt.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  hex_val         1    wreg     unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  hex_val         1    8[COMRAM] unsigned char 
  3776 ;;  i               1   11[COMRAM] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2    4[COMRAM] PTR unsigned char 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;Total ram usage:        8 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    1
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text18
  3801  0022B0                     __ptext18:
  3802                           	callstack 0
  3803  0022B0                     _hex_to_bit_string:
  3804                           	callstack 29
  3805                           
  3806                           ;incstack = 0
  3807                           ;hex_to_bit_string@hex_val stored from wreg
  3808  0022B0  6E09               	movwf	hex_to_bit_string@hex_val^0,c
  3809  0022B2                     
  3810                           ;ece376_hw9_ccp_capt.c: 326:     static char bit_string[9];;ece376_hw9_ccp_capt.c: 328: 
      +                              for(uint8_t i=0; i<8; i++){
  3811  0022B2  0E00               	movlw	0
  3812  0022B4  6E0C               	movwf	hex_to_bit_string@i^0,c
  3813  0022B6                     l3829:
  3814                           
  3815                           ;ece376_hw9_ccp_capt.c: 329:         bit_string[i] = (hex_val & (0x1 << (7-i))) ? '1' : 
      +                          '0';
  3816  0022B6  500C               	movf	hex_to_bit_string@i^0,w,c
  3817  0022B8  0807               	sublw	7
  3818  0022BA  6E07               	movwf	??_hex_to_bit_string^0,c
  3819  0022BC  0E01               	movlw	1
  3820  0022BE  6E08               	movwf	(??_hex_to_bit_string+1)^0,c
  3821  0022C0  2A07               	incf	??_hex_to_bit_string^0,f,c
  3822  0022C2  EF65  F011         	goto	u2544
  3823  0022C6                     u2545:
  3824  0022C6  90D8               	bcf	status,0,c
  3825  0022C8  3608               	rlcf	(??_hex_to_bit_string+1)^0,f,c
  3826  0022CA                     u2544:
  3827  0022CA  2E07               	decfsz	??_hex_to_bit_string^0,f,c
  3828  0022CC  EF63  F011         	goto	u2545
  3829  0022D0  5008               	movf	(??_hex_to_bit_string+1)^0,w,c
  3830  0022D2  1409               	andwf	hex_to_bit_string@hex_val^0,w,c
  3831  0022D4  0900               	iorlw	0
  3832  0022D6  A4D8               	btfss	status,2,c
  3833  0022D8  EF70  F011         	goto	u2551
  3834  0022DC  EF72  F011         	goto	u2550
  3835  0022E0                     u2551:
  3836  0022E0  EF78  F011         	goto	l3833
  3837  0022E4                     u2550:
  3838  0022E4  0E00               	movlw	0
  3839  0022E6  6E0B               	movwf	(_hex_to_bit_string$702+1)^0,c
  3840  0022E8  0E30               	movlw	48
  3841  0022EA  6E0A               	movwf	_hex_to_bit_string$702^0,c
  3842  0022EC  EF7C  F011         	goto	l3835
  3843  0022F0                     l3833:
  3844  0022F0  0E00               	movlw	0
  3845  0022F2  6E0B               	movwf	(_hex_to_bit_string$702+1)^0,c
  3846  0022F4  0E31               	movlw	49
  3847  0022F6  6E0A               	movwf	_hex_to_bit_string$702^0,c
  3848  0022F8                     l3835:
  3849  0022F8  0E9D               	movlw	low hex_to_bit_string@bit_string
  3850  0022FA  240C               	addwf	hex_to_bit_string@i^0,w,c
  3851  0022FC  6ED9               	movwf	fsr2l,c
  3852  0022FE  6ADA               	clrf	fsr2h,c
  3853  002300  0E00               	movlw	high hex_to_bit_string@bit_string
  3854  002302  22DA               	addwfc	fsr2h,f,c
  3855  002304  C00A  FFDF         	movff	_hex_to_bit_string$702,indf2
  3856  002308                     
  3857                           ;ece376_hw9_ccp_capt.c: 330:     }
  3858  002308  2A0C               	incf	hex_to_bit_string@i^0,f,c
  3859  00230A  0E07               	movlw	7
  3860  00230C  640C               	cpfsgt	hex_to_bit_string@i^0,c
  3861  00230E  EF8B  F011         	goto	u2561
  3862  002312  EF8D  F011         	goto	u2560
  3863  002316                     u2561:
  3864  002316  EF5B  F011         	goto	l3829
  3865  00231A                     u2560:
  3866  00231A                     
  3867                           ;ece376_hw9_ccp_capt.c: 331:     bit_string[8] = '\0';
  3868  00231A  0E00               	movlw	0
  3869  00231C  0100               	movlb	0	; () banked
  3870  00231E  6FA5               	movwf	(hex_to_bit_string@bit_string+8)& (0+255),b
  3871  002320                     
  3872                           ; BSR set to: 0
  3873                           ;ece376_hw9_ccp_capt.c: 333:     return bit_string;
  3874  002320  0E9D               	movlw	low hex_to_bit_string@bit_string
  3875  002322  6E05               	movwf	?_hex_to_bit_string^0,c
  3876  002324  0E00               	movlw	high hex_to_bit_string@bit_string
  3877  002326  6E06               	movwf	(?_hex_to_bit_string+1)^0,c
  3878  002328                     
  3879                           ; BSR set to: 0
  3880  002328  0012               	return		;funcret
  3881  00232A                     __end_of_hex_to_bit_string:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function ___lwdiv *****************
  3885 ;; Defined at:
  3886 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  dividend        2   13[COMRAM] unsigned int 
  3889 ;;  divisor         2   15[COMRAM] unsigned int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  quotient        2   18[COMRAM] unsigned int 
  3892 ;;  counter         1   17[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  2   13[COMRAM] unsigned int 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        7 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    1
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text19
  3917  00232A                     __ptext19:
  3918                           	callstack 0
  3919  00232A                     ___lwdiv:
  3920                           	callstack 29
  3921  00232A  0E00               	movlw	0
  3922  00232C  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  3923  00232E  0E00               	movlw	0
  3924  002330  6E13               	movwf	___lwdiv@quotient^0,c
  3925  002332  5010               	movf	___lwdiv@divisor^0,w,c
  3926  002334  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3927  002336  B4D8               	btfsc	status,2,c
  3928  002338  EFA0  F011         	goto	u2631
  3929  00233C  EFA2  F011         	goto	u2630
  3930  002340                     u2631:
  3931  002340  EFCA  F011         	goto	l782
  3932  002344                     u2630:
  3933  002344  0E01               	movlw	1
  3934  002346  6E12               	movwf	___lwdiv@counter^0,c
  3935  002348  EFAA  F011         	goto	l3909
  3936  00234C                     l3907:
  3937  00234C  90D8               	bcf	status,0,c
  3938  00234E  3610               	rlcf	___lwdiv@divisor^0,f,c
  3939  002350  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3940  002352  2A12               	incf	___lwdiv@counter^0,f,c
  3941  002354                     l3909:
  3942  002354  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  3943  002356  EFAF  F011         	goto	u2641
  3944  00235A  EFB1  F011         	goto	u2640
  3945  00235E                     u2641:
  3946  00235E  EFA6  F011         	goto	l3907
  3947  002362                     u2640:
  3948  002362                     l3911:
  3949  002362  90D8               	bcf	status,0,c
  3950  002364  3613               	rlcf	___lwdiv@quotient^0,f,c
  3951  002366  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3952  002368  5010               	movf	___lwdiv@divisor^0,w,c
  3953  00236A  5C0E               	subwf	___lwdiv@dividend^0,w,c
  3954  00236C  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  3955  00236E  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3956  002370  A0D8               	btfss	status,0,c
  3957  002372  EFBD  F011         	goto	u2651
  3958  002376  EFBF  F011         	goto	u2650
  3959  00237A                     u2651:
  3960  00237A  EFC4  F011         	goto	l3919
  3961  00237E                     u2650:
  3962  00237E  5010               	movf	___lwdiv@divisor^0,w,c
  3963  002380  5E0E               	subwf	___lwdiv@dividend^0,f,c
  3964  002382  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  3965  002384  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3966  002386  8013               	bsf	___lwdiv@quotient^0,0,c
  3967  002388                     l3919:
  3968  002388  90D8               	bcf	status,0,c
  3969  00238A  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3970  00238C  3210               	rrcf	___lwdiv@divisor^0,f,c
  3971  00238E  2E12               	decfsz	___lwdiv@counter^0,f,c
  3972  002390  EFB1  F011         	goto	l3911
  3973  002394                     l782:
  3974  002394  C013  F00E         	movff	___lwdiv@quotient,?___lwdiv
  3975  002398  C014  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3976  00239C  0012               	return		;funcret
  3977  00239E                     __end_of___lwdiv:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function ___llmod *****************
  3981 ;; Defined at:
  3982 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\llmod.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  dividend        4    4[COMRAM] unsigned long 
  3985 ;;  divisor         4    8[COMRAM] unsigned long 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  counter         1   12[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  4    4[COMRAM] unsigned long 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;Total ram usage:        9 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text20
  4012  002228                     __ptext20:
  4013                           	callstack 0
  4014  002228                     ___llmod:
  4015                           	callstack 29
  4016  002228  5009               	movf	___llmod@divisor^0,w,c
  4017  00222A  100A               	iorwf	(___llmod@divisor+1)^0,w,c
  4018  00222C  100B               	iorwf	(___llmod@divisor+2)^0,w,c
  4019  00222E  100C               	iorwf	(___llmod@divisor+3)^0,w,c
  4020  002230  B4D8               	btfsc	status,2,c
  4021  002232  EF1D  F011         	goto	u2601
  4022  002236  EF1F  F011         	goto	u2600
  4023  00223A                     u2601:
  4024  00223A  EF4F  F011         	goto	l711
  4025  00223E                     u2600:
  4026  00223E  0E01               	movlw	1
  4027  002240  6E0D               	movwf	___llmod@counter^0,c
  4028  002242  EF29  F011         	goto	l3891
  4029  002246                     l3889:
  4030  002246  90D8               	bcf	status,0,c
  4031  002248  3609               	rlcf	___llmod@divisor^0,f,c
  4032  00224A  360A               	rlcf	(___llmod@divisor+1)^0,f,c
  4033  00224C  360B               	rlcf	(___llmod@divisor+2)^0,f,c
  4034  00224E  360C               	rlcf	(___llmod@divisor+3)^0,f,c
  4035  002250  2A0D               	incf	___llmod@counter^0,f,c
  4036  002252                     l3891:
  4037  002252  AE0C               	btfss	(___llmod@divisor+3)^0,7,c
  4038  002254  EF2E  F011         	goto	u2611
  4039  002258  EF30  F011         	goto	u2610
  4040  00225C                     u2611:
  4041  00225C  EF23  F011         	goto	l3889
  4042  002260                     u2610:
  4043  002260                     l3893:
  4044  002260  5009               	movf	___llmod@divisor^0,w,c
  4045  002262  5C05               	subwf	___llmod@dividend^0,w,c
  4046  002264  500A               	movf	(___llmod@divisor+1)^0,w,c
  4047  002266  5806               	subwfb	(___llmod@dividend+1)^0,w,c
  4048  002268  500B               	movf	(___llmod@divisor+2)^0,w,c
  4049  00226A  5807               	subwfb	(___llmod@dividend+2)^0,w,c
  4050  00226C  500C               	movf	(___llmod@divisor+3)^0,w,c
  4051  00226E  5808               	subwfb	(___llmod@dividend+3)^0,w,c
  4052  002270  A0D8               	btfss	status,0,c
  4053  002272  EF3D  F011         	goto	u2621
  4054  002276  EF3F  F011         	goto	u2620
  4055  00227A                     u2621:
  4056  00227A  EF47  F011         	goto	l3897
  4057  00227E                     u2620:
  4058  00227E  5009               	movf	___llmod@divisor^0,w,c
  4059  002280  5E05               	subwf	___llmod@dividend^0,f,c
  4060  002282  500A               	movf	(___llmod@divisor+1)^0,w,c
  4061  002284  5A06               	subwfb	(___llmod@dividend+1)^0,f,c
  4062  002286  500B               	movf	(___llmod@divisor+2)^0,w,c
  4063  002288  5A07               	subwfb	(___llmod@dividend+2)^0,f,c
  4064  00228A  500C               	movf	(___llmod@divisor+3)^0,w,c
  4065  00228C  5A08               	subwfb	(___llmod@dividend+3)^0,f,c
  4066  00228E                     l3897:
  4067  00228E  90D8               	bcf	status,0,c
  4068  002290  320C               	rrcf	(___llmod@divisor+3)^0,f,c
  4069  002292  320B               	rrcf	(___llmod@divisor+2)^0,f,c
  4070  002294  320A               	rrcf	(___llmod@divisor+1)^0,f,c
  4071  002296  3209               	rrcf	___llmod@divisor^0,f,c
  4072  002298  2E0D               	decfsz	___llmod@counter^0,f,c
  4073  00229A  EF30  F011         	goto	l3893
  4074  00229E                     l711:
  4075  00229E  C005  F005         	movff	___llmod@dividend,?___llmod
  4076  0022A2  C006  F006         	movff	___llmod@dividend+1,?___llmod+1
  4077  0022A6  C007  F007         	movff	___llmod@dividend+2,?___llmod+2
  4078  0022AA  C008  F008         	movff	___llmod@dividend+3,?___llmod+3
  4079  0022AE  0012               	return		;funcret
  4080  0022B0                     __end_of___llmod:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function ___lldiv *****************
  4084 ;; Defined at:
  4085 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  dividend        4   13[COMRAM] unsigned long 
  4088 ;;  divisor         4   17[COMRAM] unsigned long 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  quotient        4   21[COMRAM] unsigned long 
  4091 ;;  counter         1   25[COMRAM] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  4   13[COMRAM] unsigned long 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4101 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;Total ram usage:       13 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text21
  4116  0020FA                     __ptext21:
  4117                           	callstack 0
  4118  0020FA                     ___lldiv:
  4119                           	callstack 29
  4120  0020FA  0E00               	movlw	0
  4121  0020FC  6E16               	movwf	___lldiv@quotient^0,c
  4122  0020FE  0E00               	movlw	0
  4123  002100  6E17               	movwf	(___lldiv@quotient+1)^0,c
  4124  002102  0E00               	movlw	0
  4125  002104  6E18               	movwf	(___lldiv@quotient+2)^0,c
  4126  002106  0E00               	movlw	0
  4127  002108  6E19               	movwf	(___lldiv@quotient+3)^0,c
  4128  00210A  5012               	movf	___lldiv@divisor^0,w,c
  4129  00210C  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  4130  00210E  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  4131  002110  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  4132  002112  B4D8               	btfsc	status,2,c
  4133  002114  EF8E  F010         	goto	u2571
  4134  002118  EF90  F010         	goto	u2570
  4135  00211C                     u2571:
  4136  00211C  EFC6  F010         	goto	l318
  4137  002120                     u2570:
  4138  002120  0E01               	movlw	1
  4139  002122  6E1A               	movwf	___lldiv@counter^0,c
  4140  002124  EF9A  F010         	goto	l3871
  4141  002128                     l3869:
  4142  002128  90D8               	bcf	status,0,c
  4143  00212A  3612               	rlcf	___lldiv@divisor^0,f,c
  4144  00212C  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  4145  00212E  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  4146  002130  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  4147  002132  2A1A               	incf	___lldiv@counter^0,f,c
  4148  002134                     l3871:
  4149  002134  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  4150  002136  EF9F  F010         	goto	u2581
  4151  00213A  EFA1  F010         	goto	u2580
  4152  00213E                     u2581:
  4153  00213E  EF94  F010         	goto	l3869
  4154  002142                     u2580:
  4155  002142                     l3873:
  4156  002142  90D8               	bcf	status,0,c
  4157  002144  3616               	rlcf	___lldiv@quotient^0,f,c
  4158  002146  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  4159  002148  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  4160  00214A  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  4161  00214C  5012               	movf	___lldiv@divisor^0,w,c
  4162  00214E  5C0E               	subwf	___lldiv@dividend^0,w,c
  4163  002150  5013               	movf	(___lldiv@divisor+1)^0,w,c
  4164  002152  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  4165  002154  5014               	movf	(___lldiv@divisor+2)^0,w,c
  4166  002156  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  4167  002158  5015               	movf	(___lldiv@divisor+3)^0,w,c
  4168  00215A  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  4169  00215C  A0D8               	btfss	status,0,c
  4170  00215E  EFB3  F010         	goto	u2591
  4171  002162  EFB5  F010         	goto	u2590
  4172  002166                     u2591:
  4173  002166  EFBE  F010         	goto	l3881
  4174  00216A                     u2590:
  4175  00216A  5012               	movf	___lldiv@divisor^0,w,c
  4176  00216C  5E0E               	subwf	___lldiv@dividend^0,f,c
  4177  00216E  5013               	movf	(___lldiv@divisor+1)^0,w,c
  4178  002170  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  4179  002172  5014               	movf	(___lldiv@divisor+2)^0,w,c
  4180  002174  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  4181  002176  5015               	movf	(___lldiv@divisor+3)^0,w,c
  4182  002178  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  4183  00217A  8016               	bsf	___lldiv@quotient^0,0,c
  4184  00217C                     l3881:
  4185  00217C  90D8               	bcf	status,0,c
  4186  00217E  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  4187  002180  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  4188  002182  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  4189  002184  3212               	rrcf	___lldiv@divisor^0,f,c
  4190  002186  2E1A               	decfsz	___lldiv@counter^0,f,c
  4191  002188  EFA1  F010         	goto	l3873
  4192  00218C                     l318:
  4193  00218C  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  4194  002190  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  4195  002194  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  4196  002198  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  4197  00219C  0012               	return		;funcret
  4198  00219E                     __end_of___lldiv:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _Timer1_Init_Default *****************
  4202 ;; Defined at:
  4203 ;;		line 31 in file "src/timer.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    1
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text22
  4232  002768                     __ptext22:
  4233                           	callstack 0
  4234  002768                     _Timer1_Init_Default:
  4235                           	callstack 29
  4236  002768                     
  4237                           ;src/timer.c: 32:     T1CON = 0x80;
  4238  002768  0E80               	movlw	128
  4239  00276A  6ECD               	movwf	205,c	;volatile
  4240  00276C  0012               	return		;funcret
  4241  00276E                     __end_of_Timer1_Init_Default:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _Timer1_Enable *****************
  4245 ;; Defined at:
  4246 ;;		line 43 in file "src/timer.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_main
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text23
  4275  00276E                     __ptext23:
  4276                           	callstack 0
  4277  00276E                     _Timer1_Enable:
  4278                           	callstack 29
  4279  00276E                     
  4280                           ;src/timer.c: 44:     T1CON |= 0x01;
  4281  00276E  80CD               	bsf	205,0,c	;volatile
  4282  002770  0012               	return		;funcret
  4283  002772                     __end_of_Timer1_Enable:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _Timer1_Disable *****************
  4287 ;; Defined at:
  4288 ;;		line 55 in file "src/timer.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text24
  4317  002772                     __ptext24:
  4318                           	callstack 0
  4319  002772                     _Timer1_Disable:
  4320                           	callstack 29
  4321  002772                     
  4322                           ;src/timer.c: 56:     T1CON &= ~0x01;
  4323  002772  90CD               	bcf	205,0,c	;volatile
  4324  002774  0012               	return		;funcret
  4325  002776                     __end_of_Timer1_Disable:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _LCD_write_data_byte_4bit *****************
  4329 ;; Defined at:
  4330 ;;		line 126 in file "src/lcd_driver.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  data            1    wreg     unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  data            1    7[COMRAM] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:        2 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    2
  4351 ;; This function calls:
  4352 ;;		_LCD_enable_toggle
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;;		_LCD_write_characters
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text25
  4360  002508                     __ptext25:
  4361                           	callstack 0
  4362  002508                     _LCD_write_data_byte_4bit:
  4363                           	callstack 28
  4364                           
  4365                           ;incstack = 0
  4366                           ;LCD_write_data_byte_4bit@data stored from wreg
  4367  002508  6E08               	movwf	LCD_write_data_byte_4bit@data^0,c
  4368  00250A                     
  4369                           ;src/lcd_driver.c: 128:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4370  00250A  0EFC               	movlw	252
  4371  00250C  1694               	andwf	148,f,c	;volatile
  4372  00250E  9295               	bcf	149,1,c	;volatile
  4373  002510                     
  4374                           ;src/lcd_driver.c: 129:     (TRISD &= 0x0Fu);
  4375  002510  0E0F               	movlw	15
  4376  002512  1695               	andwf	149,f,c	;volatile
  4377  002514                     
  4378                           ;src/lcd_driver.c: 130:     (LATCbits.LATC0 = 1u);
  4379  002514  808B               	bsf	139,0,c	;volatile
  4380  002516                     
  4381                           ;src/lcd_driver.c: 131:     (LATCbits.LATC1 = 0u);
  4382  002516  928B               	bcf	139,1,c	;volatile
  4383  002518                     
  4384                           ;src/lcd_driver.c: 134:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
  4385  002518  C008  F007         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  4386  00251C  0EF0               	movlw	240
  4387  00251E  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4388  002520  5083               	movf	131,w,c	;volatile
  4389  002522  0B0F               	andlw	15
  4390  002524  1007               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  4391  002526  6E83               	movwf	131,c	;volatile
  4392  002528                     
  4393                           ;src/lcd_driver.c: 135:     LCD_enable_toggle();
  4394  002528  ECB8  F00F         	call	_LCD_enable_toggle	;wreg free
  4395  00252C                     
  4396                           ;src/lcd_driver.c: 136:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
  4397  00252C  C008  F007         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  4398  002530  3A07               	swapf	??_LCD_write_data_byte_4bit^0,f,c
  4399  002532  0EF0               	movlw	240
  4400  002534  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4401  002536  0EF0               	movlw	240
  4402  002538  1607               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  4403  00253A  5083               	movf	131,w,c	;volatile
  4404  00253C  0B0F               	andlw	15
  4405  00253E  1007               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  4406  002540  6E83               	movwf	131,c	;volatile
  4407  002542                     
  4408                           ;src/lcd_driver.c: 137:     LCD_enable_toggle();
  4409  002542  ECB8  F00F         	call	_LCD_enable_toggle	;wreg free
  4410  002546                     
  4411                           ;src/lcd_driver.c: 139:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4412  002546  0E82               	movlw	130
  4413  002548  6E07               	movwf	??_LCD_write_data_byte_4bit^0,c
  4414  00254A  0EDE               	movlw	222
  4415  00254C                     u2987:
  4416  00254C  2EE8               	decfsz	wreg,f,c
  4417  00254E  D7FE               	bra	u2987
  4418  002550  2E07               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
  4419  002552  D7FC               	bra	u2987
  4420  002554  0012               	return		;funcret
  4421  002556                     __end_of_LCD_write_data_byte_4bit:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _LCD_set_cursor_position *****************
  4425 ;; Defined at:
  4426 ;;		line 500 in file "src/lcd_driver.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  line            1    wreg     unsigned char 
  4429 ;;  pos_on_line     1    8[COMRAM] unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  line            1   10[COMRAM] unsigned char 
  4432 ;;  ddram_addr      1    9[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      unsigned char 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        3 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    3
  4449 ;; This function calls:
  4450 ;;		_LCD_write_instr_byte_4bit
  4451 ;;		_LCD_write_instr_byte_8bit
  4452 ;; This function is called by:
  4453 ;;		_main
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text26
  4458  001EA6                     __ptext26:
  4459                           	callstack 0
  4460  001EA6                     _LCD_set_cursor_position:
  4461                           	callstack 27
  4462                           
  4463                           ;incstack = 0
  4464                           ;LCD_set_cursor_position@line stored from wreg
  4465  001EA6  6E0B               	movwf	LCD_set_cursor_position@line^0,c
  4466  001EA8                     
  4467                           ;src/lcd_driver.c: 502:     if(line > 2u || pos_on_line > 2u * 16u){
  4468  001EA8  0E03               	movlw	3
  4469  001EAA  600B               	cpfslt	LCD_set_cursor_position@line^0,c
  4470  001EAC  EF5A  F00F         	goto	u2451
  4471  001EB0  EF5C  F00F         	goto	u2450
  4472  001EB4                     u2451:
  4473  001EB4  EFB7  F00F         	goto	l125
  4474  001EB8                     u2450:
  4475  001EB8  0E20               	movlw	32
  4476  001EBA  6409               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  4477  001EBC  EF62  F00F         	goto	u2461
  4478  001EC0  EF64  F00F         	goto	u2460
  4479  001EC4                     u2461:
  4480  001EC4  EF66  F00F         	goto	l3789
  4481  001EC8                     u2460:
  4482  001EC8  EFB7  F00F         	goto	l125
  4483  001ECC                     l3789:
  4484                           
  4485                           ;src/lcd_driver.c: 511:         if(line == 1u && pos_on_line < 16u){
  4486  001ECC  040B               	decf	LCD_set_cursor_position@line^0,w,c
  4487  001ECE  A4D8               	btfss	status,2,c
  4488  001ED0  EF6C  F00F         	goto	u2471
  4489  001ED4  EF6E  F00F         	goto	u2470
  4490  001ED8                     u2471:
  4491  001ED8  EF7A  F00F         	goto	l3795
  4492  001EDC                     u2470:
  4493  001EDC  0E10               	movlw	16
  4494  001EDE  6009               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  4495  001EE0  EF74  F00F         	goto	u2481
  4496  001EE4  EF76  F00F         	goto	u2480
  4497  001EE8                     u2481:
  4498  001EE8  EF7A  F00F         	goto	l3795
  4499  001EEC                     u2480:
  4500  001EEC                     
  4501                           ;src/lcd_driver.c: 512:             ddram_addr = 0x00u + pos_on_line - 1;
  4502  001EEC  0409               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
  4503  001EEE  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4504                           
  4505                           ;src/lcd_driver.c: 514:         } else if(line == 2u && pos_on_line < 16u){
  4506  001EF0  EFA3  F00F         	goto	l3807
  4507  001EF4                     l3795:
  4508  001EF4  0E02               	movlw	2
  4509  001EF6  180B               	xorwf	LCD_set_cursor_position@line^0,w,c
  4510  001EF8  A4D8               	btfss	status,2,c
  4511  001EFA  EF81  F00F         	goto	u2491
  4512  001EFE  EF83  F00F         	goto	u2490
  4513  001F02                     u2491:
  4514  001F02  EF90  F00F         	goto	l3801
  4515  001F06                     u2490:
  4516  001F06  0E10               	movlw	16
  4517  001F08  6009               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  4518  001F0A  EF89  F00F         	goto	u2501
  4519  001F0E  EF8B  F00F         	goto	u2500
  4520  001F12                     u2501:
  4521  001F12  EF90  F00F         	goto	l3801
  4522  001F16                     u2500:
  4523  001F16                     
  4524                           ;src/lcd_driver.c: 515:             ddram_addr = 0x40u + pos_on_line - 1;
  4525  001F16  5009               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  4526  001F18  0F3F               	addlw	63
  4527  001F1A  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4528                           
  4529                           ;src/lcd_driver.c: 517:         } else if(line == 1u && pos_on_line > 16u){
  4530  001F1C  EFA3  F00F         	goto	l3807
  4531  001F20                     l3801:
  4532  001F20  040B               	decf	LCD_set_cursor_position@line^0,w,c
  4533  001F22  A4D8               	btfss	status,2,c
  4534  001F24  EF96  F00F         	goto	u2511
  4535  001F28  EF98  F00F         	goto	u2510
  4536  001F2C                     u2511:
  4537  001F2C  EFB7  F00F         	goto	l125
  4538  001F30                     u2510:
  4539  001F30  0E10               	movlw	16
  4540  001F32  6409               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  4541  001F34  EF9E  F00F         	goto	u2521
  4542  001F38  EFA0  F00F         	goto	u2520
  4543  001F3C                     u2521:
  4544  001F3C  EFB7  F00F         	goto	l125
  4545  001F40                     u2520:
  4546  001F40                     
  4547                           ;src/lcd_driver.c: 518:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
  4548  001F40  5009               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  4549  001F42  0F2F               	addlw	47
  4550  001F44  6E0A               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  4551  001F46                     l3807:
  4552                           
  4553                           ;src/lcd_driver.c: 525:     if(DISP_BIT_MODE == MODE_4BIT){
  4554  001F46  5072               	movf	_DISP_BIT_MODE^0,w,c
  4555  001F48  A4D8               	btfss	status,2,c
  4556  001F4A  EFA9  F00F         	goto	u2531
  4557  001F4E  EFAB  F00F         	goto	u2530
  4558  001F52                     u2531:
  4559  001F52  EFB1  F00F         	goto	l3811
  4560  001F56                     u2530:
  4561  001F56                     
  4562                           ;src/lcd_driver.c: 526:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
  4563  001F56  500A               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  4564  001F58  0980               	iorlw	128
  4565  001F5A  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4566                           
  4567                           ;src/lcd_driver.c: 527:     } else{
  4568  001F5E  EFB5  F00F         	goto	l3813
  4569  001F62                     l3811:
  4570                           
  4571                           ;src/lcd_driver.c: 528:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
  4572  001F62  500A               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  4573  001F64  0980               	iorlw	128
  4574  001F66  EC62  F013         	call	_LCD_write_instr_byte_8bit
  4575  001F6A                     l3813:
  4576                           
  4577                           ;src/lcd_driver.c: 531:     address_counter = ddram_addr;
  4578  001F6A  C00A  F08B         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
  4579  001F6E                     l125:
  4580  001F6E  0012               	return		;funcret
  4581  001F70                     __end_of_LCD_set_cursor_position:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function _LCD_clear_display *****************
  4585 ;; Defined at:
  4586 ;;		line 427 in file "src/lcd_driver.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      unsigned char 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;Total ram usage:        1 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    3
  4607 ;; This function calls:
  4608 ;;		_LCD_write_instr_byte_4bit
  4609 ;;		_LCD_write_instr_byte_8bit
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;;		_LCD_Init_amazonLCD
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text27
  4617  002694                     __ptext27:
  4618                           	callstack 0
  4619  002694                     _LCD_clear_display:
  4620                           	callstack 27
  4621  002694                     
  4622                           ;src/lcd_driver.c: 428:     if(DISP_BIT_MODE == MODE_4BIT){
  4623  002694  5072               	movf	_DISP_BIT_MODE^0,w,c
  4624  002696  A4D8               	btfss	status,2,c
  4625  002698  EF50  F013         	goto	u2441
  4626  00269C  EF52  F013         	goto	u2440
  4627  0026A0                     u2441:
  4628  0026A0  EF57  F013         	goto	l3779
  4629  0026A4                     u2440:
  4630  0026A4                     
  4631                           ;src/lcd_driver.c: 429:         LCD_write_instr_byte_4bit(0x01u);
  4632  0026A4  0E01               	movlw	1
  4633  0026A6  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4634                           
  4635                           ;src/lcd_driver.c: 430:     } else{
  4636  0026AA  EF5A  F013         	goto	l3781
  4637  0026AE                     l3779:
  4638                           
  4639                           ;src/lcd_driver.c: 431:         LCD_write_instr_byte_8bit(0x01u);
  4640  0026AE  0E01               	movlw	1
  4641  0026B0  EC62  F013         	call	_LCD_write_instr_byte_8bit
  4642  0026B4                     l3781:
  4643                           
  4644                           ;src/lcd_driver.c: 434:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4645  0026B4  0E82               	movlw	130
  4646  0026B6  6E09               	movwf	??_LCD_clear_display^0,c
  4647  0026B8  0EDE               	movlw	222
  4648  0026BA                     u2997:
  4649  0026BA  2EE8               	decfsz	wreg,f,c
  4650  0026BC  D7FE               	bra	u2997
  4651  0026BE  2E09               	decfsz	??_LCD_clear_display^0,f,c
  4652  0026C0  D7FC               	bra	u2997
  4653  0026C2  0012               	return		;funcret
  4654  0026C4                     __end_of_LCD_clear_display:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _LCD_write_instr_byte_8bit *****************
  4658 ;; Defined at:
  4659 ;;		line 200 in file "src/lcd_driver.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  instr           1    wreg     unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  instr           1    7[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;Total ram usage:        2 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    2
  4680 ;; This function calls:
  4681 ;;		_LCD_enable_toggle
  4682 ;; This function is called by:
  4683 ;;		_LCD_clear_display
  4684 ;;		_LCD_set_cursor_position
  4685 ;;		_LCD_Init_amazonLCD
  4686 ;;		_LCD_return_home
  4687 ;;		_LCD_write_characters
  4688 ;;		_LCD_turn_off_cursor
  4689 ;;		_LCD_turn_on_cursor
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text28
  4694  0026C4                     __ptext28:
  4695                           	callstack 0
  4696  0026C4                     _LCD_write_instr_byte_8bit:
  4697                           	callstack 27
  4698                           
  4699                           ;incstack = 0
  4700                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  4701  0026C4  6E08               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  4702  0026C6                     
  4703                           ;src/lcd_driver.c: 202:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4704  0026C6  0EFC               	movlw	252
  4705  0026C8  1694               	andwf	148,f,c	;volatile
  4706  0026CA  9295               	bcf	149,1,c	;volatile
  4707  0026CC                     
  4708                           ;src/lcd_driver.c: 203:     (TRISD = 0x00u);
  4709  0026CC  0E00               	movlw	0
  4710  0026CE  6E95               	movwf	149,c	;volatile
  4711  0026D0                     
  4712                           ;src/lcd_driver.c: 204:     (LATCbits.LATC0 = 0u);
  4713  0026D0  908B               	bcf	139,0,c	;volatile
  4714  0026D2                     
  4715                           ;src/lcd_driver.c: 205:     (LATCbits.LATC1 = 0u);
  4716  0026D2  928B               	bcf	139,1,c	;volatile
  4717  0026D4                     
  4718                           ;src/lcd_driver.c: 208:     PORTD = instr;
  4719  0026D4  C008  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  4720  0026D8                     
  4721                           ;src/lcd_driver.c: 209:     LCD_enable_toggle();
  4722  0026D8  ECB8  F00F         	call	_LCD_enable_toggle	;wreg free
  4723  0026DC                     
  4724                           ;src/lcd_driver.c: 211:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  4725  0026DC  0E82               	movlw	130
  4726  0026DE  6E07               	movwf	??_LCD_write_instr_byte_8bit^0,c
  4727  0026E0  0EDE               	movlw	222
  4728  0026E2                     u3007:
  4729  0026E2  2EE8               	decfsz	wreg,f,c
  4730  0026E4  D7FE               	bra	u3007
  4731  0026E6  2E07               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  4732  0026E8  D7FC               	bra	u3007
  4733  0026EA  0012               	return		;funcret
  4734  0026EC                     __end_of_LCD_write_instr_byte_8bit:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _LCD_Init_ECE376 *****************
  4738 ;; Defined at:
  4739 ;;		line 224 in file "src/lcd_driver.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        2 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    3
  4760 ;; This function calls:
  4761 ;;		_LCD_write_instr_byte_4bit
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text29
  4768  001C24                     __ptext29:
  4769                           	callstack 0
  4770  001C24                     _LCD_Init_ECE376:
  4771                           	callstack 27
  4772  001C24                     
  4773                           ;src/lcd_driver.c: 227:     PORTC = 0x00; PORTD = 0x00;
  4774  001C24  0E00               	movlw	0
  4775  001C26  6E82               	movwf	130,c	;volatile
  4776  001C28  0E00               	movlw	0
  4777  001C2A  6E83               	movwf	131,c	;volatile
  4778  001C2C                     
  4779                           ;src/lcd_driver.c: 229:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4780  001C2C  0EFC               	movlw	252
  4781  001C2E  1694               	andwf	148,f,c	;volatile
  4782  001C30  9295               	bcf	149,1,c	;volatile
  4783  001C32                     
  4784                           ;src/lcd_driver.c: 230:     (TRISD |= 0xF0u);
  4785  001C32  0EF0               	movlw	240
  4786  001C34  1295               	iorwf	149,f,c	;volatile
  4787  001C36                     
  4788                           ;src/lcd_driver.c: 234:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  4789  001C36  0ECB               	movlw	203
  4790  001C38  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4791  001C3A  0EEC               	movlw	236
  4792  001C3C  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4793  001C3E  0E84               	movlw	132
  4794  001C40                     u3017:
  4795  001C40  2EE8               	decfsz	wreg,f,c
  4796  001C42  D7FE               	bra	u3017
  4797  001C44  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4798  001C46  D7FC               	bra	u3017
  4799  001C48  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4800  001C4A  D7FA               	bra	u3017
  4801  001C4C  D000               	nop2	
  4802  001C4E                     
  4803                           ;src/lcd_driver.c: 235:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  4804  001C4E  0ECB               	movlw	203
  4805  001C50  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4806  001C52  0EEC               	movlw	236
  4807  001C54  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4808  001C56  0E84               	movlw	132
  4809  001C58                     u3027:
  4810  001C58  2EE8               	decfsz	wreg,f,c
  4811  001C5A  D7FE               	bra	u3027
  4812  001C5C  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4813  001C5E  D7FC               	bra	u3027
  4814  001C60  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4815  001C62  D7FA               	bra	u3027
  4816  001C64  D000               	nop2	
  4817  001C66                     
  4818                           ;src/lcd_driver.c: 236:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  4819  001C66  0E66               	movlw	102
  4820  001C68  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4821  001C6A  0E76               	movlw	118
  4822  001C6C  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4823  001C6E  0EC1               	movlw	193
  4824  001C70                     u3037:
  4825  001C70  2EE8               	decfsz	wreg,f,c
  4826  001C72  D7FE               	bra	u3037
  4827  001C74  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4828  001C76  D7FC               	bra	u3037
  4829  001C78  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4830  001C7A  D7FA               	bra	u3037
  4831  001C7C  F000               	nop	
  4832  001C7E                     
  4833                           ;src/lcd_driver.c: 241:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  4834  001C7E  0E06               	movlw	6
  4835  001C80  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4836  001C82  0E13               	movlw	19
  4837  001C84  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4838  001C86  0EAE               	movlw	174
  4839  001C88                     u3047:
  4840  001C88  2EE8               	decfsz	wreg,f,c
  4841  001C8A  D7FE               	bra	u3047
  4842  001C8C  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4843  001C8E  D7FC               	bra	u3047
  4844  001C90  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4845  001C92  D7FA               	bra	u3047
  4846  001C94                     
  4847                           ;src/lcd_driver.c: 242:     LCD_write_instr_byte_4bit(0x30u);
  4848  001C94  0E30               	movlw	48
  4849  001C96  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4850  001C9A                     
  4851                           ;src/lcd_driver.c: 243:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  4852  001C9A  0E41               	movlw	65
  4853  001C9C  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4854  001C9E  0EEE               	movlw	238
  4855  001CA0                     u3057:
  4856  001CA0  2EE8               	decfsz	wreg,f,c
  4857  001CA2  D7FE               	bra	u3057
  4858  001CA4  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4859  001CA6  D7FC               	bra	u3057
  4860  001CA8  D000               	nop2	
  4861  001CAA                     
  4862                           ;src/lcd_driver.c: 244:     LCD_write_instr_byte_4bit(0x30u);
  4863  001CAA  0E30               	movlw	48
  4864  001CAC  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4865  001CB0                     
  4866                           ;src/lcd_driver.c: 245:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  4867  001CB0  0ED6               	movlw	214
  4868  001CB2                     u3067:
  4869  001CB2  D000               	nop2	
  4870  001CB4  D000               	nop2	
  4871  001CB6  2EE8               	decfsz	wreg,f,c
  4872  001CB8  D7FC               	bra	u3067
  4873  001CBA  D000               	nop2	
  4874  001CBC                     
  4875                           ;src/lcd_driver.c: 246:     LCD_write_instr_byte_4bit(0x30u);
  4876  001CBC  0E30               	movlw	48
  4877  001CBE  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4878  001CC2                     
  4879                           ;src/lcd_driver.c: 248:     LCD_write_instr_byte_4bit(0x28u);
  4880  001CC2  0E28               	movlw	40
  4881  001CC4  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4882  001CC8                     
  4883                           ;src/lcd_driver.c: 249:     LCD_write_instr_byte_4bit(0x0Eu);
  4884  001CC8  0E0E               	movlw	14
  4885  001CCA  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4886  001CCE                     
  4887                           ;src/lcd_driver.c: 250:     LCD_write_instr_byte_4bit(0x01u);
  4888  001CCE  0E01               	movlw	1
  4889  001CD0  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4890  001CD4                     
  4891                           ;src/lcd_driver.c: 251:     LCD_write_instr_byte_4bit(0x06u);
  4892  001CD4  0E06               	movlw	6
  4893  001CD6  ECAB  F012         	call	_LCD_write_instr_byte_4bit
  4894  001CDA                     
  4895                           ;src/lcd_driver.c: 253:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  4896  001CDA  0E06               	movlw	6
  4897  001CDC  6E0A               	movwf	(??_LCD_Init_ECE376+1)^0,c
  4898  001CDE  0E13               	movlw	19
  4899  001CE0  6E09               	movwf	??_LCD_Init_ECE376^0,c
  4900  001CE2  0EAE               	movlw	174
  4901  001CE4                     u3077:
  4902  001CE4  2EE8               	decfsz	wreg,f,c
  4903  001CE6  D7FE               	bra	u3077
  4904  001CE8  2E09               	decfsz	??_LCD_Init_ECE376^0,f,c
  4905  001CEA  D7FC               	bra	u3077
  4906  001CEC  2E0A               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  4907  001CEE  D7FA               	bra	u3077
  4908  001CF0                     
  4909                           ;src/lcd_driver.c: 256:     CURRENT_DISP = QAPASS_EBAY;
  4910  001CF0  0E00               	movlw	0
  4911  001CF2  6E73               	movwf	_CURRENT_DISP^0,c
  4912  001CF4                     
  4913                           ;src/lcd_driver.c: 257:     DISP_BIT_MODE = MODE_4BIT;
  4914  001CF4  0E00               	movlw	0
  4915  001CF6  6E72               	movwf	_DISP_BIT_MODE^0,c
  4916  001CF8                     
  4917                           ;src/lcd_driver.c: 258:     init_complete = 0x01u;
  4918  001CF8  0E01               	movlw	1
  4919  001CFA  6E71               	movwf	_init_complete^0,c
  4920  001CFC                     
  4921                           ;src/lcd_driver.c: 259:     current_entry_mode = 0x06u;
  4922  001CFC  0E06               	movlw	6
  4923  001CFE  0100               	movlb	0	; () banked
  4924  001D00  6FC7               	movwf	_current_entry_mode& (0+255),b
  4925  001D02                     
  4926                           ; BSR set to: 0
  4927                           ;src/lcd_driver.c: 260:     current_disp_ctrl = 0x0Eu;
  4928  001D02  0E0E               	movlw	14
  4929  001D04  6E74               	movwf	_current_disp_ctrl^0,c
  4930  001D06                     
  4931                           ; BSR set to: 0
  4932                           ;src/lcd_driver.c: 261:     current_func_set = 0x28u;
  4933  001D06  0E28               	movlw	40
  4934  001D08  6FC6               	movwf	_current_func_set& (0+255),b
  4935  001D0A                     
  4936                           ; BSR set to: 0
  4937  001D0A  0012               	return		;funcret
  4938  001D0C                     __end_of_LCD_Init_ECE376:
  4939                           	callstack 0
  4940                           
  4941 ;; *************** function _LCD_write_instr_byte_4bit *****************
  4942 ;; Defined at:
  4943 ;;		line 175 in file "src/lcd_driver.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  instr           1    wreg     unsigned char 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  instr           1    7[COMRAM] unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;Total ram usage:        2 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    2
  4964 ;; This function calls:
  4965 ;;		_LCD_enable_toggle
  4966 ;; This function is called by:
  4967 ;;		_LCD_Init_ECE376
  4968 ;;		_LCD_clear_display
  4969 ;;		_LCD_set_cursor_position
  4970 ;;		_LCD_Init_amazonLCD
  4971 ;;		_LCD_return_home
  4972 ;;		_LCD_write_characters
  4973 ;;		_LCD_turn_off_cursor
  4974 ;;		_LCD_turn_on_cursor
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text30
  4979  002556                     __ptext30:
  4980                           	callstack 0
  4981  002556                     _LCD_write_instr_byte_4bit:
  4982                           	callstack 27
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;incstack = 0
  4986                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  4987  002556  6E08               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  4988  002558                     
  4989                           ;src/lcd_driver.c: 177:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  4990  002558  0EFC               	movlw	252
  4991  00255A  1694               	andwf	148,f,c	;volatile
  4992  00255C  9295               	bcf	149,1,c	;volatile
  4993  00255E                     
  4994                           ;src/lcd_driver.c: 178:     (TRISD &= 0x0Fu);
  4995  00255E  0E0F               	movlw	15
  4996  002560  1695               	andwf	149,f,c	;volatile
  4997  002562                     
  4998                           ;src/lcd_driver.c: 179:     (LATCbits.LATC0 = 0u);
  4999  002562  908B               	bcf	139,0,c	;volatile
  5000  002564                     
  5001                           ;src/lcd_driver.c: 180:     (LATCbits.LATC1 = 0u);
  5002  002564  928B               	bcf	139,1,c	;volatile
  5003  002566                     
  5004                           ;src/lcd_driver.c: 183:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  5005  002566  C008  F007         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  5006  00256A  0EF0               	movlw	240
  5007  00256C  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  5008  00256E  5083               	movf	131,w,c	;volatile
  5009  002570  0B0F               	andlw	15
  5010  002572  1007               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  5011  002574  6E83               	movwf	131,c	;volatile
  5012  002576                     
  5013                           ;src/lcd_driver.c: 184:     LCD_enable_toggle();
  5014  002576  ECB8  F00F         	call	_LCD_enable_toggle	;wreg free
  5015  00257A                     
  5016                           ;src/lcd_driver.c: 185:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  5017  00257A  C008  F007         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  5018  00257E  3A07               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  5019  002580  0EF0               	movlw	240
  5020  002582  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  5021  002584  0EF0               	movlw	240
  5022  002586  1607               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  5023  002588  5083               	movf	131,w,c	;volatile
  5024  00258A  0B0F               	andlw	15
  5025  00258C  1007               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  5026  00258E  6E83               	movwf	131,c	;volatile
  5027  002590                     
  5028                           ;src/lcd_driver.c: 186:     LCD_enable_toggle();
  5029  002590  ECB8  F00F         	call	_LCD_enable_toggle	;wreg free
  5030  002594                     
  5031                           ;src/lcd_driver.c: 188:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  5032  002594  0E82               	movlw	130
  5033  002596  6E07               	movwf	??_LCD_write_instr_byte_4bit^0,c
  5034  002598  0EDE               	movlw	222
  5035  00259A                     u3087:
  5036  00259A  2EE8               	decfsz	wreg,f,c
  5037  00259C  D7FE               	bra	u3087
  5038  00259E  2E07               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  5039  0025A0  D7FC               	bra	u3087
  5040  0025A2  0012               	return		;funcret
  5041  0025A4                     __end_of_LCD_write_instr_byte_4bit:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _LCD_enable_toggle *****************
  5045 ;; Defined at:
  5046 ;;		line 45 in file "src/lcd_driver.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;Total ram usage:        2 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_LCD_write_data_byte_4bit
  5071 ;;		_LCD_write_instr_byte_4bit
  5072 ;;		_LCD_write_instr_byte_8bit
  5073 ;;		_LCD_wait_for_BF
  5074 ;;		_LCD_write_data_byte_8bit
  5075 ;;		_LCD_Init
  5076 ;;		_LCD_read_current_address_counter
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text31
  5081  001F70                     __ptext31:
  5082                           	callstack 0
  5083  001F70                     _LCD_enable_toggle:
  5084                           	callstack 28
  5085  001F70                     
  5086                           ;src/lcd_driver.c: 46:     switch(CURRENT_DISP){
  5087  001F70  EFFE  F00F         	goto	l3537
  5088  001F74                     l66:
  5089                           
  5090                           ;src/lcd_driver.c: 49:             (LATDbits.LATD1 = 0u);
  5091  001F74  928C               	bcf	140,1,c	;volatile
  5092  001F76                     
  5093                           ;src/lcd_driver.c: 50:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5094  001F76  0E06               	movlw	6
  5095  001F78                     u3097:
  5096  001F78  2EE8               	decfsz	wreg,f,c
  5097  001F7A  D7FE               	bra	u3097
  5098  001F7C  D000               	nop2	
  5099  001F7E                     
  5100                           ;src/lcd_driver.c: 51:             (LATDbits.LATD1 = 1u);
  5101  001F7E  828C               	bsf	140,1,c	;volatile
  5102                           
  5103                           ;src/lcd_driver.c: 52:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5104  001F80  0E06               	movlw	6
  5105  001F82                     u3107:
  5106  001F82  2EE8               	decfsz	wreg,f,c
  5107  001F84  D7FE               	bra	u3107
  5108  001F86  D000               	nop2	
  5109  001F88                     
  5110                           ;src/lcd_driver.c: 53:             (LATDbits.LATD1 = 0u);
  5111  001F88  928C               	bcf	140,1,c	;volatile
  5112                           
  5113                           ;src/lcd_driver.c: 54:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5114  001F8A  0E06               	movlw	6
  5115  001F8C                     u3117:
  5116  001F8C  2EE8               	decfsz	wreg,f,c
  5117  001F8E  D7FE               	bra	u3117
  5118  001F90  D000               	nop2	
  5119                           
  5120                           ;src/lcd_driver.c: 55:             break;
  5121  001F92  EF1B  F010         	goto	l71
  5122  001F96                     l68:
  5123                           
  5124                           ;src/lcd_driver.c: 58:             (LATDbits.LATD1 = 0u);
  5125  001F96  928C               	bcf	140,1,c	;volatile
  5126  001F98                     
  5127                           ;src/lcd_driver.c: 59:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  5128  001F98  0E03               	movlw	3
  5129  001F9A                     u3127:
  5130  001F9A  2EE8               	decfsz	wreg,f,c
  5131  001F9C  D7FE               	bra	u3127
  5132  001F9E  F000               	nop	
  5133  001FA0                     
  5134                           ;src/lcd_driver.c: 60:             (LATDbits.LATD1 = 1u);
  5135  001FA0  828C               	bsf	140,1,c	;volatile
  5136                           
  5137                           ;src/lcd_driver.c: 61:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  5138  001FA2  0E03               	movlw	3
  5139  001FA4                     u3137:
  5140  001FA4  2EE8               	decfsz	wreg,f,c
  5141  001FA6  D7FE               	bra	u3137
  5142  001FA8  F000               	nop	
  5143  001FAA                     
  5144                           ;src/lcd_driver.c: 62:             (LATDbits.LATD1 = 0u);
  5145  001FAA  928C               	bcf	140,1,c	;volatile
  5146                           
  5147                           ;src/lcd_driver.c: 63:             _delay((unsigned long)((100u)*(40000000u/4000000.0)))
      +                          ;
  5148  001FAC  0EC8               	movlw	200
  5149  001FAE                     u3147:
  5150  001FAE  D000               	nop2	
  5151  001FB0  2EE8               	decfsz	wreg,f,c
  5152  001FB2  D7FD               	bra	u3147
  5153                           
  5154                           ;src/lcd_driver.c: 64:             break;
  5155  001FB4  EF1B  F010         	goto	l71
  5156  001FB8                     l69:
  5157                           
  5158                           ;src/lcd_driver.c: 67:             (LATDbits.LATD1 = 0u);
  5159  001FB8  928C               	bcf	140,1,c	;volatile
  5160  001FBA                     
  5161                           ;src/lcd_driver.c: 68:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5162  001FBA  0E06               	movlw	6
  5163  001FBC                     u3157:
  5164  001FBC  2EE8               	decfsz	wreg,f,c
  5165  001FBE  D7FE               	bra	u3157
  5166  001FC0  D000               	nop2	
  5167  001FC2                     
  5168                           ;src/lcd_driver.c: 69:             (LATDbits.LATD1 = 1u);
  5169  001FC2  828C               	bsf	140,1,c	;volatile
  5170                           
  5171                           ;src/lcd_driver.c: 70:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5172  001FC4  0E06               	movlw	6
  5173  001FC6                     u3167:
  5174  001FC6  2EE8               	decfsz	wreg,f,c
  5175  001FC8  D7FE               	bra	u3167
  5176  001FCA  D000               	nop2	
  5177  001FCC                     
  5178                           ;src/lcd_driver.c: 71:             (LATDbits.LATD1 = 0u);
  5179  001FCC  928C               	bcf	140,1,c	;volatile
  5180                           
  5181                           ;src/lcd_driver.c: 72:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5182  001FCE  0E06               	movlw	6
  5183  001FD0                     u3177:
  5184  001FD0  2EE8               	decfsz	wreg,f,c
  5185  001FD2  D7FE               	bra	u3177
  5186  001FD4  D000               	nop2	
  5187                           
  5188                           ;src/lcd_driver.c: 73:             break;
  5189  001FD6  EF1B  F010         	goto	l71
  5190  001FDA                     l70:
  5191                           
  5192                           ;src/lcd_driver.c: 76:             (LATDbits.LATD1 = 0u);
  5193  001FDA  928C               	bcf	140,1,c	;volatile
  5194  001FDC                     
  5195                           ;src/lcd_driver.c: 77:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5196  001FDC  0E06               	movlw	6
  5197  001FDE                     u3187:
  5198  001FDE  2EE8               	decfsz	wreg,f,c
  5199  001FE0  D7FE               	bra	u3187
  5200  001FE2  D000               	nop2	
  5201  001FE4                     
  5202                           ;src/lcd_driver.c: 78:             (LATDbits.LATD1 = 1u);
  5203  001FE4  828C               	bsf	140,1,c	;volatile
  5204                           
  5205                           ;src/lcd_driver.c: 79:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5206  001FE6  0E06               	movlw	6
  5207  001FE8                     u3197:
  5208  001FE8  2EE8               	decfsz	wreg,f,c
  5209  001FEA  D7FE               	bra	u3197
  5210  001FEC  D000               	nop2	
  5211  001FEE                     
  5212                           ;src/lcd_driver.c: 80:             (LATDbits.LATD1 = 0u);
  5213  001FEE  928C               	bcf	140,1,c	;volatile
  5214                           
  5215                           ;src/lcd_driver.c: 81:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  5216  001FF0  0E06               	movlw	6
  5217  001FF2                     u3207:
  5218  001FF2  2EE8               	decfsz	wreg,f,c
  5219  001FF4  D7FE               	bra	u3207
  5220  001FF6  D000               	nop2	
  5221                           
  5222                           ;src/lcd_driver.c: 82:             break;
  5223  001FF8  EF1B  F010         	goto	l71
  5224  001FFC                     l3537:
  5225  001FFC  5073               	movf	_CURRENT_DISP^0,w,c
  5226  001FFE  6E05               	movwf	??_LCD_enable_toggle^0,c
  5227  002000  6A06               	clrf	(??_LCD_enable_toggle+1)^0,c
  5228                           
  5229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5230                           ; Switch size 1, requested type "simple"
  5231                           ; Number of cases is 1, Range of values is 0 to 0
  5232                           ; switch strategies available:
  5233                           ; Name         Instructions Cycles
  5234                           ; simple_byte            4     3 (average)
  5235                           ;	Chosen strategy is simple_byte
  5236  002002  5006               	movf	(??_LCD_enable_toggle+1)^0,w,c
  5237  002004  0A00               	xorlw	0	; case 0
  5238  002006  B4D8               	btfsc	status,2,c
  5239  002008  EF08  F010         	goto	l4377
  5240  00200C  EF1B  F010         	goto	l71
  5241  002010                     l4377:
  5242                           
  5243                           ; Switch size 1, requested type "simple"
  5244                           ; Number of cases is 4, Range of values is 0 to 3
  5245                           ; switch strategies available:
  5246                           ; Name         Instructions Cycles
  5247                           ; simple_byte           13     7 (average)
  5248                           ;	Chosen strategy is simple_byte
  5249  002010  5005               	movf	??_LCD_enable_toggle^0,w,c
  5250  002012  0A00               	xorlw	0	; case 0
  5251  002014  B4D8               	btfsc	status,2,c
  5252  002016  EFBA  F00F         	goto	l66
  5253  00201A  0A01               	xorlw	1	; case 1
  5254  00201C  B4D8               	btfsc	status,2,c
  5255  00201E  EFCB  F00F         	goto	l68
  5256  002022  0A03               	xorlw	3	; case 2
  5257  002024  B4D8               	btfsc	status,2,c
  5258  002026  EFDC  F00F         	goto	l69
  5259  00202A  0A01               	xorlw	1	; case 3
  5260  00202C  B4D8               	btfsc	status,2,c
  5261  00202E  EFED  F00F         	goto	l70
  5262  002032  EF1B  F010         	goto	l71
  5263  002036                     l71:
  5264  002036  0012               	return		;funcret
  5265  002038                     __end_of_LCD_enable_toggle:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function _CCP1_Capture_Init_Default *****************
  5269 ;; Defined at:
  5270 ;;		line 66 in file "src/ccp.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text32
  5299  00275C                     __ptext32:
  5300                           	callstack 0
  5301  00275C                     _CCP1_Capture_Init_Default:
  5302                           	callstack 29
  5303  00275C                     
  5304                           ;src/ccp.c: 67:     (CCP1CON = 0x5);
  5305  00275C  0E05               	movlw	5
  5306  00275E  6EBD               	movwf	189,c	;volatile
  5307  002760                     
  5308                           ;src/ccp.c: 68:     (T3CON &= ~0x48);
  5309  002760  0EB7               	movlw	183
  5310  002762  16B1               	andwf	177,f,c	;volatile
  5311  002764                     
  5312                           ;src/ccp.c: 69:     (PIE1bits.CCP1IE = 1u);
  5313  002764  849D               	bsf	157,2,c	;volatile
  5314  002766  0012               	return		;funcret
  5315  002768                     __end_of_CCP1_Capture_Init_Default:
  5316                           	callstack 0
  5317                           
  5318 ;; *************** function _isr *****************
  5319 ;; Defined at:
  5320 ;;		line 146 in file "ece376_hw9_ccp_capt.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;Total ram usage:        4 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		Interrupt level 2
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	intcode
  5348  000808                     __pintcode:
  5349                           	callstack 0
  5350  000808                     _isr:
  5351                           	callstack 22
  5352                           
  5353                           ;incstack = 0
  5354  000808  8275               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5355  00080A  EDCF  F010         	call	int_func,f	;refresh shadow registers
  5356                           
  5357                           	psect	intcode_body
  5358  00219E                     __pintcode_body:
  5359                           	callstack 22
  5360  00219E                     int_func:
  5361                           	callstack 22
  5362  00219E  0006               	pop		; remove dummy address from shadow register refresh
  5363  0021A0                     
  5364                           ;ece376_hw9_ccp_capt.c: 152:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  5365  0021A0  A09E               	btfss	158,0,c	;volatile
  5366  0021A2  EFD5  F010         	goto	i2u182_41
  5367  0021A6  EFD7  F010         	goto	i2u182_40
  5368  0021AA                     i2u182_41:
  5369  0021AA  EFE8  F010         	goto	i2l3077
  5370  0021AE                     i2u182_40:
  5371  0021AE  A09D               	btfss	157,0,c	;volatile
  5372  0021B0  EFDC  F010         	goto	i2u183_41
  5373  0021B4  EFDE  F010         	goto	i2u183_40
  5374  0021B8                     i2u183_41:
  5375  0021B8  EFE8  F010         	goto	i2l3077
  5376  0021BC                     i2u183_40:
  5377  0021BC                     
  5378                           ;ece376_hw9_ccp_capt.c: 154:         elapsed_time += 0x10000u;
  5379  0021BC  0E00               	movlw	0
  5380  0021BE  0100               	movlb	0	; () banked
  5381  0021C0  2784               	addwf	_elapsed_time& (0+255),f,b	;volatile
  5382  0021C2  0E00               	movlw	0
  5383  0021C4  2385               	addwfc	(_elapsed_time+1)& (0+255),f,b	;volatile
  5384  0021C6  0E01               	movlw	1
  5385  0021C8  2386               	addwfc	(_elapsed_time+2)& (0+255),f,b	;volatile
  5386  0021CA  0E00               	movlw	0
  5387  0021CC  2387               	addwfc	(_elapsed_time+3)& (0+255),f,b	;volatile
  5388  0021CE                     
  5389                           ; BSR set to: 0
  5390                           ;ece376_hw9_ccp_capt.c: 156:         (PIR1bits.TMR1IF = 0u);
  5391  0021CE  909E               	bcf	158,0,c	;volatile
  5392  0021D0                     i2l3077:
  5393                           
  5394                           ;ece376_hw9_ccp_capt.c: 164:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  5395  0021D0  A49E               	btfss	158,2,c	;volatile
  5396  0021D2  EFED  F010         	goto	i2u184_41
  5397  0021D6  EFEF  F010         	goto	i2u184_40
  5398  0021DA                     i2u184_41:
  5399  0021DA  EF12  F011         	goto	i2l246
  5400  0021DE                     i2u184_40:
  5401  0021DE  A49D               	btfss	157,2,c	;volatile
  5402  0021E0  EFF4  F010         	goto	i2u185_41
  5403  0021E4  EFF6  F010         	goto	i2u185_40
  5404  0021E8                     i2u185_41:
  5405  0021E8  EF12  F011         	goto	i2l246
  5406  0021EC                     i2u185_40:
  5407  0021EC                     
  5408                           ;ece376_hw9_ccp_capt.c: 165:         elapsed_time = elapsed_time + (uint32_t) CCPR1 - 30
      +                          000000u;
  5409  0021EC  50BE               	movf	190,w,c	;volatile
  5410  0021EE  0100               	movlb	0	; () banked
  5411  0021F0  2584               	addwf	_elapsed_time& (0+255),w,b	;volatile
  5412  0021F2  6E01               	movwf	??_isr^0,c
  5413  0021F4  50BF               	movf	191,w,c	;volatile
  5414  0021F6  2185               	addwfc	(_elapsed_time+1)& (0+255),w,b	;volatile
  5415  0021F8  6E02               	movwf	(??_isr+1)^0,c
  5416  0021FA  0E00               	movlw	0
  5417  0021FC  2186               	addwfc	(_elapsed_time+2)& (0+255),w,b	;volatile
  5418  0021FE  6E03               	movwf	(??_isr+2)^0,c
  5419  002200  0E00               	movlw	0
  5420  002202  2187               	addwfc	(_elapsed_time+3)& (0+255),w,b	;volatile
  5421  002204  6E04               	movwf	(??_isr+3)^0,c
  5422  002206  0E80               	movlw	128
  5423  002208  2401               	addwf	??_isr^0,w,c
  5424  00220A  6F84               	movwf	_elapsed_time& (0+255),b	;volatile
  5425  00220C  0E3C               	movlw	60
  5426  00220E  2002               	addwfc	(??_isr+1)^0,w,c
  5427  002210  6F85               	movwf	(_elapsed_time+1)& (0+255),b	;volatile
  5428  002212  0E36               	movlw	54
  5429  002214  2003               	addwfc	(??_isr+2)^0,w,c
  5430  002216  6F86               	movwf	(_elapsed_time+2)& (0+255),b	;volatile
  5431  002218  0EFE               	movlw	254
  5432  00221A  2004               	addwfc	(??_isr+3)^0,w,c
  5433  00221C  6F87               	movwf	(_elapsed_time+3)& (0+255),b	;volatile
  5434  00221E                     
  5435                           ; BSR set to: 0
  5436                           ;ece376_hw9_ccp_capt.c: 166:   game_done_flag = 0x01u;
  5437  00221E  0E01               	movlw	1
  5438  002220  6F8A               	movwf	_game_done_flag& (0+255),b	;volatile
  5439  002222                     
  5440                           ; BSR set to: 0
  5441                           ;ece376_hw9_ccp_capt.c: 169:   (PIR1bits.CCP1IF = 0u);
  5442  002222  949E               	bcf	158,2,c	;volatile
  5443  002224                     i2l246:
  5444  002224  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5445  002226  0011               	retfie		f
  5446  002228                     __end_of_isr:
  5447                           	callstack 0
  5448                           
  5449                           	psect	rparam
  5450  0000                     
  5451                           	psect	temp
  5452  000075                     btemp:
  5453                           	callstack 0
  5454  000075                     	ds	1
  5455  0000                     int$flags	set	btemp
  5456  0000                     wtemp8	set	btemp+1
  5457  0000                     ttemp5	set	btemp+1
  5458  0000                     ttemp6	set	btemp+4
  5459  0000                     ttemp7	set	btemp+8
  5460                           
  5461                           	psect	idloc
  5462                           
  5463                           ;Config register IDLOC0 @ 0x200000
  5464                           ;	unspecified, using default values
  5465  200000                     	org	2097152
  5466  200000  FF                 	db	255
  5467                           
  5468                           ;Config register IDLOC1 @ 0x200001
  5469                           ;	unspecified, using default values
  5470  200001                     	org	2097153
  5471  200001  FF                 	db	255
  5472                           
  5473                           ;Config register IDLOC2 @ 0x200002
  5474                           ;	unspecified, using default values
  5475  200002                     	org	2097154
  5476  200002  FF                 	db	255
  5477                           
  5478                           ;Config register IDLOC3 @ 0x200003
  5479                           ;	unspecified, using default values
  5480  200003                     	org	2097155
  5481  200003  FF                 	db	255
  5482                           
  5483                           ;Config register IDLOC4 @ 0x200004
  5484                           ;	unspecified, using default values
  5485  200004                     	org	2097156
  5486  200004  FF                 	db	255
  5487                           
  5488                           ;Config register IDLOC5 @ 0x200005
  5489                           ;	unspecified, using default values
  5490  200005                     	org	2097157
  5491  200005  FF                 	db	255
  5492                           
  5493                           ;Config register IDLOC6 @ 0x200006
  5494                           ;	unspecified, using default values
  5495  200006                     	org	2097158
  5496  200006  FF                 	db	255
  5497                           
  5498                           ;Config register IDLOC7 @ 0x200007
  5499                           ;	unspecified, using default values
  5500  200007                     	org	2097159
  5501  200007  FF                 	db	255
  5502                           
  5503                           	psect	config
  5504                           
  5505                           ; Padding undefined space
  5506  300000                     	org	3145728
  5507  300000  FF                 	db	255
  5508                           
  5509                           ;Config register CONFIG1H @ 0x300001
  5510                           ;	Oscillator Selection bits
  5511                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  5512                           ;	Fail-Safe Clock Monitor Enable bit
  5513                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5514                           ;	Internal/External Oscillator Switchover bit
  5515                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5516  300001                     	org	3145729
  5517  300001  06                 	db	6
  5518                           
  5519                           ;Config register CONFIG2L @ 0x300002
  5520                           ;	Power-up Timer Enable bit
  5521                           ;	PWRT = OFF, PWRT disabled
  5522                           ;	Brown-out Reset Enable bits
  5523                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5524                           ;	Brown Out Reset Voltage bits
  5525                           ;	BORV = 3, Minimum setting
  5526  300002                     	org	3145730
  5527  300002  1F                 	db	31
  5528                           
  5529                           ;Config register CONFIG2H @ 0x300003
  5530                           ;	Watchdog Timer Enable bit
  5531                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5532                           ;	Watchdog Timer Postscale Select bits
  5533                           ;	WDTPS = 32768, 1:32768
  5534  300003                     	org	3145731
  5535  300003  1E                 	db	30
  5536                           
  5537                           ; Padding undefined space
  5538  300004                     	org	3145732
  5539  300004  FF                 	db	255
  5540                           
  5541                           ;Config register CONFIG3H @ 0x300005
  5542                           ;	CCP2 MUX bit
  5543                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5544                           ;	PORTB A/D Enable bit
  5545                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5546                           ;	Low-Power Timer1 Oscillator Enable bit
  5547                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5548                           ;	MCLR Pin Enable bit
  5549                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5550  300005                     	org	3145733
  5551  300005  81                 	db	129
  5552                           
  5553                           ;Config register CONFIG4L @ 0x300006
  5554                           ;	Stack Full/Underflow Reset Enable bit
  5555                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5556                           ;	Single-Supply ICSP Enable bit
  5557                           ;	LVP = OFF, Single-Supply ICSP disabled
  5558                           ;	Extended Instruction Set Enable bit
  5559                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5560                           ;	Background Debugger Enable bit
  5561                           ;	DEBUG = 0x1, unprogrammed default
  5562  300006                     	org	3145734
  5563  300006  81                 	db	129
  5564                           
  5565                           ; Padding undefined space
  5566  300007                     	org	3145735
  5567  300007  FF                 	db	255
  5568                           
  5569                           ;Config register CONFIG5L @ 0x300008
  5570                           ;	Code Protection bit
  5571                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5572                           ;	Code Protection bit
  5573                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5574                           ;	Code Protection bit
  5575                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5576                           ;	Code Protection bit
  5577                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5578  300008                     	org	3145736
  5579  300008  0F                 	db	15
  5580                           
  5581                           ;Config register CONFIG5H @ 0x300009
  5582                           ;	Boot Block Code Protection bit
  5583                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5584                           ;	Data EEPROM Code Protection bit
  5585                           ;	CPD = OFF, Data EEPROM not code-protected
  5586  300009                     	org	3145737
  5587  300009  C0                 	db	192
  5588                           
  5589                           ;Config register CONFIG6L @ 0x30000A
  5590                           ;	Write Protection bit
  5591                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5592                           ;	Write Protection bit
  5593                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5594                           ;	Write Protection bit
  5595                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5596                           ;	Write Protection bit
  5597                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5598  30000A                     	org	3145738
  5599  30000A  0F                 	db	15
  5600                           
  5601                           ;Config register CONFIG6H @ 0x30000B
  5602                           ;	Configuration Register Write Protection bit
  5603                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5604                           ;	Boot Block Write Protection bit
  5605                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5606                           ;	Data EEPROM Write Protection bit
  5607                           ;	WRTD = OFF, Data EEPROM not write-protected
  5608  30000B                     	org	3145739
  5609  30000B  E0                 	db	224
  5610                           
  5611                           ;Config register CONFIG7L @ 0x30000C
  5612                           ;	Table Read Protection bit
  5613                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5614                           ;	Table Read Protection bit
  5615                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5616                           ;	Table Read Protection bit
  5617                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5618                           ;	Table Read Protection bit
  5619                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5620  30000C                     	org	3145740
  5621  30000C  0F                 	db	15
  5622                           
  5623                           ;Config register CONFIG7H @ 0x30000D
  5624                           ;	Boot Block Table Read Protection bit
  5625                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5626  30000D                     	org	3145741
  5627  30000D  40                 	db	64
  5628                           tosu	equ	0xFFF
  5629                           tosh	equ	0xFFE
  5630                           tosl	equ	0xFFD
  5631                           stkptr	equ	0xFFC
  5632                           pclatu	equ	0xFFB
  5633                           pclath	equ	0xFFA
  5634                           pcl	equ	0xFF9
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           prodh	equ	0xFF4
  5640                           prodl	equ	0xFF3
  5641                           indf0	equ	0xFEF
  5642                           postinc0	equ	0xFEE
  5643                           postdec0	equ	0xFED
  5644                           preinc0	equ	0xFEC
  5645                           plusw0	equ	0xFEB
  5646                           fsr0h	equ	0xFEA
  5647                           fsr0l	equ	0xFE9
  5648                           wreg	equ	0xFE8
  5649                           indf1	equ	0xFE7
  5650                           postinc1	equ	0xFE6
  5651                           postdec1	equ	0xFE5
  5652                           preinc1	equ	0xFE4
  5653                           plusw1	equ	0xFE3
  5654                           fsr1h	equ	0xFE2
  5655                           fsr1l	equ	0xFE1
  5656                           bsr	equ	0xFE0
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           preinc2	equ	0xFDC
  5661                           plusw2	equ	0xFDB
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    34
    Data        36
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    105     116
    BANK0           128     10      83
    BANK1           256     48      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1140_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> main@stkptr_reg_string(BANK1[16]), main@rcon_reg_string(BANK1[16]), 

    sp__hex_to_bit_string	PTR unsigned char  size(2) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _strcat->_strcpy
    _strcpy->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    ___lwdiv->___llmod
    ___lldiv->___llmod
    _LCD_write_data_byte_4bit->_LCD_enable_toggle
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_write_instr_byte_8bit->_LCD_enable_toggle
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit
    _LCD_write_instr_byte_4bit->_LCD_enable_toggle

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   15351
                                            103 COMRAM     2     2      0
                                              0 BANK1     48    48      0
          _CCP1_Capture_Init_Default
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
                     _Timer1_Disable
                      _Timer1_Enable
                _Timer1_Init_Default
                            ___lldiv
                            ___llmod
                            ___lwdiv
                  _hex_to_bit_string
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     0      4    1087
                                             16 COMRAM     4     0      4
                  _hex_to_bit_string (ARG)
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     317
                                              8 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   10005
                                             93 COMRAM    10     0     10
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9513
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    8986
                                             63 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4919
                                             31 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3507
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1565
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _hex_to_bit_string                                    8     6      2     198
                                              4 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     421
                                             13 COMRAM     7     3      4
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     772
                                              4 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     601
                                             13 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      62
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              3     2      1    1166
                                              8 COMRAM     3     2      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      93
                                              8 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      31
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      62
                                              8 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      62
                                              6 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Capture_Init_Default                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Capture_Init_Default
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _Timer1_Disable
   _Timer1_Enable
   _Timer1_Init_Default
   ___lldiv
     ___llmod (ARG)
   ___llmod
   ___lwdiv
     ___llmod (ARG)
   _hex_to_bit_string
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _strcat
     _hex_to_bit_string (ARG)
     _strcpy (ARG)
       _strlen (ARG)
     _strlen (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     30      50       7       31.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      53       5       64.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     69      74       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117      34        0.0%
DATA                 0      0     117       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 10 21:38:58 2021

        ?_CCP1_Capture_Init_Default 0001                                  l23 2766  
                                l70 1FDA                                  l71 2036  
                                l80 2554                                  l66 1F74  
                                l68 1F96                                  l92 1D0A  
                                l69 1FB8                                  l86 25A2  
                                l89 26EA                 ___wmul@multiplicand 0007  
                               l110 26C2                                 l125 1F6E  
                               l163 276C                                 l260 1178  
                               l252 108A                                 l325 219C  
                               l261 117C                                 l166 2770  
                               l318 218C                                 l169 2774  
                               l291 2736                                 l711 229E  
                               l288 2328                                 l718 22AE  
                               l736 1C22                                 l729 1C02  
                               l746 1DDA                                 l739 1DBA  
                               l782 2394                                 l789 239C  
                               l969 24B4                                 l998 207C  
                               _pad 2038                                 _isr 0808  
                               wreg 000FE8                  _current_entry_mode 00C7  
                              l1001 20BE                                l1010 17E2  
                              l1003 20F8                                l1120 2776  
                              l1008 17DA                                l1032 154E  
                              l1018 19A2                                l1051 245A  
                              l1052 2462                                l1109 1EA4  
                              l1117 25E6                                l1045 17A2  
                              l1133 2624                                l1127 2710  
                              l1080 1B2A                                l1083 1B32  
                              l1139 2692                                l1086 265C  
                              l1094 2506                                l3321 1E00  
                              l3401 2074                                l4201 112E  
                              l3323 1E0A                                l3331 25A4  
                              l3411 20E0                                l3403 2088  
                              l4203 1132                                l3421 24BA  
                              l3501 1AFC                                l3325 1E28  
                              l3317 1DDC                                l3333 25B0  
                              l3341 266A                                l3405 209C  
                              l4301 1442                                l4221 1198  
                              l4213 1152                                l4205 1142  
                              l3511 1F76                                l3351 272E  
                              l3415 2626                                l3423 24CE  
                              l3503 1B0E                                l3327 1E5E  
                              l3319 1DEE                                l3335 25C2  
                              l3343 266E                                l3407 20A0  
                              l3431 17A4                                l4311 1454  
                              l4303 1444                                l4231 11C0  
                              l4223 11B0                                l4215 1164  
                              l4207 114C                                l4151 1040  
                              l3521 1FAA                                l3513 1F7E  
                              l3425 24FC                                l3361 1B66  
                              l3337 25C6                                l3345 2686  
                              l3409 20CC                                l3441 1812  
                              l3433 17B2                                l3601 165A  
                              l4305 1448                                l4241 11EA  
                              l4233 11C4                                l4225 11B4  
                              l4217 1168                                l4161 1052  
                              l4153 1042                                l4145 1038  
                              l3531 1FE4                                l3523 1FBA  
                              l3515 1F88                                l3427 2500  
                              l3419 24B6                                l3371 1BE8  
                              l3363 1B7A                                l3355 1B34  
                              l3339 265E                                l3451 18A4  
                              l3443 181C                                l3435 17B4  
                              l3611 1724                                l3603 167E  
                              l4307 144E                                l4251 1206  
                              l4243 11EC                                l4235 11D2  
                              l4227 11B8                                l4219 118A  
                              l4171 1076                                l4163 105C  
                              l4155 1046                                l4147 103A  
                              l3533 1FEE                                l3525 1FC2  
                              l3517 1F98                                l3509 1F70  
                              l3701 2518                                l3349 2712  
                              l3373 1BEA                                l3365 1B88  
                              l3357 1B40                                l3381 1D32  
                              l3461 196C                                l3445 1822  
                              l3453 1908                                l3437 17CE  
                              l3621 1760                                l3613 1732  
                              l3605 16C8                                l4309 1452  
                              l4261 124C                                l4253 120A  
                              l4237 11E4                                l4229 11BC  
                              l4181 10AA                                l4173 107A  
                              l4157 104A                                l4149 103E  
                              l3527 1FCC                                l3519 1FA0  
                              l3703 2528                                l3471 19BC  
                              l3375 1BFC                                l3367 1B9A  
                              l3359 1B5E                                l3391 1DB4  
                              l3383 1D46                                l3455 191A  
                              l3463 197A                                l3447 1898  
                              l3439 180A                                l3615 1746  
                              l3551 14A4                                l3543 145E  
                              l4271 1394                                l4263 1264  
                              l4255 121A                                l4239 11E8  
                              l4191 110C                                l4183 10B4  
                              l4175 108C                                l4159 104E  
                              l3529 1FDC                                l3537 1FFC  
                              l3641 255E                                l3801 1F20  
                              l3705 252C                                l3473 19C0  
                              l3369 1BC8                                l3385 1D54  
                              l3377 1D0C                                l3393 2038  
                              l3457 1938                                l3449 189E  
                              l3609 1700                                l3561 14CA  
                              l3553 14B0                                l3545 1482  
                              l3625 176C                                l4281 13CC  
                              l4273 139E                                l4265 1266  
                              l4257 1230                                l4249 11F2  
                              l4193 1116                                l4185 10C6  
                              l4177 10A4                                l4169 1062  
                              l3651 257A                                l3643 2562  
                              l3731 1C30                                l3811 1F62  
                              l3803 1F30                                l3707 2542  
                              l3491 1A76                                l3483 1A1C  
                              l3475 19DC                                l3467 19A4  
                              l3387 1D82                                l3379 1D2A  
                              l3395 2046                                l3459 1952  
                              l3627 1790                                l3619 1752  
                              l3555 14B2                                l3547 1490  
                              l4275 13A4                                l4267 1278  
                              l4259 1234                                l4187 10D8  
                              l4179 10A6                                l3653 2590  
                              l3645 2564                                l3637 2558  
                              l3741 1C7E                                l3733 1C32  
                              l3661 26CC                                l3813 1F6A  
                              l3805 1F40                                l3709 2546  
                              l3821 2772                                l3901 232A  
                              l3485 1A32                                l3477 1A12  
                              l3469 19B8                                l3389 1DA2  
                              l3397 205A                                l3581 155C  
                              l4373 150E                                l3573 14DC  
                              l3565 14D0                                l3557 14C4  
                              l3549 14A0                                l4293 13F8  
                              l4285 13D4                                l4269 1368  
                              l4189 10F2                                ?_pad 0015  
                              l3655 2594                                l3647 2566  
                              l3639 255C                                l3751 1CBC  
                              l3743 1C94                                l3735 1C36  
                              l3727 1C24                                l3671 26DC  
                              l3663 26D0                                l3807 1F46  
                              l3911 2362                                l3903 2332  
                              l3831 22E4                                l3823 22B2  
                              l4375 1A60                                l3495 1AAC  
                              l3487 1A3A                                l3479 1A16  
                              l3399 2068                                l3591 15D4  
                              l3583 155E                                l4295 140A  
                              l4287 13DE                                l4279 13B8  
                              l4199 111C                                l4377 2010  
                              l3649 2576                                l3761 1CDA  
                              l3753 1CC2                                l3745 1C9A  
                              l3737 1C4E                                l3729 1C2C  
                              l3665 26D2                                l3657 26C6  
                              l3809 1F56                                l3817 2768  
                              l3921 238E                                l3913 2368  
                              l3905 2344                                l3841 231A  
                              l3833 22F0                                l3489 1A42  
                              l3593 15F4                                l3585 1582  
                              l3577 14E8                                l3569 14D6  
                              l3673 2402                                l3681 25E8  
                              l4289 13E4                                l3771 1D02  
                              l3763 1CF0                                l3755 1CC8  
                              l3747 1CAA                                l3739 1C66  
                              l3667 26D4                                l3659 26CA  
                              l3691 250A                                l3819 276E  
                              l3915 237E                                l3907 234C  
                              l3843 2320                                l3835 22F8  
                              l3499 1AEA                                l3595 1602  
                              l3587 15B8                                l3579 153C  
                              l3675 240A                                l3851 2464  
                              l3683 25F8                                l4299 1412  
                              l3685 275C                                l3773 1D06  
                              l3765 1CF4                                l3757 1CCE  
                              l3749 1CB0                                l3669 26D8  
                              l3781 26B4                                l3693 250E  
                              l3917 2386                                l3909 2354  
                              l3837 2308                                l3829 22B6  
                              l3589 15C6                                l3677 2418  
                              l3853 2476                                l3687 2760  
                              l3767 1CF8                                l3759 1CD4  
                              l3775 2694                                l3791 1EDC  
                              l3695 2510                                l3871 2134  
                              l3863 20FA                                l3919 2388  
                              l3839 230A                                l3599 1648  
                              l3679 243E                                l3855 247E  
                              l3847 26EC                                l3689 2764  
                              l3769 1CFC                                l3777 26A4  
                              l3793 1EEC                                l3785 1EA8  
                              l3697 2514                                l3881 217C  
                              l3873 2142                                l3865 210A  
                              l3857 2486                                l3779 26AE  
                              l3795 1EF4                                l3787 1EB8  
                              l3699 2516                                l3883 2186  
                              l3875 214C                                l3867 2120  
                              l3891 2252                                l3859 24A2  
                              l3797 1F06                                l3789 1ECC  
                              l3877 216A                                l3869 2128  
                              l3893 2260                                l3885 2228  
                              l3799 1F16                                l3879 217A  
                              l3895 227E                                l3887 223E  
                              l3897 228E                                l3889 2246  
                              l3899 2298                                ?_isr 0001  
                              STR_1 1023                                u2000 1E5E  
                              u2001 1E5A                                u2010 25E6  
                              u2011 25E2                                u2020 2686  
                              u2100 2046                                u2021 2682  
                              u2101 2042                                u2110 2068  
                              u2031 1B3A                                u2111 2064  
                              u2040 1B5E                                u2120 20BE  
                              u2200 191A                                u2041 1B5A  
                              u2121 20BA                                u2201 1916  
                              u2050 1B88                                u2130 20CC  
                              u2210 1938                                u2051 1B84  
                              u2131 20C8                                u2211 1934  
                              u2140 2656                                u2300 1AFC  
                              u2060 1BC8                                u2220 1952  
                              u2141 2650                                u2301 1AF8  
                              u2061 1BC4                                u2221 194E  
                              u2150 2658                                u2310 1B0E  
                              u2070 1D2A                                u2230 196C  
                              u3007 26E2                                u2311 1B0A  
                              u2071 1D26                                u2231 1968  
                              u2160 24CE                                u2080 1D54  
                              u2240 197A                                u2400 167E  
                              u2320 1482                                u3017 1C40  
                              u2161 24CA                                u2081 1D50  
                              u2241 1976                                u2401 167A  
                              u2321 147E                                u2170 24FC  
                              u2250 19DC                                u2090 1D82  
                              u2410 1724                                u2330 154E  
                              u3107 1F82                                u3027 1C58  
                              u2171 24F8                                u2251 19D8  
                              u2091 1D7E                                u2411 1720  
                              u2331 154A                                u2500 1F16  
                              u2260 1A12                                u2180 17B2  
                              u2340 155C                                u2420 245A  
                              u3117 1F8C                                u3037 1C70  
                              u2501 1F12                                u2261 1A0E  
                              u2181 17AE                                u2341 1558  
                              u2421 2456                                u2510 1F30  
                              u2270 1A2E                                u2190 17CE  
                              u2350 1582                                u2430 2624  
                              u3207 1FF2                                u3127 1F9A  
                              u3047 1C88                                u2511 1F2C  
                              u2271 1A2A                                u2191 17CA  
                              u2351 157E                                u2431 2620  
                              u2440 26A4                                u2520 1F40  
                              u2600 223E                                u2280 1AE4  
                              u2360 15C6                                u3137 1FA4  
                              u3057 1CA0                                u2441 26A0  
                              u2521 1F3C                                u2601 223A  
                              u2281 1ADE                                u2361 15C2  
                              u2530 1F56                                u2450 1EB8  
                              u2610 2260                                u2290 1AE6  
                              u2370 1642                                u3147 1FAE  
                              u3067 1CB2                                u2531 1F52  
                              u2451 1EB4                                u2611 225C  
                              u2371 163C                                u2460 1EC8  
                              u2620 227E                                u2380 1644  
                              u3157 1FBC                                u3077 1CE4  
                              u2461 1EC4                                u2621 227A  
                              u2470 1EDC                                u2630 2344  
                              u2550 22E4                                u2390 165A  
                              u3167 1FC6                                u3087 259A  
                              u2471 1ED8                                u2631 2340  
                              u2551 22E0                                u2391 1656  
                              u2480 1EEC                                u2640 2362  
                              u2560 231A                                u2544 22CA  
                              u2800 108A                                u3177 1FD0  
                              u3097 1F78                                u2481 1EE8  
                              u2641 235E                                u2561 2316  
                              u2545 22C6                                u2801 1086  
                              u2490 1F06                                u2570 2120  
                              u2650 237E                                u3187 1FDE  
                              u2491 1F02                                u2571 211C  
                              u2651 237A                                u2811 10BE  
                              u2580 2142                                u2900 13F4  
                              u3197 1FE8                                u2581 213E  
                              u2901 13F0                                u2821 10D0  
                              u2590 216A                                u2830 1142  
                              u2591 2166                                u2831 113E  
                              u2840 1178                                u2841 1174  
                              u1970 1DEE                                u2850 118A  
                              u1971 1DEA                                u2851 1186  
                              u1980 1E00                                u2860 11D2  
                              u1981 1DFC                                u2861 11CE  
                              u2917 1096                                u1990 1E28  
                              u2870 121A                                u1991 1E24  
                              u2871 1216                                u2927 11A2  
                              u2880 1278                                u2881 1274  
                              u2937 1224                                u2890 13B4  
                              u2891 13B0                                u2947 123E  
                              u2957 1256                                u2967 141C  
                              u2977 1434                                u2987 254C  
                              u2997 26BA                                _RCON 000FD0  
                              _dbuf 0130                                _atoi 19A4  
                              _main 1038                                _prec 006C  
                              _nout 0088                                pad@i 001C  
                              pad@p 0019                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 001E                                fsr2l 000FD9  
                              btemp 0075                                _utoa 17A4  
                              prodh 000FF4                                prodl 000FF3  
                              start 080E                        ___param_bank 000000  
 __end_of_CCP1_Capture_Init_Default 2768                               ??_pad 001B  
                             ??_isr 0001             __end_of_LCD_Init_ECE376 1D0C  
                             ?_atoi 000C                               ?_main 0001  
                             _CCPR1 000FBE                               _CCPR2 000FBB  
                   __end_of___lldiv 219E                               ?_utoa 0020  
                   __end_of___lodiv 1C24                               _T1CON 000FCD  
                   __end_of___llmod 22B0                               _T3CON 000FB1  
                   __end_of___lomod 1DDC                     __end_of___lwdiv 239E  
                             i2l246 2224                        vfpfcnvrt@fmt 0042  
                      vfpfcnvrt@llu 004A                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95   LCD_set_cursor_position@ddram_addr 000A  
          __end_of_result_msg_title 1023                               _flags 006E  
                             _fputc 1DDC                               _fputs 25A4  
                   __end_of_isdigit 265E                               atoi@n 0019  
                             pad@fp 0015                               atoi@s 000C  
                             _width 006A                               _putch 2776  
                             main@i 012A    __size_of_LCD_set_cursor_position 00CA  
                main@num_of_seconds 0124                     __end_of_isspace 2508  
                             tablat 000FF5        LCD_write_data_byte_4bit@data 0008  
             __end_of_Timer1_Enable 2772                               plusw1 000FE3  
                             plusw2 000FDB                               ttemp5 0076  
                             ttemp6 0079                               ttemp7 007D  
                             utoa@d 0022                               utoa@i 003E  
                             utoa@n 0036                               utoa@p 0032  
                             utoa@w 0034                               status 000FD8  
                             wtemp8 0076                     __end_of_sprintf 24B6  
       LCD_set_cursor_position@line 000B                    ___lodiv@dividend 0005  
       __end_of_Timer1_Init_Default 276E                     __initialization 239E  
                      __end_of_atoi 1B34                        __end_of_main 145E  
                      __end_of_utoa 19A4                              ??_atoi 000E  
                            ??_main 0068         ??_LCD_write_instr_byte_4bit 0007  
       ??_LCD_write_instr_byte_8bit 0007                              ??_utoa 002A  
                     __activetblptr 000002                    ___lodiv@quotient 0015  
                            _ADCON1 000FC1                      _Timer1_Disable 2772  
                            ?_fputc 0005                    ___llmod@dividend 0005  
                            ?_fputs 000E                              ?_putch 0001  
                            i2l3071 21AE                              i2l3081 21EC  
                            i2l3073 21BC                              i2l3083 221E  
                            i2l3075 21CE                              i2l3085 2222  
                            i2l3077 21D0                              i2l3069 21A0  
                            i2l3079 21DE                       vfpfcnvrt@done 0052  
                    _start_game_msg 100F                              _STKPTR 000FFC  
                      vfprintf@cfmt 005C                              ___wmul 2712  
                         ??___lldiv 0016                           ??___lodiv 0015  
                         ??___llmod 000D                           ??___lomod 0015  
                         ??___lwdiv 0012                    __end_of_init_msg 100F  
                            clear_0 23D6                              clear_1 23E2  
                            clear_2 23EE                    ?_LCD_Init_ECE376 0001  
                            pad@buf 0017                              _strcat 26EC  
                            _strcpy 25E8                              _strlen 265E  
  __end_of_LCD_write_data_byte_4bit 2556                       main@num_of_ms 0126  
                     main@num_of_us 0128                              fputc@c 0005  
                            fputs@c 0012                              fputs@i 0013  
                      __pdataCOMRAM 0074                              fputs@s 000E  
                         ??_isdigit 0007              __end_of_Timer1_Disable 2776  
                      __mediumconst 0000                           ??_isspace 0007  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                              putch@c 0001  
                  __end_of_vfprintf 2464                              utoa@fp 0020  
                         ??_sprintf 0068              __end_of_start_game_msg 101B  
                        __accesstop 0080             __end_of__initialization 23F4  
         _LCD_write_instr_byte_4bit 2556           _LCD_write_instr_byte_8bit 26C4  
                     ___rparam_used 000001               main@stkptr_reg_string 0110  
                    __pcstackCOMRAM 0001                        __pidataBANK0 2738  
       ??_CCP1_Capture_Init_Default 0005                       __end_of_fputc 1EA6  
                     __end_of_fputs 25E8                       __end_of_putch 2778  
                   ?_Timer1_Disable 0001                       _init_complete 0071  
             _timer1_overflow_count 0080             _LCD_set_cursor_position 1EA6  
                           ??_fputc 0009                             ??_fputs 0012  
                           ??_putch 0005                          __pbssBANK0 0080  
                        __pbssBANK1 0130                      _game_done_flag 008A  
                           ?___wmul 0005                             _CCP1CON 000FBD  
                           _CCP2CON 000FBA                 main@rcon_reg_string 0100  
                           ?_strcat 0011                             ?_strcpy 0009  
                           ?_strlen 0005                  __size_of_vfpfcnvrt 0346  
          _LCD_write_data_byte_4bit 2508           _CCP1_Capture_Init_Default 275C  
                  ___lomod@dividend 0005                             __Hparam 0000  
                           __Lparam 0000                             ___lldiv 20FA  
                   __size_of___wmul 0026                             ___lodiv 1B34  
                           ___llmod 2228                             ___lomod 1D0C  
                           ___lwdiv 232A                           ?_vfprintf 0056  
                      __psmallconst 1000                             __pcinit 239E  
                           __ramtop 1000                             __ptext0 1038  
                           __ptext1 26EC                             __ptext2 25E8  
                           __ptext3 2464                             __ptext4 2402  
                           __ptext5 145E                             __ptext6 17A4  
                           __ptext7 2038                             __ptext8 265E  
                           __ptext9 25A4                     __size_of_strcat 0026  
                   __size_of_strcpy 003E                     __size_of_strlen 0036  
                      __size_of_pad 00C2                             _isdigit 2626  
                      __size_of_isr 1A20           ??_LCD_set_cursor_position 000A  
                           _isspace 24B6                        _elapsed_time 0084  
                           atoi@neg 0012                             _sprintf 2464  
                    __pintcode_body 219E                end_of_initialization 23F4  
                           fputc@fp 0007                       __Lmediumconst 0000  
                           int_func 219E                             fputs@fp 0010  
                   ___lldiv@divisor 0012                     ___lldiv@counter 001A  
                        _shift_mode 0070                   __end_of_vfpfcnvrt 17A4  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE        __size_of_Timer1_Init_Default 0006  
                        ??_vfprintf 005C                             strcpy@d 000F  
                           strlen@a 0007                             strcpy@s 000D  
                           strlen@s 0005                          _result_msg 008C  
                         _PORTBbits 000F81                           _PORTDbits 000F83  
            __size_of_Timer1_Enable 0004  LCD_set_cursor_position@pos_on_line 0009  
                   _address_counter 008B                        _CURRENT_DISP 0073  
                  _current_func_set 00C6                   _LCD_clear_display 2694  
                       vfpfcnvrt@ap 0044                   _hex_to_bit_string 22B0  
                       vfpfcnvrt@fp 0040                      __end_of___wmul 2738  
                     __pidataCOMRAM 2778                    ??_Timer1_Disable 0005  
                ?_LCD_clear_display 0001                  ?_hex_to_bit_string 0005  
                    __end_of_strcat 2712                      __end_of_strcpy 2626  
                    __end_of_strlen 2694                 start_initialization 239E  
                   ___lodiv@divisor 000D                     ___lodiv@counter 001D  
               ??_LCD_clear_display 0009                         __end_of_pad 20FA  
                       __end_of_isr 2228                 ??_hex_to_bit_string 0007  
          __size_of_LCD_Init_ECE376 00E8                       _Timer1_Enable 276E  
                   ___llmod@divisor 0009                     ___llmod@counter 000D  
                       vfprintf@fmt 0058           __end_of_LCD_clear_display 26C4  
         __end_of_hex_to_bit_string 232A                            ??___wmul 0009  
                       __pdataBANK0 00A6          ??_LCD_write_data_byte_4bit 0007  
                          ??_strcat 0015                            ??_strcpy 000D  
                          ??_strlen 0007                         __pbssCOMRAM 006A  
                     __pcstackBANK0 00C9                       __pcstackBANK1 0100  
                    ?_Timer1_Enable 0001                           _atoi$1250 0018  
                         _atoi$1251 0016                           _atoi$1249 0014  
                         _main$1563 0120                    ___lwdiv@dividend 000E  
                         __pintcode 0808                           _disp_16x2 00C8  
                 _LCD_enable_toggle 1F70                            ?___lldiv 000E  
                          ?___lodiv 0005                            ?___llmod 0005  
                          ?___lomod 0005                            ?___lwdiv 000E  
                ?_LCD_enable_toggle 0001                   __size_of_vfprintf 0062  
                   ___lomod@divisor 000D                         __smallconst 1000  
                   ___lomod@counter 0015                            ?_isdigit 0005  
               ??_LCD_enable_toggle 0005                            ?_isspace 0005  
                  ___lwdiv@quotient 0013                            ?_sprintf 005E  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
               _Timer1_Init_Default 2768                      __size_of_putch 0002  
                    ___wmul@product 0009               _hex_to_bit_string$702 000A  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                 ??_LCD_Init_ECE376 0009                            _PIE1bits 000F9D  
                          _PIE2bits 000FA0                       _DISP_BIT_MODE 0072  
                          i2u182_40 21AE                            i2u182_41 21AA  
                          i2u183_40 21BC                            i2u183_41 21B8  
                          i2u184_40 21DE                            i2u184_41 21DA  
         __end_of_LCD_enable_toggle 2038                            i2u185_40 21EC  
                          i2u185_41 21E8                            _PIR1bits 000F9E  
        __size_of_LCD_clear_display 0030                            _RCONbits 000FD0  
        __size_of_hex_to_bit_string 007A                           main@F3014 00B6  
                         main@F3016 00A6                ?_Timer1_Init_Default 0001  
                         _vfpfcnvrt 145E                           main@i_664 012B  
                         main@i_665 012C                           main@i_690 012D  
                         main@i_695 012E                           main@i_696 012F  
                 ___wmul@multiplier 0005      LCD_write_instr_byte_4bit@instr 0008  
                      _isspace$1267 000B                     ??_Timer1_Enable 0005  
                         copy_data0 23B2      LCD_write_instr_byte_8bit@instr 0008  
                          __Hrparam 0000                          vfprintf@ap 005A  
                          __Lrparam 0000                          vfprintf@fp 0056  
             ??_Timer1_Init_Default 0005            hex_to_bit_string@hex_val 0009  
                  __size_of___lldiv 00A4                    __size_of___lodiv 00F0  
                  __size_of___llmod 0088                    __size_of___lomod 00D0  
                        ?_vfpfcnvrt 0040                    __size_of___lwdiv 0074  
          ?_LCD_set_cursor_position 0009                  hex_to_bit_string@i 000C  
                        sprintf@fmt 0060                          strcat@dest 0011  
                  __size_of_isdigit 0038                     ___lwdiv@divisor 0010  
                  __size_of_isspace 0052                     ___lwdiv@counter 0012  
                          __ptext10 1DDC                            __ptext11 2776  
                          __ptext20 2228                            __ptext12 1D0C  
                          __ptext21 20FA                            __ptext13 1B34  
                          __ptext30 2556                            __ptext22 2768  
                          __ptext14 19A4                            __ptext31 1F70  
                          __ptext23 276E                            __ptext15 24B6  
                          __ptext32 275C                            __ptext24 2772  
                          __ptext16 2626                            __ptext25 2508  
                          __ptext17 2712                            __ptext26 1EA6  
                          __ptext18 22B0                            __ptext27 2694  
                          __ptext19 232A                            __ptext28 26C4  
                          __ptext29 1C24                    __size_of_sprintf 0052  
                        strcpy@dest 0009                       __size_of_atoi 0190  
                     __size_of_main 0426                            _init_msg 1001  
                     __size_of_utoa 0200          __size_of_LCD_enable_toggle 00C8  
                  _result_msg_title 101B                            int$flags 0075  
                          _vfprintf 2402  __size_of_LCD_write_instr_byte_4bit 004E  
__size_of_LCD_write_instr_byte_8bit 0028          ?_LCD_write_instr_byte_4bit 0001  
        ?_LCD_write_instr_byte_8bit 0001                      _vfpfcnvrt$1231 0054  
                        _INTCONbits 000FF2                            isdigit@c 0005  
                          intlevel2 0000                           sprintf@ap 00CB  
                         strcat@src 0013                            isspace@c 0005  
                  ___lldiv@dividend 000E                           strcpy@src 000B  
   __end_of_LCD_set_cursor_position 1F70                         ??_vfpfcnvrt 0046  
       hex_to_bit_string@bit_string 009D   __end_of_LCD_write_instr_byte_4bit 25A4  
                          sprintf@f 00CD                            sprintf@s 005E  
 __end_of_LCD_write_instr_byte_8bit 26EC                    ___lldiv@quotient 0016  
                   _LCD_Init_ECE376 1C24             __size_of_Timer1_Disable 0004  
 __size_of_LCD_write_data_byte_4bit 004E           ?_LCD_write_data_byte_4bit 0001  
                 _current_disp_ctrl 0074  __size_of_CCP1_Capture_Init_Default 000C  
