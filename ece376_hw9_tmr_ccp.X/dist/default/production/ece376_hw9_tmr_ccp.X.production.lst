

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Nov 11 02:46:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4620 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  00206E                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _current_func_set
    89  00206E  30                 	db	48
    90                           
    91                           ;initializer for _current_entry_mode
    92  00206F  06                 	db	6
    93                           
    94                           ;initializer for _disp_16x2
    95  002070  01                 	db	1
    96                           
    97                           ;initializer for _current_disp_ctrl
    98  002071  08                 	db	8
    99                           
   100                           	psect	smallconst
   101  001000                     __psmallconst:
   102                           	callstack 0
   103  001000  00                 	db	0
   104  001001                     _init_msg:
   105                           	callstack 0
   106  001001  49                 	db	73
   107  001002  6E                 	db	110
   108  001003  69                 	db	105
   109  001004  74                 	db	116
   110  001005  20                 	db	32
   111  001006  73                 	db	115
   112  001007  75                 	db	117
   113  001008  63                 	db	99
   114  001009  63                 	db	99
   115  00100A  65                 	db	101
   116  00100B  73                 	db	115
   117  00100C  73                 	db	115
   118  00100D  21                 	db	33
   119  00100E  00                 	db	0
   120  00100F                     __end_of_init_msg:
   121                           	callstack 0
   122  00100F                     _start_game_msg:
   123                           	callstack 0
   124  00100F  47                 	db	71
   125  001010  61                 	db	97
   126  001011  6D                 	db	109
   127  001012  65                 	db	101
   128  001013  20                 	db	32
   129  001014  62                 	db	98
   130  001015  65                 	db	101
   131  001016  67                 	db	103
   132  001017  75                 	db	117
   133  001018  6E                 	db	110
   134  001019  21                 	db	33
   135  00101A  00                 	db	0
   136  00101B                     __end_of_start_game_msg:
   137                           	callstack 0
   138  00101B                     _result_msg_title:
   139                           	callstack 0
   140  00101B  52                 	db	82
   141  00101C  65                 	db	101
   142  00101D  73                 	db	115
   143  00101E  75                 	db	117
   144  00101F  6C                 	db	108
   145  001020  74                 	db	116
   146  001021  3A                 	db	58
   147  001022  00                 	db	0
   148  001023                     __end_of_result_msg_title:
   149                           	callstack 0
   150  0000                     _CCPR2	set	4027
   151  0000                     _CCPR1	set	4030
   152  0000                     _INTCONbits	set	4082
   153  0000                     _PORTBbits	set	3969
   154  0000                     _PORTB	set	3969
   155  0000                     _TRISB	set	3987
   156  0000                     _ADCON1	set	4033
   157  0000                     _PIR2bits	set	4001
   158  0000                     _PIR1bits	set	3998
   159  0000                     _T1CON	set	4045
   160  0000                     _PORTC	set	3970
   161  0000                     _PORTD	set	3971
   162  0000                     _TRISC	set	3988
   163  0000                     _LATCbits	set	3979
   164  0000                     _TRISD	set	3989
   165  0000                     _LATDbits	set	3980
   166  0000                     _PIE2bits	set	4000
   167  0000                     _CCP2CON	set	4026
   168  0000                     _PIE1bits	set	3997
   169  0000                     _T3CON	set	4017
   170  0000                     _CCP1CON	set	4029
   171  001023                     STR_1:
   172  001023  25                 	db	37
   173  001024  33                 	db	51	;'3'
   174  001025  75                 	db	117	;'u'
   175  001026  73                 	db	115	;'s'
   176  001027  3A                 	db	58	;':'
   177  001028  25                 	db	37
   178  001029  33                 	db	51	;'3'
   179  00102A  75                 	db	117	;'u'
   180  00102B  6D                 	db	109	;'m'
   181  00102C  73                 	db	115	;'s'
   182  00102D  3A                 	db	58	;':'
   183  00102E  25                 	db	37
   184  00102F  33                 	db	51	;'3'
   185  001030  75                 	db	117	;'u'
   186  001031  75                 	db	117	;'u'
   187  001032  73                 	db	115	;'s'
   188  001033  00                 	db	0
   189  001034  00                 	db	0	; dummy byte at the end
   190  0000                     
   191                           ; #config settings
   192                           
   193                           	psect	cinit
   194  001E5A                     __pcinit:
   195                           	callstack 0
   196  001E5A                     start_initialization:
   197                           	callstack 0
   198  001E5A                     __initialization:
   199                           	callstack 0
   200                           
   201                           ; Initialize objects allocated to COMRAM (4 bytes)
   202                           ; load TBLPTR registers with __pidataCOMRAM
   203  001E5A  0E6E               	movlw	low __pidataCOMRAM
   204  001E5C  6EF6               	movwf	tblptrl,c
   205  001E5E  0E20               	movlw	high __pidataCOMRAM
   206  001E60  6EF7               	movwf	tblptrh,c
   207  001E62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   208  001E64  6EF8               	movwf	tblptru,c
   209  001E66  EE00  F07B         	lfsr	0,__pdataCOMRAM
   210  001E6A  EE10 F004          	lfsr	1,4
   211  001E6E                     copy_data0:
   212  001E6E  0009               	tblrd		*+
   213  001E70  CFF5 FFEE          	movff	tablat,postinc0
   214  001E74  50E5               	movf	postdec1,w,c
   215  001E76  50E1               	movf	fsr1l,w,c
   216  001E78  E1FA               	bnz	copy_data0
   217                           
   218                           ; Clear objects allocated to BANK0 (85 bytes)
   219  001E7A  EE00  F080         	lfsr	0,__pbssBANK0
   220  001E7E  0E55               	movlw	85
   221  001E80                     clear_0:
   222  001E80  6AEE               	clrf	postinc0,c
   223  001E82  06E8               	decf	wreg,f,c
   224  001E84  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to COMRAM (19 bytes)
   227  001E86  EE00  F068         	lfsr	0,__pbssCOMRAM
   228  001E8A  0E13               	movlw	19
   229  001E8C                     clear_1:
   230  001E8C  6AEE               	clrf	postinc0,c
   231  001E8E  06E8               	decf	wreg,f,c
   232  001E90  E1FD               	bnz	clear_1
   233  001E92                     end_of_initialization:
   234                           	callstack 0
   235  001E92                     __end_of__initialization:
   236                           	callstack 0
   237  001E92  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238  001E94  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239  001E96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  001E98  6EF8               	movwf	tblptru,c
   241  001E9A  0100               	movlb	0
   242  001E9C  EF1B  F008         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245  000068                     __pbssCOMRAM:
   246                           	callstack 0
   247  000068                     _reaction_time:
   248                           	callstack 0
   249  000068                     	ds	4
   250  00006C                     _elapsed_time:
   251                           	callstack 0
   252  00006C                     	ds	4
   253  000070                     _width:
   254                           	callstack 0
   255  000070                     	ds	2
   256  000072                     _prec:
   257                           	callstack 0
   258  000072                     	ds	2
   259  000074                     _flags:
   260                           	callstack 0
   261  000074                     	ds	2
   262  000076                     _game_done_flag:
   263                           	callstack 0
   264  000076                     	ds	1
   265  000077                     	ds	1
   266  000078                     _init_complete:
   267                           	callstack 0
   268  000078                     	ds	1
   269  000079                     _DISP_BIT_MODE:
   270                           	callstack 0
   271  000079                     	ds	1
   272  00007A                     _CURRENT_DISP:
   273                           	callstack 0
   274  00007A                     	ds	1
   275                           
   276                           	psect	dataCOMRAM
   277  00007B                     __pdataCOMRAM:
   278                           	callstack 0
   279  00007B                     _current_func_set:
   280                           	callstack 0
   281  00007B                     	ds	1
   282  00007C                     _current_entry_mode:
   283                           	callstack 0
   284  00007C                     	ds	1
   285  00007D                     	ds	1
   286  00007E                     _current_disp_ctrl:
   287                           	callstack 0
   288  00007E                     	ds	1
   289                           
   290                           	psect	bssBANK0
   291  000080                     __pbssBANK0:
   292                           	callstack 0
   293  000080                     	ds	10
   294  00008A                     _time2:
   295                           	callstack 0
   296  00008A                     	ds	4
   297  00008E                     _time1:
   298                           	callstack 0
   299  00008E                     	ds	4
   300  000092                     _nout:
   301                           	callstack 0
   302  000092                     	ds	2
   303  000094                     _num_of_us:
   304                           	callstack 0
   305  000094                     	ds	2
   306  000096                     _num_of_ms:
   307                           	callstack 0
   308  000096                     	ds	2
   309  000098                     _num_of_seconds:
   310                           	callstack 0
   311  000098                     	ds	2
   312  00009A                     _address_counter:
   313                           	callstack 0
   314  00009A                     	ds	1
   315  00009B                     _dbuf:
   316                           	callstack 0
   317  00009B                     	ds	32
   318  0000BB                     _result_msg:
   319                           	callstack 0
   320  0000BB                     	ds	17
   321  0000CC                     	ds	9
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	callstack 0
   326  000001                     ??_LCD_enable_toggle:
   327  000001                     ?_strlen:
   328                           	callstack 0
   329  000001                     ?_isdigit:
   330                           	callstack 0
   331  000001                     ?_isspace:
   332                           	callstack 0
   333  000001                     ?___wmul:
   334                           	callstack 0
   335  000001                     ?___llmod:
   336                           	callstack 0
   337  000001                     ?___lodiv:
   338                           	callstack 0
   339  000001                     ?___lomod:
   340                           	callstack 0
   341  000001                     strlen@s:
   342                           	callstack 0
   343  000001                     ___wmul@multiplier:
   344                           	callstack 0
   345  000001                     isdigit@c:
   346                           	callstack 0
   347  000001                     isspace@c:
   348                           	callstack 0
   349  000001                     fputc@c:
   350                           	callstack 0
   351  000001                     ___llmod@dividend:
   352                           	callstack 0
   353  000001                     ___lodiv@dividend:
   354                           	callstack 0
   355  000001                     ___lomod@dividend:
   356                           	callstack 0
   357                           
   358                           ; 8 bytes @ 0x0
   359  000001                     	ds	2
   360  000003                     ??_isdigit:
   361  000003                     ??_isspace:
   362  000003                     ??_LCD_write_data_byte_4bit:
   363  000003                     ??_LCD_write_instr_byte_4bit:
   364  000003                     ??_LCD_write_instr_byte_8bit:
   365  000003                     fputc@fp:
   366                           	callstack 0
   367  000003                     strlen@a:
   368                           	callstack 0
   369  000003                     ___wmul@multiplicand:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x2
   373  000003                     	ds	1
   374  000004                     ??_fputc:
   375  000004                     LCD_write_data_byte_4bit@data:
   376                           	callstack 0
   377  000004                     LCD_write_instr_byte_4bit@instr:
   378                           	callstack 0
   379  000004                     LCD_write_instr_byte_8bit@instr:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x3
   383  000004                     	ds	1
   384  000005                     ??_LCD_clear_display:
   385  000005                     ??_LCD_Init_ECE376:
   386  000005                     LCD_set_cursor_position@pos_on_line:
   387                           	callstack 0
   388  000005                     ___wmul@product:
   389                           	callstack 0
   390  000005                     ___llmod@divisor:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     LCD_set_cursor_position@ddram_addr:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  000006                     	ds	1
   400  000007                     LCD_set_cursor_position@line:
   401                           	callstack 0
   402  000007                     _isspace$1257:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x6
   406  000007                     	ds	1
   407  000008                     ?_atoi:
   408                           	callstack 0
   409  000008                     atoi@s:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x7
   413  000008                     	ds	1
   414  000009                     ___llmod@counter:
   415                           	callstack 0
   416  000009                     fputs@s:
   417                           	callstack 0
   418  000009                     ___lodiv@divisor:
   419                           	callstack 0
   420  000009                     ___lomod@divisor:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0x8
   424  000009                     	ds	1
   425  00000A                     ??_atoi:
   426  00000A                     ?___lwdiv:
   427                           	callstack 0
   428  00000A                     ?___lldiv:
   429                           	callstack 0
   430  00000A                     fputs@fp:
   431                           	callstack 0
   432  00000A                     ___lwdiv@dividend:
   433                           	callstack 0
   434  00000A                     ___lldiv@dividend:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x9
   438  00000A                     	ds	1
   439  00000B                     fputs@c:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0xA
   443  00000B                     	ds	1
   444  00000C                     ___lwdiv@divisor:
   445                           	callstack 0
   446  00000C                     fputs@i:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xB
   450  00000C                     	ds	2
   451  00000E                     ?_pad:
   452                           	callstack 0
   453  00000E                     pad@fp:
   454                           	callstack 0
   455  00000E                     ___lwdiv@quotient:
   456                           	callstack 0
   457  00000E                     atoi@neg:
   458                           	callstack 0
   459  00000E                     ___lldiv@divisor:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0xD
   463  00000E                     	ds	1
   464  00000F                     pad@buf:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     ___lwdiv@counter:
   470                           	callstack 0
   471  000010                     pad@p:
   472                           	callstack 0
   473  000010                     _atoi$1239:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ___lomod@counter:
   479                           	callstack 0
   480  000011                     ___lodiv@quotient:
   481                           	callstack 0
   482                           
   483                           ; 8 bytes @ 0x10
   484  000011                     	ds	1
   485  000012                     ??_pad:
   486  000012                     _atoi$1241:
   487                           	callstack 0
   488  000012                     ___lldiv@quotient:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x11
   492  000012                     	ds	1
   493  000013                     pad@i:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x12
   497  000013                     	ds	1
   498  000014                     _atoi$1240:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x13
   502  000014                     	ds	1
   503  000015                     pad@w:
   504                           	callstack 0
   505  000015                     atoi@n:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x14
   509  000015                     	ds	1
   510  000016                     ___lldiv@counter:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x15
   514  000016                     	ds	3
   515  000019                     ___lodiv@counter:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x18
   519  000019                     	ds	1
   520  00001A                     ?_utoa:
   521                           	callstack 0
   522  00001A                     utoa@fp:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x19
   526  00001A                     	ds	1
   527  00001B                     utoa@d:
   528                           	callstack 0
   529                           
   530                           ; 8 bytes @ 0x1A
   531  00001B                     	ds	8
   532  000023                     ??_utoa:
   533                           
   534                           ; 1 bytes @ 0x22
   535  000023                     	ds	8
   536  00002B                     utoa@p:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x2A
   540  00002B                     	ds	2
   541  00002D                     utoa@w:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x2C
   545  00002D                     	ds	2
   546  00002F                     utoa@n:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x2E
   550  00002F                     	ds	8
   551  000037                     utoa@i:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x36
   555  000037                     	ds	2
   556  000039                     ?_vfpfcnvrt:
   557                           	callstack 0
   558  000039                     vfpfcnvrt@fp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x38
   562  000039                     	ds	1
   563  00003A                     vfpfcnvrt@fmt:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x39
   567  00003A                     	ds	1
   568  00003B                     vfpfcnvrt@ap:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x3A
   572  00003B                     	ds	1
   573  00003C                     ??_vfpfcnvrt:
   574                           
   575                           ; 1 bytes @ 0x3B
   576  00003C                     	ds	4
   577  000040                     vfpfcnvrt@llu:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x3F
   581  000040                     	ds	8
   582  000048                     _vfpfcnvrt$1221:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x47
   586  000048                     	ds	2
   587  00004A                     ?_vfprintf:
   588                           	callstack 0
   589  00004A                     vfprintf@fp:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x49
   593  00004A                     	ds	1
   594  00004B                     vfprintf@fmt:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x4A
   598  00004B                     	ds	1
   599  00004C                     vfprintf@ap:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x4B
   603  00004C                     	ds	1
   604  00004D                     vfprintf@cfmt:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x4C
   608  00004D                     	ds	1
   609  00004E                     ?_sprintf:
   610                           	callstack 0
   611  00004E                     sprintf@s:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x4D
   615  00004E                     	ds	1
   616  00004F                     sprintf@fmt:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x4E
   620  00004F                     	ds	7
   621  000056                     
   622                           ; 1 bytes @ 0x55
   623  000056                     	ds	2
   624  000058                     sprintf@ap:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x57
   628  000058                     	ds	1
   629  000059                     sprintf@f:
   630                           	callstack 0
   631                           
   632                           ; 5 bytes @ 0x58
   633  000059                     	ds	5
   634  00005E                     ??_main:
   635                           
   636                           ; 1 bytes @ 0x5D
   637  00005E                     	ds	2
   638  000060                     _main$1538:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x5F
   642  000060                     	ds	4
   643  000064                     main@i:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x63
   647  000064                     	ds	1
   648  000065                     main@i_681:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x64
   652  000065                     	ds	1
   653  000066                     main@i_683:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x65
   657  000066                     	ds	1
   658  000067                     main@i_684:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x66
   662  000067                     	ds	1
   663                           
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 203 in file "ece376_hw9_ccp_capt.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  i               1  102[COMRAM] unsigned char 
   674 ;;  i               1  101[COMRAM] unsigned char 
   675 ;;  i               1  100[COMRAM] unsigned char 
   676 ;;  i               1   99[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:       10 bytes
   691 ;; Hardware stack levels required when called:    9
   692 ;; This function calls:
   693 ;;		_CCP1_Capture_Init_Default
   694 ;;		_CCP2_Capture_Init_Default
   695 ;;		_LCD_Init_ECE376
   696 ;;		_LCD_clear_display
   697 ;;		_LCD_set_cursor_position
   698 ;;		_LCD_write_data_byte_4bit
   699 ;;		_Timer1_Init_Default
   700 ;;		___lldiv
   701 ;;		___llmod
   702 ;;		___lwdiv
   703 ;;		_sprintf
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text0
   710  001036                     __ptext0:
   711                           	callstack 0
   712  001036                     _main:
   713                           	callstack 22
   714                           
   715                           ;ece376_hw9_ccp_capt.c: 212:  TRISC |= (1u << 2);
   716                           
   717                           ;incstack = 0
   718  001036  8494               	bsf	148,2,c	;volatile
   719                           
   720                           ;ece376_hw9_ccp_capt.c: 213:  ADCON1 |= 0x0F;
   721  001038  0E0F               	movlw	15
   722  00103A  12C1               	iorwf	193,f,c	;volatile
   723                           
   724                           ;ece376_hw9_ccp_capt.c: 214:  TRISB |= (1u << 0);
   725  00103C  8093               	bsf	147,0,c	;volatile
   726                           
   727                           ;ece376_hw9_ccp_capt.c: 215:     TRISB |= (1u << 3);
   728  00103E  8693               	bsf	147,3,c	;volatile
   729                           
   730                           ;ece376_hw9_ccp_capt.c: 216:     TRISD &= ~(1u << 0);
   731  001040  9095               	bcf	149,0,c	;volatile
   732                           
   733                           ;ece376_hw9_ccp_capt.c: 218:     PORTB = 0x00;
   734  001042  0E00               	movlw	0
   735  001044  6E81               	movwf	129,c	;volatile
   736                           
   737                           ;ece376_hw9_ccp_capt.c: 219:     PORTC = 0x00;
   738  001046  0E00               	movlw	0
   739  001048  6E82               	movwf	130,c	;volatile
   740                           
   741                           ;ece376_hw9_ccp_capt.c: 220:     PORTD = 0x00;
   742  00104A  0E00               	movlw	0
   743  00104C  6E83               	movwf	131,c	;volatile
   744                           
   745                           ;ece376_hw9_ccp_capt.c: 223:  LCD_Init_ECE376();
   746  00104E  ECCA  F00B         	call	_LCD_Init_ECE376	;wreg free
   747                           
   748                           ;ece376_hw9_ccp_capt.c: 224:     LCD_set_cursor_position(1,1);
   749  001052  0E01               	movlw	1
   750  001054  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   751  001056  0E01               	movlw	1
   752  001058  EC84  F00E         	call	_LCD_set_cursor_position
   753                           
   754                           ;ece376_hw9_ccp_capt.c: 225:     for(uint8_t i=0; i<13; i++){
   755  00105C  0E00               	movlw	0
   756  00105E  6E64               	movwf	main@i^0,c
   757  001060                     l2418:
   758                           
   759                           ;ece376_hw9_ccp_capt.c: 226:         LCD_write_data_byte_4bit(init_msg[i]);
   760  001060  5064               	movf	main@i^0,w,c
   761  001062  0F01               	addlw	low _init_msg
   762  001064  6E5E               	movwf	??_main^0,c
   763  001066  C05E  FFF6         	movff	??_main,tblptrl
   764  00106A                     	if	1	;There is more than 1 active tblptr byte
   765  00106A  0E10               	movlw	high __smallconst
   766  00106C  6EF7               	movwf	tblptrh,c
   767  00106E                     	endif
   768  00106E                     	if	0	;tblptru may be non-zero
   769  00106E                     	endif
   770  00106E                     	if	0	;tblptru may be non-zero
   771  00106E                     	endif
   772  00106E  0008               	tblrd		*
   773  001070  50F5               	movf	tablat,w,c
   774  001072  ECDF  F00E         	call	_LCD_write_data_byte_4bit
   775                           
   776                           ;ece376_hw9_ccp_capt.c: 227:     }
   777  001076  2A64               	incf	main@i^0,f,c
   778  001078  0E0C               	movlw	12
   779  00107A  6464               	cpfsgt	main@i^0,c
   780  00107C  D7F1               	goto	l2418
   781                           
   782                           ;ece376_hw9_ccp_capt.c: 228:     LATDbits.LATD0 = 1u;
   783  00107E  808C               	bsf	140,0,c	;volatile
   784                           
   785                           ;ece376_hw9_ccp_capt.c: 229:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
   786  001080  0E66               	movlw	102
   787  001082  6E5F               	movwf	(??_main+1)^0,c
   788  001084  0E76               	movlw	118
   789  001086  6E5E               	movwf	??_main^0,c
   790  001088  0EC1               	movlw	193
   791  00108A                     u1517:
   792  00108A  2EE8               	decfsz	wreg,f,c
   793  00108C  D7FE               	bra	u1517
   794  00108E  2E5E               	decfsz	??_main^0,f,c
   795  001090  D7FC               	bra	u1517
   796  001092  2E5F               	decfsz	(??_main+1)^0,f,c
   797  001094  D7FA               	bra	u1517
   798  001096  F000               	nop	
   799                           
   800                           ;ece376_hw9_ccp_capt.c: 230:     LATDbits.LATD0 = 0u;
   801  001098  908C               	bcf	140,0,c	;volatile
   802                           
   803                           ;ece376_hw9_ccp_capt.c: 231:     LCD_clear_display();
   804  00109A  EC04  F010         	call	_LCD_clear_display	;wreg free
   805                           
   806                           ;ece376_hw9_ccp_capt.c: 232:     LCD_set_cursor_position(1,1);
   807  00109E  0E01               	movlw	1
   808  0010A0  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
   809  0010A2  0E01               	movlw	1
   810  0010A4  EC84  F00E         	call	_LCD_set_cursor_position
   811                           
   812                           ;ece376_hw9_ccp_capt.c: 236:  Timer1_Init_Default();
   813  0010A8  EC33  F010         	call	_Timer1_Init_Default	;wreg free
   814                           
   815                           ;ece376_hw9_ccp_capt.c: 237:     CCP1_Capture_Init_Default();
   816  0010AC  EC2D  F010         	call	_CCP1_Capture_Init_Default	;wreg free
   817                           
   818                           ;ece376_hw9_ccp_capt.c: 238:     CCP2_Capture_Init_Default();
   819  0010B0  EC27  F010         	call	_CCP2_Capture_Init_Default	;wreg free
   820                           
   821                           ;ece376_hw9_ccp_capt.c: 242:     PORTB = 0x00;
   822  0010B4  0E00               	movlw	0
   823  0010B6  6E81               	movwf	129,c	;volatile
   824                           
   825                           ;ece376_hw9_ccp_capt.c: 243:     PORTC = 0x00;
   826  0010B8  0E00               	movlw	0
   827  0010BA  6E82               	movwf	130,c	;volatile
   828                           
   829                           ;ece376_hw9_ccp_capt.c: 244:     PORTD = 0x00;
   830  0010BC  0E00               	movlw	0
   831  0010BE  6E83               	movwf	131,c	;volatile
   832  0010C0                     l2444:
   833                           
   834                           ;ece376_hw9_ccp_capt.c: 249:   if(PORTBbits.RB0) {
   835  0010C0  A081               	btfss	129,0,c	;volatile
   836  0010C2  D7FE               	goto	l2444
   837                           
   838                           ;ece376_hw9_ccp_capt.c: 250:             elapsed_time = 0u;
   839  0010C4  0E00               	movlw	0
   840  0010C6  6E6C               	movwf	_elapsed_time^0,c	;volatile
   841  0010C8  0E00               	movlw	0
   842  0010CA  6E6D               	movwf	(_elapsed_time+1)^0,c	;volatile
   843  0010CC  0E00               	movlw	0
   844  0010CE  6E6E               	movwf	(_elapsed_time+2)^0,c	;volatile
   845  0010D0  0E00               	movlw	0
   846  0010D2  6E6F               	movwf	(_elapsed_time+3)^0,c	;volatile
   847                           
   848                           ;ece376_hw9_ccp_capt.c: 251:             T1CON |= 0x01;
   849  0010D4  80CD               	bsf	205,0,c	;volatile
   850                           
   851                           ;ece376_hw9_ccp_capt.c: 252:             (INTCONbits.PEIE = 1u);
   852  0010D6  8CF2               	bsf	242,6,c	;volatile
   853                           
   854                           ;ece376_hw9_ccp_capt.c: 253:             (INTCONbits.GIE = 1);
   855  0010D8  8EF2               	bsf	242,7,c	;volatile
   856                           
   857                           ;ece376_hw9_ccp_capt.c: 256:             for(uint8_t i=0; i<11; i++) LCD_write_data_byte
      +                          _4bit(start_game_msg[i]);
   858  0010DA  0E00               	movlw	0
   859  0010DC  6E65               	movwf	main@i_681^0,c
   860  0010DE                     l2460:
   861  0010DE  5065               	movf	main@i_681^0,w,c
   862  0010E0  0F0F               	addlw	low _start_game_msg
   863  0010E2  6E5E               	movwf	??_main^0,c
   864  0010E4  C05E  FFF6         	movff	??_main,tblptrl
   865  0010E8                     	if	1	;There is more than 1 active tblptr byte
   866  0010E8  0E10               	movlw	high __smallconst
   867  0010EA  6EF7               	movwf	tblptrh,c
   868  0010EC                     	endif
   869  0010EC                     	if	0	;tblptru may be non-zero
   870  0010EC                     	endif
   871  0010EC                     	if	0	;tblptru may be non-zero
   872  0010EC                     	endif
   873  0010EC  0008               	tblrd		*
   874  0010EE  50F5               	movf	tablat,w,c
   875  0010F0  ECDF  F00E         	call	_LCD_write_data_byte_4bit
   876  0010F4  2A65               	incf	main@i_681^0,f,c
   877  0010F6  0E0A               	movlw	10
   878  0010F8  6465               	cpfsgt	main@i_681^0,c
   879  0010FA  D7F1               	goto	l2460
   880                           
   881                           ;ece376_hw9_ccp_capt.c: 257:             _delay((unsigned long)((1000)*(40000000u/4000.0
      +                          )));
   882  0010FC  0E33               	movlw	51
   883  0010FE  6E5F               	movwf	(??_main+1)^0,c
   884  001100  0EBB               	movlw	187
   885  001102  6E5E               	movwf	??_main^0,c
   886  001104  0EE0               	movlw	224
   887  001106                     u1527:
   888  001106  2EE8               	decfsz	wreg,f,c
   889  001108  D7FE               	bra	u1527
   890  00110A  2E5E               	decfsz	??_main^0,f,c
   891  00110C  D7FC               	bra	u1527
   892  00110E  2E5F               	decfsz	(??_main+1)^0,f,c
   893  001110  D7FA               	bra	u1527
   894                           
   895                           ;ece376_hw9_ccp_capt.c: 258:             LCD_clear_display();
   896  001112  EC04  F010         	call	_LCD_clear_display	;wreg free
   897                           
   898                           ;ece376_hw9_ccp_capt.c: 259:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
   899  001116  0E66               	movlw	102
   900  001118  6E5F               	movwf	(??_main+1)^0,c
   901  00111A  0E76               	movlw	118
   902  00111C  6E5E               	movwf	??_main^0,c
   903  00111E  0EC1               	movlw	193
   904  001120                     u1537:
   905  001120  2EE8               	decfsz	wreg,f,c
   906  001122  D7FE               	bra	u1537
   907  001124  2E5E               	decfsz	??_main^0,f,c
   908  001126  D7FC               	bra	u1537
   909  001128  2E5F               	decfsz	(??_main+1)^0,f,c
   910  00112A  D7FA               	bra	u1537
   911  00112C  F000               	nop	
   912                           
   913                           ;ece376_hw9_ccp_capt.c: 262:             LATDbits.LATD0 = 1u;
   914  00112E  808C               	bsf	140,0,c	;volatile
   915  001130                     l2474:
   916  001130  5076               	movf	_game_done_flag^0,w,c	;volatile
   917  001132  B4D8               	btfsc	status,2,c
   918  001134  D7FD               	goto	l2474
   919                           
   920                           ;ece376_hw9_ccp_capt.c: 275:             num_of_seconds = (uint16_t) (reaction_time / 10
      +                          000000u);
   921  001136  C068  F00A         	movff	_reaction_time,___lldiv@dividend	;volatile
   922  00113A  C069  F00B         	movff	_reaction_time+1,___lldiv@dividend+1	;volatile
   923  00113E  C06A  F00C         	movff	_reaction_time+2,___lldiv@dividend+2	;volatile
   924  001142  C06B  F00D         	movff	_reaction_time+3,___lldiv@dividend+3	;volatile
   925  001146  0E80               	movlw	128
   926  001148  6E0E               	movwf	___lldiv@divisor^0,c
   927  00114A  0E96               	movlw	150
   928  00114C  6E0F               	movwf	(___lldiv@divisor+1)^0,c
   929  00114E  0E98               	movlw	152
   930  001150  6E10               	movwf	(___lldiv@divisor+2)^0,c
   931  001152  0E00               	movlw	0
   932  001154  6E11               	movwf	(___lldiv@divisor+3)^0,c
   933  001156  EC51  F00D         	call	___lldiv	;wreg free
   934  00115A  C00A  F098         	movff	?___lldiv,_num_of_seconds
   935  00115E  C00B  F099         	movff	?___lldiv+1,_num_of_seconds+1
   936                           
   937                           ;ece376_hw9_ccp_capt.c: 276:             num_of_ms = (uint16_t) ((reaction_time % 100000
      +                          00u) / 10000u);
   938  001162  0E80               	movlw	128
   939  001164  6E05               	movwf	___llmod@divisor^0,c
   940  001166  0E96               	movlw	150
   941  001168  6E06               	movwf	(___llmod@divisor+1)^0,c
   942  00116A  0E98               	movlw	152
   943  00116C  6E07               	movwf	(___llmod@divisor+2)^0,c
   944  00116E  0E00               	movlw	0
   945  001170  6E08               	movwf	(___llmod@divisor+3)^0,c
   946  001172  C068  F001         	movff	_reaction_time,___llmod@dividend	;volatile
   947  001176  C069  F002         	movff	_reaction_time+1,___llmod@dividend+1	;volatile
   948  00117A  C06A  F003         	movff	_reaction_time+2,___llmod@dividend+2	;volatile
   949  00117E  C06B  F004         	movff	_reaction_time+3,___llmod@dividend+3	;volatile
   950  001182  EC51  F00E         	call	___llmod	;wreg free
   951  001186  C001  F00A         	movff	?___llmod,___lldiv@dividend
   952  00118A  C002  F00B         	movff	?___llmod+1,___lldiv@dividend+1
   953  00118E  C003  F00C         	movff	?___llmod+2,___lldiv@dividend+2
   954  001192  C004  F00D         	movff	?___llmod+3,___lldiv@dividend+3
   955  001196  0E10               	movlw	16
   956  001198  6E0E               	movwf	___lldiv@divisor^0,c
   957  00119A  0E27               	movlw	39
   958  00119C  6E0F               	movwf	(___lldiv@divisor+1)^0,c
   959  00119E  0E00               	movlw	0
   960  0011A0  6E10               	movwf	(___lldiv@divisor+2)^0,c
   961  0011A2  0E00               	movlw	0
   962  0011A4  6E11               	movwf	(___lldiv@divisor+3)^0,c
   963  0011A6  EC51  F00D         	call	___lldiv	;wreg free
   964  0011AA  C00A  F096         	movff	?___lldiv,_num_of_ms
   965  0011AE  C00B  F097         	movff	?___lldiv+1,_num_of_ms+1
   966                           
   967                           ;ece376_hw9_ccp_capt.c: 277:             num_of_us = (uint16_t) ((reaction_time % 100000
      +                          00u) % 10000u) / 10u;
   968  0011B2  0E80               	movlw	128
   969  0011B4  6E05               	movwf	___llmod@divisor^0,c
   970  0011B6  0E96               	movlw	150
   971  0011B8  6E06               	movwf	(___llmod@divisor+1)^0,c
   972  0011BA  0E98               	movlw	152
   973  0011BC  6E07               	movwf	(___llmod@divisor+2)^0,c
   974  0011BE  0E00               	movlw	0
   975  0011C0  6E08               	movwf	(___llmod@divisor+3)^0,c
   976  0011C2  C068  F001         	movff	_reaction_time,___llmod@dividend	;volatile
   977  0011C6  C069  F002         	movff	_reaction_time+1,___llmod@dividend+1	;volatile
   978  0011CA  C06A  F003         	movff	_reaction_time+2,___llmod@dividend+2	;volatile
   979  0011CE  C06B  F004         	movff	_reaction_time+3,___llmod@dividend+3	;volatile
   980  0011D2  EC51  F00E         	call	___llmod	;wreg free
   981  0011D6  C001  F060         	movff	?___llmod,_main$1538
   982  0011DA  C002  F061         	movff	?___llmod+1,_main$1538+1
   983  0011DE  C003  F062         	movff	?___llmod+2,_main$1538+2
   984  0011E2  C004  F063         	movff	?___llmod+3,_main$1538+3
   985                           
   986                           ;ece376_hw9_ccp_capt.c: 277:             num_of_us = (uint16_t) ((reaction_time % 100000
      +                          00u) % 10000u) / 10u;
   987  0011E6  0E10               	movlw	16
   988  0011E8  6E05               	movwf	___llmod@divisor^0,c
   989  0011EA  0E27               	movlw	39
   990  0011EC  6E06               	movwf	(___llmod@divisor+1)^0,c
   991  0011EE  0E00               	movlw	0
   992  0011F0  6E07               	movwf	(___llmod@divisor+2)^0,c
   993  0011F2  0E00               	movlw	0
   994  0011F4  6E08               	movwf	(___llmod@divisor+3)^0,c
   995  0011F6  C060  F001         	movff	_main$1538,___llmod@dividend
   996  0011FA  C061  F002         	movff	_main$1538+1,___llmod@dividend+1
   997  0011FE  C062  F003         	movff	_main$1538+2,___llmod@dividend+2
   998  001202  C063  F004         	movff	_main$1538+3,___llmod@dividend+3
   999  001206  EC51  F00E         	call	___llmod	;wreg free
  1000  00120A  C001  F00A         	movff	?___llmod,___lwdiv@dividend
  1001  00120E  C002  F00B         	movff	?___llmod+1,___lwdiv@dividend+1
  1002  001212  0E00               	movlw	0
  1003  001214  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  1004  001216  0E0A               	movlw	10
  1005  001218  6E0C               	movwf	___lwdiv@divisor^0,c
  1006  00121A  ECB6  F00E         	call	___lwdiv	;wreg free
  1007  00121E  C00A  F094         	movff	?___lwdiv,_num_of_us
  1008  001222  C00B  F095         	movff	?___lwdiv+1,_num_of_us+1
  1009                           
  1010                           ;ece376_hw9_ccp_capt.c: 281:             sprintf(result_msg, "%3us:%3ums:%3uus", num_of_
      +                          seconds, num_of_ms, num_of_us);
  1011  001226  0EBB               	movlw	low _result_msg
  1012  001228  6E4E               	movwf	sprintf@s^0,c
  1013  00122A  0E23               	movlw	low STR_1
  1014  00122C  6E4F               	movwf	sprintf@fmt^0,c
  1015  00122E  C098  F050         	movff	_num_of_seconds,?_sprintf+2
  1016  001232  C099  F051         	movff	_num_of_seconds+1,?_sprintf+3
  1017  001236  C096  F052         	movff	_num_of_ms,?_sprintf+4
  1018  00123A  C097  F053         	movff	_num_of_ms+1,?_sprintf+5
  1019  00123E  C094  F054         	movff	_num_of_us,?_sprintf+6
  1020  001242  C095  F055         	movff	_num_of_us+1,?_sprintf+7
  1021  001246  EC92  F00F         	call	_sprintf	;wreg free
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;ece376_hw9_ccp_capt.c: 283:             LCD_set_cursor_position(1,1);
  1025  00124A  0E01               	movlw	1
  1026  00124C  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1027  00124E  0E01               	movlw	1
  1028  001250  EC84  F00E         	call	_LCD_set_cursor_position
  1029                           
  1030                           ;ece376_hw9_ccp_capt.c: 284:             for(uint8_t i=0; i<7; i++) LCD_write_data_byte_
      +                          4bit(result_msg_title[i]);
  1031  001254  0E00               	movlw	0
  1032  001256  6E66               	movwf	main@i_683^0,c
  1033  001258                     l2488:
  1034  001258  5066               	movf	main@i_683^0,w,c
  1035  00125A  0F1B               	addlw	low _result_msg_title
  1036  00125C  6E5E               	movwf	??_main^0,c
  1037  00125E  C05E  FFF6         	movff	??_main,tblptrl
  1038  001262                     	if	1	;There is more than 1 active tblptr byte
  1039  001262  0E10               	movlw	high __smallconst
  1040  001264  6EF7               	movwf	tblptrh,c
  1041  001266                     	endif
  1042  001266                     	if	0	;tblptru may be non-zero
  1043  001266                     	endif
  1044  001266                     	if	0	;tblptru may be non-zero
  1045  001266                     	endif
  1046  001266  0008               	tblrd		*
  1047  001268  50F5               	movf	tablat,w,c
  1048  00126A  ECDF  F00E         	call	_LCD_write_data_byte_4bit
  1049  00126E  2A66               	incf	main@i_683^0,f,c
  1050  001270  0E06               	movlw	6
  1051  001272  6466               	cpfsgt	main@i_683^0,c
  1052  001274  D7F1               	goto	l2488
  1053                           
  1054                           ;ece376_hw9_ccp_capt.c: 285:             LCD_set_cursor_position(2,1);
  1055  001276  0E01               	movlw	1
  1056  001278  6E05               	movwf	LCD_set_cursor_position@pos_on_line^0,c
  1057  00127A  0E02               	movlw	2
  1058  00127C  EC84  F00E         	call	_LCD_set_cursor_position
  1059                           
  1060                           ;ece376_hw9_ccp_capt.c: 286:             for(uint8_t i=0; i<16; i++) LCD_write_data_byte
      +                          _4bit(result_msg[i]);
  1061  001280  0E00               	movlw	0
  1062  001282  6E67               	movwf	main@i_684^0,c
  1063  001284                     l2502:
  1064  001284  5067               	movf	main@i_684^0,w,c
  1065  001286  0FBB               	addlw	low _result_msg
  1066  001288  6ED9               	movwf	fsr2l,c
  1067  00128A  6ADA               	clrf	fsr2h,c
  1068  00128C  50DF               	movf	indf2,w,c
  1069  00128E  ECDF  F00E         	call	_LCD_write_data_byte_4bit
  1070  001292  2A67               	incf	main@i_684^0,f,c
  1071  001294  0E0F               	movlw	15
  1072  001296  6467               	cpfsgt	main@i_684^0,c
  1073  001298  D7F5               	goto	l2502
  1074                           
  1075                           ;ece376_hw9_ccp_capt.c: 289:             _delay((unsigned long)((3000)*(40000000u/4000.0
      +                          )));
  1076  00129A  0E99               	movlw	153
  1077  00129C  6E5F               	movwf	(??_main+1)^0,c
  1078  00129E  0E31               	movlw	49
  1079  0012A0  6E5E               	movwf	??_main^0,c
  1080  0012A2  0EA2               	movlw	162
  1081  0012A4                     u1547:
  1082  0012A4  2EE8               	decfsz	wreg,f,c
  1083  0012A6  D7FE               	bra	u1547
  1084  0012A8  2E5E               	decfsz	??_main^0,f,c
  1085  0012AA  D7FC               	bra	u1547
  1086  0012AC  2E5F               	decfsz	(??_main+1)^0,f,c
  1087  0012AE  D7FA               	bra	u1547
  1088  0012B0  D000               	nop2	
  1089                           
  1090                           ;ece376_hw9_ccp_capt.c: 290:             _delay((unsigned long)((2000)*(40000000u/4000.0
      +                          )));
  1091  0012B2  0E66               	movlw	102
  1092  0012B4  6E5F               	movwf	(??_main+1)^0,c
  1093  0012B6  0E76               	movlw	118
  1094  0012B8  6E5E               	movwf	??_main^0,c
  1095  0012BA  0EC1               	movlw	193
  1096  0012BC                     u1557:
  1097  0012BC  2EE8               	decfsz	wreg,f,c
  1098  0012BE  D7FE               	bra	u1557
  1099  0012C0  2E5E               	decfsz	??_main^0,f,c
  1100  0012C2  D7FC               	bra	u1557
  1101  0012C4  2E5F               	decfsz	(??_main+1)^0,f,c
  1102  0012C6  D7FA               	bra	u1557
  1103  0012C8  F000               	nop	
  1104                           
  1105                           ;ece376_hw9_ccp_capt.c: 293:             LATDbits.LATD0 = 0u;
  1106  0012CA  908C               	bcf	140,0,c	;volatile
  1107                           
  1108                           ;ece376_hw9_ccp_capt.c: 294:             elapsed_time = 0u;
  1109  0012CC  0E00               	movlw	0
  1110  0012CE  6E6C               	movwf	_elapsed_time^0,c	;volatile
  1111  0012D0  0E00               	movlw	0
  1112  0012D2  6E6D               	movwf	(_elapsed_time+1)^0,c	;volatile
  1113  0012D4  0E00               	movlw	0
  1114  0012D6  6E6E               	movwf	(_elapsed_time+2)^0,c	;volatile
  1115  0012D8  0E00               	movlw	0
  1116  0012DA  6E6F               	movwf	(_elapsed_time+3)^0,c	;volatile
  1117                           
  1118                           ;ece376_hw9_ccp_capt.c: 295:             LCD_clear_display();
  1119  0012DC  EC04  F010         	call	_LCD_clear_display	;wreg free
  1120                           
  1121                           ;ece376_hw9_ccp_capt.c: 296:             game_done_flag = 0x00;
  1122  0012E0  0E00               	movlw	0
  1123  0012E2  6E76               	movwf	_game_done_flag^0,c	;volatile
  1124  0012E4  D6ED               	goto	l2444
  1125  0012E6                     __end_of_main:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _sprintf *****************
  1129 ;; Defined at:
  1130 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  s               1   77[COMRAM] PTR unsigned char 
  1133 ;;		 -> result_msg(17), 
  1134 ;;  fmt             1   78[COMRAM] PTR const unsigned char 
  1135 ;;		 -> STR_1(17), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  f               5   88[COMRAM] struct _IO_FILE
  1138 ;;  ret             2    0        int 
  1139 ;;  ap              1   87[COMRAM] PTR void [1]
  1140 ;;		 -> ?_sprintf(2), 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2   77[COMRAM] int 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 3F/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:       16 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    8
  1157 ;; This function calls:
  1158 ;;		_vfprintf
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text1
  1165  001F24                     __ptext1:
  1166                           	callstack 0
  1167  001F24                     _sprintf:
  1168                           	callstack 22
  1169                           
  1170                           ;incstack = 0
  1171  001F24  0E50               	movlw	low (?_sprintf+2)
  1172  001F26  6E58               	movwf	sprintf@ap^0,c
  1173  001F28  C04E  F059         	movff	sprintf@s,sprintf@f
  1174  001F2C  0E00               	movlw	0
  1175  001F2E  6E5B               	movwf	(sprintf@f+2)^0,c
  1176  001F30  0E00               	movlw	0
  1177  001F32  6E5A               	movwf	(sprintf@f+1)^0,c
  1178  001F34  0E00               	movlw	0
  1179  001F36  6E5D               	movwf	(sprintf@f+4)^0,c
  1180  001F38  0E00               	movlw	0
  1181  001F3A  6E5C               	movwf	(sprintf@f+3)^0,c
  1182  001F3C  0E59               	movlw	low sprintf@f
  1183  001F3E  6E4A               	movwf	vfprintf@fp^0,c
  1184  001F40  C04F  F04B         	movff	sprintf@fmt,vfprintf@fmt
  1185  001F44  0E58               	movlw	low sprintf@ap
  1186  001F46  6E4C               	movwf	vfprintf@ap^0,c
  1187  001F48  EC50  F00F         	call	_vfprintf	;wreg free
  1188                           
  1189                           ; BSR set to: 0
  1190  001F4C  504E               	movf	sprintf@s^0,w,c
  1191  001F4E  245A               	addwf	(sprintf@f+1)^0,w,c
  1192  001F50  6ED9               	movwf	fsr2l,c
  1193  001F52  6ADA               	clrf	fsr2h,c
  1194  001F54  0E00               	movlw	0
  1195  001F56  6EDF               	movwf	indf2,c
  1196                           
  1197                           ; BSR set to: 0
  1198  001F58  0012               	return		;funcret
  1199  001F5A                     __end_of_sprintf:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _vfprintf *****************
  1203 ;; Defined at:
  1204 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  fp              1   73[COMRAM] PTR struct _IO_FILE
  1207 ;;		 -> sprintf@f(5), 
  1208 ;;  fmt             1   74[COMRAM] PTR const unsigned char 
  1209 ;;		 -> STR_1(17), 
  1210 ;;  ap              1   75[COMRAM] PTR PTR void 
  1211 ;;		 -> sprintf@ap(1), 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  cfmt            1   76[COMRAM] PTR unsigned char 
  1214 ;;		 -> STR_1(17), 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  2   73[COMRAM] int 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 3F/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1224 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;Total ram usage:        4 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    7
  1231 ;; This function calls:
  1232 ;;		_vfpfcnvrt
  1233 ;; This function is called by:
  1234 ;;		_sprintf
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text2
  1239  001EA0                     __ptext2:
  1240                           	callstack 0
  1241  001EA0                     _vfprintf:
  1242                           	callstack 22
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;incstack = 0
  1248  001EA0  C04B  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1251  001EA4  0E00               	movlw	0
  1252  001EA6  0100               	movlb	0	; () banked
  1253  001EA8  6F93               	movwf	(_nout+1)& (0+255),b
  1254  001EAA  0E00               	movlw	0
  1255  001EAC  6F92               	movwf	_nout& (0+255),b
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1258  001EAE  D00D               	goto	l2164
  1259  001EB0                     l2162:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1263  001EB0  C04A  F039         	movff	vfprintf@fp,vfpfcnvrt@fp
  1264  001EB4  0E4D               	movlw	low vfprintf@cfmt
  1265  001EB6  6E3A               	movwf	vfpfcnvrt@fmt^0,c
  1266  001EB8  C04C  F03B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1267  001EBC  EC73  F009         	call	_vfpfcnvrt	;wreg free
  1268  001EC0  5039               	movf	?_vfpfcnvrt^0,w,c
  1269  001EC2  0100               	movlb	0	; () banked
  1270  001EC4  2792               	addwf	_nout& (0+255),f,b
  1271  001EC6  503A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1272  001EC8  2393               	addwfc	(_nout+1)& (0+255),f,b
  1273  001ECA                     l2164:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1277  001ECA  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1278  001ECE                     	if	1	;There is more than 1 active tblptr byte
  1279  001ECE  0E10               	movlw	high __smallconst
  1280  001ED0  6EF7               	movwf	tblptrh,c
  1281  001ED2                     	endif
  1282  001ED2                     	if	0	;tblptru may be non-zero
  1283  001ED2                     	endif
  1284  001ED2                     	if	0	;tblptru may be non-zero
  1285  001ED2                     	endif
  1286  001ED2  0008               	tblrd		*
  1287  001ED4  50F5               	movf	tablat,w,c
  1288  001ED6  0900               	iorlw	0
  1289  001ED8  A4D8               	btfss	status,2,c
  1290  001EDA  D7EA               	goto	l2162
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1294  001EDC  C092  F04A         	movff	_nout,?_vfprintf
  1295  001EE0  C093  F04B         	movff	_nout+1,?_vfprintf+1
  1296                           
  1297                           ; BSR set to: 0
  1298  001EE4  0012               	return		;funcret
  1299  001EE6                     __end_of_vfprintf:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _vfpfcnvrt *****************
  1303 ;; Defined at:
  1304 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  fp              1   56[COMRAM] PTR struct _IO_FILE
  1307 ;;		 -> sprintf@f(5), 
  1308 ;;  fmt             1   57[COMRAM] PTR PTR unsigned char 
  1309 ;;		 -> vfprintf@cfmt(1), 
  1310 ;;  ap              1   58[COMRAM] PTR PTR void 
  1311 ;;		 -> sprintf@ap(1), 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  llu             8   63[COMRAM] unsigned long long 
  1314 ;;  ll              8    0        long long 
  1315 ;;  f               4    0        long long 
  1316 ;;  vp              3    0        PTR void 
  1317 ;;  ct              3    0        unsigned char [3]
  1318 ;;  cp              3    0        PTR unsigned char 
  1319 ;;  i               2    0        int 
  1320 ;;  done            2    0        int 
  1321 ;;  c               1    0        unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2   56[COMRAM] int 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1331 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;Total ram usage:       17 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    6
  1338 ;; This function calls:
  1339 ;;		_atoi
  1340 ;;		_fputc
  1341 ;;		_isdigit
  1342 ;;		_utoa
  1343 ;; This function is called by:
  1344 ;;		_vfprintf
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text3
  1349  0012E6                     __ptext3:
  1350                           	callstack 0
  1351  0012E6                     _vfpfcnvrt:
  1352                           	callstack 22
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;incstack = 0
  1358  0012E6  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1359  0012E8  6ED9               	movwf	fsr2l,c
  1360  0012EA  6ADA               	clrf	fsr2h,c
  1361  0012EC  CFDF FFF6          	movff	indf2,tblptrl
  1362  0012F0                     	if	1	;There is more than 1 active tblptr byte
  1363  0012F0  0E10               	movlw	high __smallconst
  1364  0012F2  6EF7               	movwf	tblptrh,c
  1365  0012F4                     	endif
  1366  0012F4                     	if	0	;tblptru may be non-zero
  1367  0012F4                     	endif
  1368  0012F4                     	if	0	;tblptru may be non-zero
  1369  0012F4                     	endif
  1370  0012F4  0008               	tblrd		*
  1371  0012F6  50F5               	movf	tablat,w,c
  1372  0012F8  0A25               	xorlw	37
  1373  0012FA  A4D8               	btfss	status,2,c
  1374  0012FC  D0C9               	goto	l2114
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1377  0012FE  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1378  001300  6ED9               	movwf	fsr2l,c
  1379  001302  6ADA               	clrf	fsr2h,c
  1380  001304  2ADF               	incf	indf2,f,c
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1383  001306  0E00               	movlw	0
  1384  001308  6E71               	movwf	(_width+1)^0,c
  1385  00130A  0E00               	movlw	0
  1386  00130C  6E70               	movwf	_width^0,c
  1387  00130E  C070  F074         	movff	_width,_flags
  1388  001312  C071  F075         	movff	_width+1,_flags+1
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1391  001316  6872               	setf	_prec^0,c
  1392  001318  6873               	setf	(_prec+1)^0,c
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1395  00131A  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1396  00131C  6ED9               	movwf	fsr2l,c
  1397  00131E  6ADA               	clrf	fsr2h,c
  1398  001320  CFDF FFF6          	movff	indf2,tblptrl
  1399  001324                     	if	1	;There is more than 1 active tblptr byte
  1400  001324  0E10               	movlw	high __smallconst
  1401  001326  6EF7               	movwf	tblptrh,c
  1402  001328                     	endif
  1403  001328                     	if	0	;tblptru may be non-zero
  1404  001328                     	endif
  1405  001328                     	if	0	;tblptru may be non-zero
  1406  001328                     	endif
  1407  001328  0008               	tblrd		*
  1408  00132A  50F5               	movf	tablat,w,c
  1409  00132C  0A2A               	xorlw	42
  1410  00132E  A4D8               	btfss	status,2,c
  1411  001330  D018               	goto	l2078
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1414  001332  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1415  001334  6ED9               	movwf	fsr2l,c
  1416  001336  6ADA               	clrf	fsr2h,c
  1417  001338  2ADF               	incf	indf2,f,c
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1420  00133A  503B               	movf	vfpfcnvrt@ap^0,w,c
  1421  00133C  6ED9               	movwf	fsr2l,c
  1422  00133E  6ADA               	clrf	fsr2h,c
  1423  001340  0E02               	movlw	2
  1424  001342  26DF               	addwf	indf2,f,c
  1425  001344  5CDF               	subwf	indf2,w,c
  1426  001346  6ED9               	movwf	fsr2l,c
  1427  001348  6ADA               	clrf	fsr2h,c
  1428  00134A  CFDE F070          	movff	postinc2,_width
  1429  00134E  CFDE F071          	movff	postinc2,_width+1
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1432  001352  AE71               	btfss	(_width+1)^0,7,c
  1433  001354  D038               	goto	u1160
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1436  001356  8074               	bsf	_flags^0,0,c
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1439  001358  6C70               	negf	_width^0,c
  1440  00135A  1E71               	comf	(_width+1)^0,f,c
  1441  00135C  B0D8               	btfsc	status,0,c
  1442  00135E  2A71               	incf	(_width+1)^0,f,c
  1443  001360  D032               	goto	u1160
  1444  001362                     l2078:
  1445                           
  1446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1447  001362  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1448  001364  6ED9               	movwf	fsr2l,c
  1449  001366  6ADA               	clrf	fsr2h,c
  1450  001368  50DF               	movf	indf2,w,c
  1451  00136A  6E08               	movwf	atoi@s^0,c
  1452  00136C  EC2C  F00B         	call	_atoi	;wreg free
  1453  001370  C008  F070         	movff	?_atoi,_width
  1454  001374  C009  F071         	movff	?_atoi+1,_width+1
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1457  001378  D004               	goto	l2082
  1458  00137A                     l2080:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1461  00137A  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1462  00137C  6ED9               	movwf	fsr2l,c
  1463  00137E  6ADA               	clrf	fsr2h,c
  1464  001380  2ADF               	incf	indf2,f,c
  1465  001382                     l2082:
  1466  001382  0ED0               	movlw	208
  1467  001384  6E3C               	movwf	??_vfpfcnvrt^0,c
  1468  001386  0EFF               	movlw	255
  1469  001388  6E3D               	movwf	(??_vfpfcnvrt+1)^0,c
  1470  00138A  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1471  00138C  6ED9               	movwf	fsr2l,c
  1472  00138E  6ADA               	clrf	fsr2h,c
  1473  001390  CFDF FFF6          	movff	indf2,tblptrl
  1474  001394                     	if	1	;There is more than 1 active tblptr byte
  1475  001394  0E10               	movlw	high __smallconst
  1476  001396  6EF7               	movwf	tblptrh,c
  1477  001398                     	endif
  1478  001398                     	if	0	;tblptru may be non-zero
  1479  001398                     	endif
  1480  001398                     	if	0	;tblptru may be non-zero
  1481  001398                     	endif
  1482  001398  0008               	tblrd		*
  1483  00139A  50F5               	movf	tablat,w,c
  1484  00139C  6E3E               	movwf	(??_vfpfcnvrt+2)^0,c
  1485  00139E  6A3F               	clrf	(??_vfpfcnvrt+3)^0,c
  1486  0013A0  503C               	movf	??_vfpfcnvrt^0,w,c
  1487  0013A2  263E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1488  0013A4  503D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1489  0013A6  223F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1490  0013A8  503F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1491  0013AA  E106               	bnz	u1140
  1492  0013AC  0E0A               	movlw	10
  1493  0013AE  5C3E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1494  0013B0  B0D8               	btfsc	status,0,c
  1495  0013B2  D002               	goto	u1140
  1496  0013B4  0E01               	movlw	1
  1497  0013B6  D001               	goto	u1150
  1498  0013B8                     u1140:
  1499  0013B8  0E00               	movlw	0
  1500  0013BA                     u1150:
  1501  0013BA  6E48               	movwf	_vfpfcnvrt$1221^0,c
  1502  0013BC  6A49               	clrf	(_vfpfcnvrt$1221+1)^0,c
  1503  0013BE  5048               	movf	_vfpfcnvrt$1221^0,w,c
  1504  0013C0  1049               	iorwf	(_vfpfcnvrt$1221+1)^0,w,c
  1505  0013C2  A4D8               	btfss	status,2,c
  1506  0013C4  D7DA               	goto	l2080
  1507  0013C6                     u1160:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  1510  0013C6  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1511  0013C8  6ED9               	movwf	fsr2l,c
  1512  0013CA  6ADA               	clrf	fsr2h,c
  1513  0013CC  CFDF FFF6          	movff	indf2,tblptrl
  1514  0013D0                     	if	1	;There is more than 1 active tblptr byte
  1515  0013D0  0E10               	movlw	high __smallconst
  1516  0013D2  6EF7               	movwf	tblptrh,c
  1517  0013D4                     	endif
  1518  0013D4                     	if	0	;tblptru may be non-zero
  1519  0013D4                     	endif
  1520  0013D4                     	if	0	;tblptru may be non-zero
  1521  0013D4                     	endif
  1522  0013D4  0008               	tblrd		*
  1523  0013D6  50F5               	movf	tablat,w,c
  1524  0013D8  0A75               	xorlw	117
  1525  0013DA  A4D8               	btfss	status,2,c
  1526  0013DC  D033               	goto	l2098
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  1529  0013DE  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1530  0013E0  6ED9               	movwf	fsr2l,c
  1531  0013E2  6ADA               	clrf	fsr2h,c
  1532  0013E4  2ADF               	incf	indf2,f,c
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1535  0013E6  503B               	movf	vfpfcnvrt@ap^0,w,c
  1536  0013E8  6ED9               	movwf	fsr2l,c
  1537  0013EA  6ADA               	clrf	fsr2h,c
  1538  0013EC  50DF               	movf	indf2,w,c
  1539  0013EE  2ADF               	incf	indf2,f,c
  1540  0013F0  2ADF               	incf	indf2,f,c
  1541  0013F2  6ED9               	movwf	fsr2l,c
  1542  0013F4  6ADA               	clrf	fsr2h,c
  1543  0013F6  CFDE F03C          	movff	postinc2,??_vfpfcnvrt
  1544  0013FA  CFDD F03D          	movff	postdec2,??_vfpfcnvrt+1
  1545  0013FE  C03C  F040         	movff	??_vfpfcnvrt,vfpfcnvrt@llu
  1546  001402  C03D  F041         	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
  1547  001406  6A42               	clrf	(vfpfcnvrt@llu+2)^0,c
  1548  001408  6A43               	clrf	(vfpfcnvrt@llu+3)^0,c
  1549  00140A  6A44               	clrf	(vfpfcnvrt@llu+4)^0,c
  1550  00140C  6A45               	clrf	(vfpfcnvrt@llu+5)^0,c
  1551  00140E  6A46               	clrf	(vfpfcnvrt@llu+6)^0,c
  1552  001410  6A47               	clrf	(vfpfcnvrt@llu+7)^0,c
  1553                           
  1554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  1555  001412  C039  F01A         	movff	vfpfcnvrt@fp,utoa@fp
  1556  001416  C040  F01B         	movff	vfpfcnvrt@llu,utoa@d
  1557  00141A  C041  F01C         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1558  00141E  C042  F01D         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1559  001422  C043  F01E         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1560  001426  C044  F01F         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1561  00142A  C045  F020         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1562  00142E  C046  F021         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1563  001432  C047  F022         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1564  001436  EC5C  F00A         	call	_utoa	;wreg free
  1565  00143A  C01A  F039         	movff	?_utoa,?_vfpfcnvrt
  1566  00143E  C01B  F03A         	movff	?_utoa+1,?_vfpfcnvrt+1
  1567  001442  0012               	return	
  1568  001444                     l2098:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1571  001444  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1572  001446  6ED9               	movwf	fsr2l,c
  1573  001448  6ADA               	clrf	fsr2h,c
  1574  00144A  CFDF FFF6          	movff	indf2,tblptrl
  1575  00144E                     	if	1	;There is more than 1 active tblptr byte
  1576  00144E  0E10               	movlw	high __smallconst
  1577  001450  6EF7               	movwf	tblptrh,c
  1578  001452                     	endif
  1579  001452                     	if	0	;tblptru may be non-zero
  1580  001452                     	endif
  1581  001452                     	if	0	;tblptru may be non-zero
  1582  001452                     	endif
  1583  001452  0008               	tblrd		*
  1584  001454  50F5               	movf	tablat,w,c
  1585  001456  0A25               	xorlw	37
  1586  001458  A4D8               	btfss	status,2,c
  1587  00145A  D011               	goto	l2108
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1590  00145C  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1591  00145E  6ED9               	movwf	fsr2l,c
  1592  001460  6ADA               	clrf	fsr2h,c
  1593  001462  2ADF               	incf	indf2,f,c
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1596  001464  0E00               	movlw	0
  1597  001466  6E02               	movwf	(fputc@c+1)^0,c
  1598  001468  0E25               	movlw	37
  1599  00146A  6E01               	movwf	fputc@c^0,c
  1600  00146C  C039  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1601  001470  EC92  F00D         	call	_fputc	;wreg free
  1602  001474                     l2104:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1605  001474  0E00               	movlw	0
  1606  001476  6E3A               	movwf	(?_vfpfcnvrt+1)^0,c
  1607  001478  0E01               	movlw	1
  1608  00147A  6E39               	movwf	?_vfpfcnvrt^0,c
  1609  00147C  0012               	return	
  1610  00147E                     l2108:
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1613  00147E  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1614  001480  6ED9               	movwf	fsr2l,c
  1615  001482  6ADA               	clrf	fsr2h,c
  1616  001484  2ADF               	incf	indf2,f,c
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1619  001486  0E00               	movlw	0
  1620  001488  6E3A               	movwf	(?_vfpfcnvrt+1)^0,c
  1621  00148A  0E00               	movlw	0
  1622  00148C  6E39               	movwf	?_vfpfcnvrt^0,c
  1623  00148E  0012               	return	
  1624  001490                     l2114:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1627  001490  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1628  001492  6ED9               	movwf	fsr2l,c
  1629  001494  6ADA               	clrf	fsr2h,c
  1630  001496  CFDF FFF6          	movff	indf2,tblptrl
  1631  00149A                     	if	1	;There is more than 1 active tblptr byte
  1632  00149A  0E10               	movlw	high __smallconst
  1633  00149C  6EF7               	movwf	tblptrh,c
  1634  00149E                     	endif
  1635  00149E                     	if	0	;tblptru may be non-zero
  1636  00149E                     	endif
  1637  00149E                     	if	0	;tblptru may be non-zero
  1638  00149E                     	endif
  1639  00149E  0008               	tblrd		*
  1640  0014A0  50F5               	movf	tablat,w,c
  1641  0014A2  6E01               	movwf	fputc@c^0,c
  1642  0014A4  6A02               	clrf	(fputc@c+1)^0,c
  1643  0014A6  C039  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1644  0014AA  EC92  F00D         	call	_fputc	;wreg free
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1647  0014AE  503A               	movf	vfpfcnvrt@fmt^0,w,c
  1648  0014B0  6ED9               	movwf	fsr2l,c
  1649  0014B2  6ADA               	clrf	fsr2h,c
  1650  0014B4  2ADF               	incf	indf2,f,c
  1651  0014B6  D7DE               	goto	l2104
  1652  0014B8                     __end_of_vfpfcnvrt:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _utoa *****************
  1656 ;; Defined at:
  1657 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  1660 ;;		 -> sprintf@f(5), 
  1661 ;;  d               8   26[COMRAM] unsigned long long 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  n               8   46[COMRAM] unsigned long long 
  1664 ;;  i               2   54[COMRAM] int 
  1665 ;;  w               2   44[COMRAM] int 
  1666 ;;  p               2   42[COMRAM] int 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2   25[COMRAM] int 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1676 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;Total ram usage:       31 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    5
  1683 ;; This function calls:
  1684 ;;		___lodiv
  1685 ;;		___lomod
  1686 ;;		_pad
  1687 ;; This function is called by:
  1688 ;;		_vfpfcnvrt
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text4
  1693  0014B8                     __ptext4:
  1694                           	callstack 0
  1695  0014B8                     _utoa:
  1696                           	callstack 22
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  1699                           
  1700                           ;incstack = 0
  1701  0014B8  AE73               	btfss	(_prec+1)^0,7,c
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  1704  0014BA  9274               	bcf	_flags^0,1,c
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  1707  0014BC  BE73               	btfsc	(_prec+1)^0,7,c
  1708  0014BE  D005               	goto	u980
  1709  0014C0  5073               	movf	(_prec+1)^0,w,c
  1710  0014C2  E108               	bnz	l1034
  1711  0014C4  0472               	decf	_prec^0,w,c
  1712  0014C6  B0D8               	btfsc	status,0,c
  1713  0014C8  D005               	goto	l1034
  1714  0014CA                     u980:
  1715  0014CA  0E00               	movlw	0
  1716  0014CC  6E2C               	movwf	(utoa@p+1)^0,c
  1717  0014CE  0E01               	movlw	1
  1718  0014D0  6E2B               	movwf	utoa@p^0,c
  1719  0014D2  D004               	goto	l1036
  1720  0014D4                     l1034:
  1721  0014D4  C072  F02B         	movff	_prec,utoa@p
  1722  0014D8  C073  F02C         	movff	_prec+1,utoa@p+1
  1723  0014DC                     l1036:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  1726  0014DC  C070  F02D         	movff	_width,utoa@w
  1727  0014E0  C071  F02E         	movff	_width+1,utoa@w+1
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
  1730  0014E4  C01B  F02F         	movff	utoa@d,utoa@n
  1731  0014E8  C01C  F030         	movff	utoa@d+1,utoa@n+1
  1732  0014EC  C01D  F031         	movff	utoa@d+2,utoa@n+2
  1733  0014F0  C01E  F032         	movff	utoa@d+3,utoa@n+3
  1734  0014F4  C01F  F033         	movff	utoa@d+4,utoa@n+4
  1735  0014F8  C020  F034         	movff	utoa@d+5,utoa@n+5
  1736  0014FC  C021  F035         	movff	utoa@d+6,utoa@n+6
  1737  001500  C022  F036         	movff	utoa@d+7,utoa@n+7
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  1740  001504  0E00               	movlw	0
  1741  001506  6E38               	movwf	(utoa@i+1)^0,c
  1742  001508  0E1F               	movlw	31
  1743  00150A  6E37               	movwf	utoa@i^0,c
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  1746  00150C  0E00               	movlw	0
  1747  00150E  0100               	movlb	0	; () banked
  1748  001510  6FBA               	movwf	(_dbuf+31)& (0+255),b
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1751  001512  D074               	goto	l1970
  1752  001514                     l1960:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
  1755  001514  0637               	decf	utoa@i^0,f,c
  1756  001516  A0D8               	btfss	status,0,c
  1757  001518  0638               	decf	(utoa@i+1)^0,f,c
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  1760  00151A  5037               	movf	utoa@i^0,w,c
  1761  00151C  0F9B               	addlw	low _dbuf
  1762  00151E  6ED9               	movwf	fsr2l,c
  1763  001520  6ADA               	clrf	fsr2h,c
  1764  001522  C02F  F001         	movff	utoa@n,___lomod@dividend
  1765  001526  C030  F002         	movff	utoa@n+1,___lomod@dividend+1
  1766  00152A  C031  F003         	movff	utoa@n+2,___lomod@dividend+2
  1767  00152E  C032  F004         	movff	utoa@n+3,___lomod@dividend+3
  1768  001532  C033  F005         	movff	utoa@n+4,___lomod@dividend+4
  1769  001536  C034  F006         	movff	utoa@n+5,___lomod@dividend+5
  1770  00153A  C035  F007         	movff	utoa@n+6,___lomod@dividend+6
  1771  00153E  C036  F008         	movff	utoa@n+7,___lomod@dividend+7
  1772  001542  0E0A               	movlw	10
  1773  001544  6E09               	movwf	___lomod@divisor^0,c
  1774  001546  0E00               	movlw	0
  1775  001548  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1776  00154A  0E00               	movlw	0
  1777  00154C  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1778  00154E  0E00               	movlw	0
  1779  001550  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1780  001552  0E00               	movlw	0
  1781  001554  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1782  001556  0E00               	movlw	0
  1783  001558  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1784  00155A  0E00               	movlw	0
  1785  00155C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1786  00155E  0E00               	movlw	0
  1787  001560  6E10               	movwf	(___lomod@divisor+7)^0,c
  1788  001562  ECA4  F00C         	call	___lomod	;wreg free
  1789  001566  C001  F023         	movff	?___lomod,??_utoa
  1790  00156A  C002  F024         	movff	?___lomod+1,??_utoa+1
  1791  00156E  C003  F025         	movff	?___lomod+2,??_utoa+2
  1792  001572  C004  F026         	movff	?___lomod+3,??_utoa+3
  1793  001576  C005  F027         	movff	?___lomod+4,??_utoa+4
  1794  00157A  C006  F028         	movff	?___lomod+5,??_utoa+5
  1795  00157E  C007  F029         	movff	?___lomod+6,??_utoa+6
  1796  001582  C008  F02A         	movff	?___lomod+7,??_utoa+7
  1797  001586  5023               	movf	??_utoa^0,w,c
  1798  001588  0F30               	addlw	48
  1799  00158A  6EDF               	movwf	indf2,c
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
  1802  00158C  062B               	decf	utoa@p^0,f,c
  1803  00158E  A0D8               	btfss	status,0,c
  1804  001590  062C               	decf	(utoa@p+1)^0,f,c
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
  1807  001592  062D               	decf	utoa@w^0,f,c
  1808  001594  A0D8               	btfss	status,0,c
  1809  001596  062E               	decf	(utoa@w+1)^0,f,c
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  1812  001598  C02F  F001         	movff	utoa@n,___lodiv@dividend
  1813  00159C  C030  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1814  0015A0  C031  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1815  0015A4  C032  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1816  0015A8  C033  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1817  0015AC  C034  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1818  0015B0  C035  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1819  0015B4  C036  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1820  0015B8  0E0A               	movlw	10
  1821  0015BA  6E09               	movwf	___lodiv@divisor^0,c
  1822  0015BC  0E00               	movlw	0
  1823  0015BE  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1824  0015C0  0E00               	movlw	0
  1825  0015C2  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1826  0015C4  0E00               	movlw	0
  1827  0015C6  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1828  0015C8  0E00               	movlw	0
  1829  0015CA  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1830  0015CC  0E00               	movlw	0
  1831  0015CE  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1832  0015D0  0E00               	movlw	0
  1833  0015D2  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1834  0015D4  0E00               	movlw	0
  1835  0015D6  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1836  0015D8  EC3D  F00C         	call	___lodiv	;wreg free
  1837  0015DC  C001  F02F         	movff	?___lodiv,utoa@n
  1838  0015E0  C002  F030         	movff	?___lodiv+1,utoa@n+1
  1839  0015E4  C003  F031         	movff	?___lodiv+2,utoa@n+2
  1840  0015E8  C004  F032         	movff	?___lodiv+3,utoa@n+3
  1841  0015EC  C005  F033         	movff	?___lodiv+4,utoa@n+4
  1842  0015F0  C006  F034         	movff	?___lodiv+5,utoa@n+5
  1843  0015F4  C007  F035         	movff	?___lodiv+6,utoa@n+6
  1844  0015F8  C008  F036         	movff	?___lodiv+7,utoa@n+7
  1845  0015FC                     l1970:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1848  0015FC  5037               	movf	utoa@i^0,w,c
  1849  0015FE  1038               	iorwf	(utoa@i+1)^0,w,c
  1850  001600  B4D8               	btfsc	status,2,c
  1851  001602  D01A               	goto	u1030
  1852  001604  502F               	movf	utoa@n^0,w,c
  1853  001606  1030               	iorwf	(utoa@n+1)^0,w,c
  1854  001608  1031               	iorwf	(utoa@n+2)^0,w,c
  1855  00160A  1032               	iorwf	(utoa@n+3)^0,w,c
  1856  00160C  1033               	iorwf	(utoa@n+4)^0,w,c
  1857  00160E  1034               	iorwf	(utoa@n+5)^0,w,c
  1858  001610  1035               	iorwf	(utoa@n+6)^0,w,c
  1859  001612  1036               	iorwf	(utoa@n+7)^0,w,c
  1860  001614  A4D8               	btfss	status,2,c
  1861  001616  D77E               	goto	l1960
  1862  001618  BE2C               	btfsc	(utoa@p+1)^0,7,c
  1863  00161A  D005               	goto	u1010
  1864  00161C  502C               	movf	(utoa@p+1)^0,w,c
  1865  00161E  E102               	bnz	u1011
  1866  001620  042B               	decf	utoa@p^0,w,c
  1867  001622  B0D8               	btfsc	status,0,c
  1868  001624                     u1011:
  1869  001624  D777               	goto	l1960
  1870  001626                     u1010:
  1871  001626  BE2E               	btfsc	(utoa@w+1)^0,7,c
  1872  001628  D007               	goto	u1030
  1873  00162A  502E               	movf	(utoa@w+1)^0,w,c
  1874  00162C  E103               	bnz	u1020
  1875  00162E  042D               	decf	utoa@w^0,w,c
  1876  001630  A0D8               	btfss	status,0,c
  1877  001632  D002               	goto	u1030
  1878  001634                     u1020:
  1879  001634  B274               	btfsc	_flags^0,1,c
  1880  001636  D76E               	goto	l1960
  1881  001638                     u1030:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  1884  001638  C01A  F00E         	movff	utoa@fp,pad@fp
  1885  00163C  5037               	movf	utoa@i^0,w,c
  1886  00163E  0F9B               	addlw	low _dbuf
  1887  001640  6E0F               	movwf	pad@buf^0,c
  1888  001642  C02D  F010         	movff	utoa@w,pad@p
  1889  001646  C02E  F011         	movff	utoa@w+1,pad@p+1
  1890  00164A  EC12  F00E         	call	_pad	;wreg free
  1891  00164E  C00E  F01A         	movff	?_pad,?_utoa
  1892  001652  C00F  F01B         	movff	?_pad+1,?_utoa+1
  1893  001656  0012               	return		;funcret
  1894  001658                     __end_of_utoa:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _pad *****************
  1898 ;; Defined at:
  1899 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1902 ;;		 -> sprintf@f(5), 
  1903 ;;  buf             1   14[COMRAM] PTR unsigned char 
  1904 ;;		 -> dbuf(32), 
  1905 ;;  p               2   15[COMRAM] int 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  w               2   20[COMRAM] int 
  1908 ;;  i               2   18[COMRAM] int 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  2   13[COMRAM] int 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;Total ram usage:        9 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    4
  1925 ;; This function calls:
  1926 ;;		_fputc
  1927 ;;		_fputs
  1928 ;;		_strlen
  1929 ;; This function is called by:
  1930 ;;		_utoa
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text5
  1935  001C24                     __ptext5:
  1936                           	callstack 0
  1937  001C24                     _pad:
  1938                           	callstack 22
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1941                           
  1942                           ;incstack = 0
  1943  001C24  A074               	btfss	_flags^0,0,c
  1944  001C26  D006               	goto	l1914
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1947  001C28  C00F  F009         	movff	pad@buf,fputs@s
  1948  001C2C  C00E  F00A         	movff	pad@fp,fputs@fp
  1949  001C30  ECAD  F00F         	call	_fputs	;wreg free
  1950  001C34                     l1914:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1953  001C34  BE11               	btfsc	(pad@p+1)^0,7,c
  1954  001C36  D005               	goto	l1918
  1955  001C38  C010  F015         	movff	pad@p,pad@w
  1956  001C3C  C011  F016         	movff	pad@p+1,pad@w+1
  1957  001C40  D004               	goto	l1024
  1958  001C42                     l1918:
  1959  001C42  0E00               	movlw	0
  1960  001C44  6E16               	movwf	(pad@w+1)^0,c
  1961  001C46  0E00               	movlw	0
  1962  001C48  6E15               	movwf	pad@w^0,c
  1963  001C4A                     l1024:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1966  001C4A  0E00               	movlw	0
  1967  001C4C  6E14               	movwf	(pad@i+1)^0,c
  1968  001C4E  0E00               	movlw	0
  1969  001C50  6E13               	movwf	pad@i^0,c
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1972  001C52  D00A               	goto	l1924
  1973  001C54                     l1920:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1976  001C54  0E00               	movlw	0
  1977  001C56  6E02               	movwf	(fputc@c+1)^0,c
  1978  001C58  0E20               	movlw	32
  1979  001C5A  6E01               	movwf	fputc@c^0,c
  1980  001C5C  C00E  F003         	movff	pad@fp,fputc@fp
  1981  001C60  EC92  F00D         	call	_fputc	;wreg free
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1984  001C64  4A13               	infsnz	pad@i^0,f,c
  1985  001C66  2A14               	incf	(pad@i+1)^0,f,c
  1986  001C68                     l1924:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1989  001C68  5015               	movf	pad@w^0,w,c
  1990  001C6A  5C13               	subwf	pad@i^0,w,c
  1991  001C6C  5014               	movf	(pad@i+1)^0,w,c
  1992  001C6E  0A80               	xorlw	128
  1993  001C70  6E12               	movwf	??_pad^0,c
  1994  001C72  5016               	movf	(pad@w+1)^0,w,c
  1995  001C74  0A80               	xorlw	128
  1996  001C76  5812               	subwfb	??_pad^0,w,c
  1997  001C78  A0D8               	btfss	status,0,c
  1998  001C7A  D7EC               	goto	l1920
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2001  001C7C  B074               	btfsc	_flags^0,0,c
  2002  001C7E  D006               	goto	l1928
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2005  001C80  C00F  F009         	movff	pad@buf,fputs@s
  2006  001C84  C00E  F00A         	movff	pad@fp,fputs@fp
  2007  001C88  ECAD  F00F         	call	_fputs	;wreg free
  2008  001C8C                     l1928:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2011  001C8C  C00F  F001         	movff	pad@buf,strlen@s
  2012  001C90  EC16  F010         	call	_strlen	;wreg free
  2013  001C94  5015               	movf	pad@w^0,w,c
  2014  001C96  2401               	addwf	?_strlen^0,w,c
  2015  001C98  6E0E               	movwf	?_pad^0,c
  2016  001C9A  5016               	movf	(pad@w+1)^0,w,c
  2017  001C9C  2002               	addwfc	(?_strlen+1)^0,w,c
  2018  001C9E  6E0F               	movwf	(?_pad+1)^0,c
  2019  001CA0  0012               	return		;funcret
  2020  001CA2                     __end_of_pad:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _strlen *****************
  2024 ;; Defined at:
  2025 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2028 ;;		 -> dbuf(32), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2031 ;;		 -> dbuf(32), 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    0[COMRAM] unsigned int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;Total ram usage:        3 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_pad
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text6
  2056  00202C                     __ptext6:
  2057                           	callstack 0
  2058  00202C                     _strlen:
  2059                           	callstack 24
  2060                           
  2061                           ;incstack = 0
  2062  00202C  C001  F003         	movff	strlen@s,strlen@a
  2063  002030  D001               	goto	l1860
  2064  002032                     l1858:
  2065  002032  2A01               	incf	strlen@s^0,f,c
  2066  002034                     l1860:
  2067  002034  5001               	movf	strlen@s^0,w,c
  2068  002036  6ED9               	movwf	fsr2l,c
  2069  002038  6ADA               	clrf	fsr2h,c
  2070  00203A  50DF               	movf	indf2,w,c
  2071  00203C  A4D8               	btfss	status,2,c
  2072  00203E  D7F9               	goto	l1858
  2073  002040  5003               	movf	strlen@a^0,w,c
  2074  002042  5C01               	subwf	strlen@s^0,w,c
  2075  002044  6E01               	movwf	?_strlen^0,c
  2076  002046  6A02               	clrf	(?_strlen+1)^0,c
  2077  002048  BE01               	btfsc	?_strlen^0,7,c
  2078  00204A  0602               	decf	(?_strlen+1)^0,f,c
  2079  00204C  0012               	return		;funcret
  2080  00204E                     __end_of_strlen:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _fputs *****************
  2084 ;; Defined at:
  2085 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2088 ;;		 -> dbuf(32), 
  2089 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2090 ;;		 -> sprintf@f(5), 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  i               2   11[COMRAM] int 
  2093 ;;  c               1   10[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    8[COMRAM] int 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;Total ram usage:        5 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    3
  2110 ;; This function calls:
  2111 ;;		_fputc
  2112 ;; This function is called by:
  2113 ;;		_pad
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text7
  2118  001F5A                     __ptext7:
  2119                           	callstack 0
  2120  001F5A                     _fputs:
  2121                           	callstack 22
  2122                           
  2123                           ;incstack = 0
  2124  001F5A  0E00               	movlw	0
  2125  001F5C  6E0D               	movwf	(fputs@i+1)^0,c
  2126  001F5E  0E00               	movlw	0
  2127  001F60  6E0C               	movwf	fputs@i^0,c
  2128  001F62  D009               	goto	l1854
  2129  001F64                     l1850:
  2130  001F64  C00B  F001         	movff	fputs@c,fputc@c
  2131  001F68  6A02               	clrf	(fputc@c+1)^0,c
  2132  001F6A  C00A  F003         	movff	fputs@fp,fputc@fp
  2133  001F6E  EC92  F00D         	call	_fputc	;wreg free
  2134  001F72  4A0C               	infsnz	fputs@i^0,f,c
  2135  001F74  2A0D               	incf	(fputs@i+1)^0,f,c
  2136  001F76                     l1854:
  2137  001F76  5009               	movf	fputs@s^0,w,c
  2138  001F78  240C               	addwf	fputs@i^0,w,c
  2139  001F7A  6ED9               	movwf	fsr2l,c
  2140  001F7C  6ADA               	clrf	fsr2h,c
  2141  001F7E  50DF               	movf	indf2,w,c
  2142  001F80  6E0B               	movwf	fputs@c^0,c
  2143  001F82  500B               	movf	fputs@c^0,w,c
  2144  001F84  B4D8               	btfsc	status,2,c
  2145  001F86  0012               	return	
  2146  001F88  D7ED               	goto	l1850
  2147  001F8A                     __end_of_fputs:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _fputc *****************
  2151 ;; Defined at:
  2152 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  c               2    0[COMRAM] int 
  2155 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2156 ;;		 -> sprintf@f(5), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2    0[COMRAM] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2168 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;Total ram usage:        8 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    2
  2175 ;; This function calls:
  2176 ;;		_putch
  2177 ;; This function is called by:
  2178 ;;		_pad
  2179 ;;		_vfpfcnvrt
  2180 ;;		_fputs
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text8
  2185  001B24                     __ptext8:
  2186                           	callstack 0
  2187  001B24                     _fputc:
  2188                           	callstack 22
  2189                           
  2190                           ;incstack = 0
  2191  001B24  5003               	movf	fputc@fp^0,w,c
  2192  001B26  B4D8               	btfsc	status,2,c
  2193  001B28  D003               	goto	u770
  2194  001B2A  5003               	movf	fputc@fp^0,w,c
  2195  001B2C  A4D8               	btfss	status,2,c
  2196  001B2E  D004               	goto	l1840
  2197  001B30                     u770:
  2198  001B30  5001               	movf	fputc@c^0,w,c
  2199  001B32  EC39  F010         	call	_putch
  2200  001B36  0012               	return	
  2201  001B38                     l1840:
  2202  001B38  5003               	movf	fputc@fp^0,w,c
  2203  001B3A  6ED9               	movwf	fsr2l,c
  2204  001B3C  6ADA               	clrf	fsr2h,c
  2205  001B3E  0E03               	movlw	3
  2206  001B40  26D9               	addwf	fsr2l,f,c
  2207  001B42  50DE               	movf	postinc2,w,c
  2208  001B44  10DE               	iorwf	postinc2,w,c
  2209  001B46  B4D8               	btfsc	status,2,c
  2210  001B48  D014               	goto	u790
  2211  001B4A  5003               	movf	fputc@fp^0,w,c
  2212  001B4C  6ED9               	movwf	fsr2l,c
  2213  001B4E  6ADA               	clrf	fsr2h,c
  2214  001B50  0E03               	movlw	3
  2215  001B52  26D9               	addwf	fsr2l,f,c
  2216  001B54  5003               	movf	fputc@fp^0,w,c
  2217  001B56  6EE1               	movwf	fsr1l,c
  2218  001B58  6AE2               	clrf	fsr1h,c
  2219  001B5A  0E01               	movlw	1
  2220  001B5C  26E1               	addwf	fsr1l,f,c
  2221  001B5E  50DE               	movf	postinc2,w,c
  2222  001B60  5CE6               	subwf	postinc1,w,c
  2223  001B62  50E6               	movf	postinc1,w,c
  2224  001B64  0A80               	xorlw	128
  2225  001B66  6E08               	movwf	(??_fputc+4)^0,c
  2226  001B68  50DE               	movf	postinc2,w,c
  2227  001B6A  0A80               	xorlw	128
  2228  001B6C  5808               	subwfb	(??_fputc+4)^0,w,c
  2229  001B6E  B0D8               	btfsc	status,0,c
  2230  001B70  0012               	return	
  2231  001B72                     u790:
  2232  001B72  5003               	movf	fputc@fp^0,w,c
  2233  001B74  6ED9               	movwf	fsr2l,c
  2234  001B76  6ADA               	clrf	fsr2h,c
  2235  001B78  0E01               	movlw	1
  2236  001B7A  26D9               	addwf	fsr2l,f,c
  2237  001B7C  50DF               	movf	indf2,w,c
  2238  001B7E  6E04               	movwf	??_fputc^0,c
  2239  001B80  5003               	movf	fputc@fp^0,w,c
  2240  001B82  6ED9               	movwf	fsr2l,c
  2241  001B84  6ADA               	clrf	fsr2h,c
  2242  001B86  50DF               	movf	indf2,w,c
  2243  001B88  2404               	addwf	??_fputc^0,w,c
  2244  001B8A  6ED9               	movwf	fsr2l,c
  2245  001B8C  6ADA               	clrf	fsr2h,c
  2246  001B8E  C001  FFDF         	movff	fputc@c,indf2
  2247  001B92  5003               	movf	fputc@fp^0,w,c
  2248  001B94  6ED9               	movwf	fsr2l,c
  2249  001B96  6ADA               	clrf	fsr2h,c
  2250  001B98  0E01               	movlw	1
  2251  001B9A  26D9               	addwf	fsr2l,f,c
  2252  001B9C  2ADE               	incf	postinc2,f,c
  2253  001B9E  0E00               	movlw	0
  2254  001BA0  22DD               	addwfc	postdec2,f,c
  2255  001BA2  0012               	return		;funcret
  2256  001BA4                     __end_of_fputc:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _putch *****************
  2260 ;; Defined at:
  2261 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  c               1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  c               1    0[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_fputc
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text9
  2290  002072                     __ptext9:
  2291                           	callstack 0
  2292  002072                     _putch:
  2293                           	callstack 22
  2294                           
  2295                           ;incstack = 0
  2296  002072  0012               	return		;funcret
  2297  002074                     __end_of_putch:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function ___lomod *****************
  2301 ;; Defined at:
  2302 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  dividend        8    0[COMRAM] unsigned long long 
  2305 ;;  divisor         8    8[COMRAM] unsigned long long 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  counter         1   16[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  8    0[COMRAM] unsigned long long 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2317 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;Total ram usage:       17 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_utoa
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text10
  2332  001948                     __ptext10:
  2333                           	callstack 0
  2334  001948                     ___lomod:
  2335                           	callstack 25
  2336                           
  2337                           ;incstack = 0
  2338  001948  5009               	movf	___lomod@divisor^0,w,c
  2339  00194A  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2340  00194C  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2341  00194E  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2342  001950  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2343  001952  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2344  001954  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2345  001956  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2346  001958  B4D8               	btfsc	status,2,c
  2347  00195A  D03C               	goto	l765
  2348  00195C  0E01               	movlw	1
  2349  00195E  6E11               	movwf	___lomod@counter^0,c
  2350  001960  D00A               	goto	l1900
  2351  001962                     l1898:
  2352  001962  90D8               	bcf	status,0,c
  2353  001964  3609               	rlcf	___lomod@divisor^0,f,c
  2354  001966  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2355  001968  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2356  00196A  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2357  00196C  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2358  00196E  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2359  001970  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2360  001972  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2361  001974  2A11               	incf	___lomod@counter^0,f,c
  2362  001976                     l1900:
  2363  001976  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2364  001978  D7F4               	goto	l1898
  2365  00197A                     u870:
  2366  00197A  5009               	movf	___lomod@divisor^0,w,c
  2367  00197C  5C01               	subwf	___lomod@dividend^0,w,c
  2368  00197E  500A               	movf	(___lomod@divisor+1)^0,w,c
  2369  001980  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2370  001982  500B               	movf	(___lomod@divisor+2)^0,w,c
  2371  001984  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2372  001986  500C               	movf	(___lomod@divisor+3)^0,w,c
  2373  001988  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2374  00198A  500D               	movf	(___lomod@divisor+4)^0,w,c
  2375  00198C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2376  00198E  500E               	movf	(___lomod@divisor+5)^0,w,c
  2377  001990  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2378  001992  500F               	movf	(___lomod@divisor+6)^0,w,c
  2379  001994  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2380  001996  5010               	movf	(___lomod@divisor+7)^0,w,c
  2381  001998  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2382  00199A  A0D8               	btfss	status,0,c
  2383  00199C  D010               	goto	l1906
  2384  00199E  5009               	movf	___lomod@divisor^0,w,c
  2385  0019A0  5E01               	subwf	___lomod@dividend^0,f,c
  2386  0019A2  500A               	movf	(___lomod@divisor+1)^0,w,c
  2387  0019A4  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2388  0019A6  500B               	movf	(___lomod@divisor+2)^0,w,c
  2389  0019A8  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2390  0019AA  500C               	movf	(___lomod@divisor+3)^0,w,c
  2391  0019AC  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2392  0019AE  500D               	movf	(___lomod@divisor+4)^0,w,c
  2393  0019B0  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2394  0019B2  500E               	movf	(___lomod@divisor+5)^0,w,c
  2395  0019B4  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2396  0019B6  500F               	movf	(___lomod@divisor+6)^0,w,c
  2397  0019B8  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2398  0019BA  5010               	movf	(___lomod@divisor+7)^0,w,c
  2399  0019BC  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2400  0019BE                     l1906:
  2401  0019BE  90D8               	bcf	status,0,c
  2402  0019C0  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2403  0019C2  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2404  0019C4  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2405  0019C6  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2406  0019C8  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2407  0019CA  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2408  0019CC  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2409  0019CE  3209               	rrcf	___lomod@divisor^0,f,c
  2410  0019D0  2E11               	decfsz	___lomod@counter^0,f,c
  2411  0019D2  D7D3               	goto	u870
  2412  0019D4                     l765:
  2413  0019D4  C001  F001         	movff	___lomod@dividend,?___lomod
  2414  0019D8  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2415  0019DC  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2416  0019E0  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2417  0019E4  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2418  0019E8  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2419  0019EC  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2420  0019F0  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2421  0019F4  0012               	return		;funcret
  2422  0019F6                     __end_of___lomod:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function ___lodiv *****************
  2426 ;; Defined at:
  2427 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  dividend        8    0[COMRAM] unsigned long long 
  2430 ;;  divisor         8    8[COMRAM] unsigned long long 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  quotient        8   16[COMRAM] unsigned long long 
  2433 ;;  counter         1   24[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  8    0[COMRAM] unsigned long long 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:       25 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_utoa
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text11
  2458  00187A                     __ptext11:
  2459                           	callstack 0
  2460  00187A                     ___lodiv:
  2461                           	callstack 25
  2462                           
  2463                           ;incstack = 0
  2464  00187A  EE20  F011         	lfsr	2,___lodiv@quotient
  2465  00187E  0E07               	movlw	7
  2466  001880                     u821:
  2467  001880  6ADE               	clrf	postinc2,c
  2468  001882  06E8               	decf	wreg,f,c
  2469  001884  E2FD               	bc	u821
  2470  001886  5009               	movf	___lodiv@divisor^0,w,c
  2471  001888  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2472  00188A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2473  00188C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2474  00188E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2475  001890  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2476  001892  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2477  001894  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2478  001896  B4D8               	btfsc	status,2,c
  2479  001898  D046               	goto	l755
  2480  00189A  0E01               	movlw	1
  2481  00189C  6E19               	movwf	___lodiv@counter^0,c
  2482  00189E  D00A               	goto	l1880
  2483  0018A0                     l1878:
  2484  0018A0  90D8               	bcf	status,0,c
  2485  0018A2  3609               	rlcf	___lodiv@divisor^0,f,c
  2486  0018A4  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2487  0018A6  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2488  0018A8  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2489  0018AA  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2490  0018AC  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2491  0018AE  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2492  0018B0  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2493  0018B2  2A19               	incf	___lodiv@counter^0,f,c
  2494  0018B4                     l1880:
  2495  0018B4  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2496  0018B6  D7F4               	goto	l1878
  2497  0018B8                     u840:
  2498  0018B8  90D8               	bcf	status,0,c
  2499  0018BA  3611               	rlcf	___lodiv@quotient^0,f,c
  2500  0018BC  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2501  0018BE  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2502  0018C0  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2503  0018C2  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2504  0018C4  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2505  0018C6  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2506  0018C8  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2507  0018CA  5009               	movf	___lodiv@divisor^0,w,c
  2508  0018CC  5C01               	subwf	___lodiv@dividend^0,w,c
  2509  0018CE  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2510  0018D0  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2511  0018D2  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2512  0018D4  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2513  0018D6  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2514  0018D8  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2515  0018DA  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2516  0018DC  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2517  0018DE  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2518  0018E0  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2519  0018E2  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2520  0018E4  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2521  0018E6  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2522  0018E8  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2523  0018EA  A0D8               	btfss	status,0,c
  2524  0018EC  D011               	goto	l1890
  2525  0018EE  5009               	movf	___lodiv@divisor^0,w,c
  2526  0018F0  5E01               	subwf	___lodiv@dividend^0,f,c
  2527  0018F2  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2528  0018F4  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2529  0018F6  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2530  0018F8  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2531  0018FA  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2532  0018FC  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2533  0018FE  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2534  001900  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2535  001902  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2536  001904  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2537  001906  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2538  001908  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2539  00190A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2540  00190C  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2541  00190E  8011               	bsf	___lodiv@quotient^0,0,c
  2542  001910                     l1890:
  2543  001910  90D8               	bcf	status,0,c
  2544  001912  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2545  001914  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2546  001916  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2547  001918  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2548  00191A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2549  00191C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2550  00191E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2551  001920  3209               	rrcf	___lodiv@divisor^0,f,c
  2552  001922  2E19               	decfsz	___lodiv@counter^0,f,c
  2553  001924  D7C9               	goto	u840
  2554  001926                     l755:
  2555  001926  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2556  00192A  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2557  00192E  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2558  001932  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2559  001936  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2560  00193A  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2561  00193E  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2562  001942  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2563  001946  0012               	return		;funcret
  2564  001948                     __end_of___lodiv:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _atoi *****************
  2568 ;; Defined at:
  2569 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  s               1    7[COMRAM] PTR const unsigned char 
  2572 ;;		 -> STR_1(17), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  n               2   20[COMRAM] int 
  2575 ;;  neg             2   13[COMRAM] int 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  2    7[COMRAM] int 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:       15 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    2
  2592 ;; This function calls:
  2593 ;;		___wmul
  2594 ;;		_isdigit
  2595 ;;		_isspace
  2596 ;; This function is called by:
  2597 ;;		_vfpfcnvrt
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text12
  2602  001658                     __ptext12:
  2603                           	callstack 0
  2604  001658                     _atoi:
  2605                           	callstack 25
  2606                           
  2607                           ;incstack = 0
  2608  001658  0E00               	movlw	0
  2609  00165A  6E16               	movwf	(atoi@n+1)^0,c
  2610  00165C  0E00               	movlw	0
  2611  00165E  6E15               	movwf	atoi@n^0,c
  2612  001660  0E00               	movlw	0
  2613  001662  6E0F               	movwf	(atoi@neg+1)^0,c
  2614  001664  0E00               	movlw	0
  2615  001666  6E0E               	movwf	atoi@neg^0,c
  2616  001668  D001               	goto	l1988
  2617  00166A                     l1986:
  2618  00166A  2A08               	incf	atoi@s^0,f,c
  2619  00166C                     l1988:
  2620  00166C  0E01               	movlw	1
  2621  00166E  6E14               	movwf	_atoi$1240^0,c
  2622  001670  C008  FFF6         	movff	atoi@s,tblptrl
  2623  001674                     	if	1	;There is more than 1 active tblptr byte
  2624  001674  0E10               	movlw	high __smallconst
  2625  001676  6EF7               	movwf	tblptrh,c
  2626  001678                     	endif
  2627  001678                     	if	0	;tblptru may be non-zero
  2628  001678                     	endif
  2629  001678                     	if	0	;tblptru may be non-zero
  2630  001678                     	endif
  2631  001678  0008               	tblrd		*
  2632  00167A  50F5               	movf	tablat,w,c
  2633  00167C  0A20               	xorlw	32
  2634  00167E  B4D8               	btfsc	status,2,c
  2635  001680  D018               	goto	l1996
  2636  001682  0EF7               	movlw	247
  2637  001684  6E0A               	movwf	??_atoi^0,c
  2638  001686  0EFF               	movlw	255
  2639  001688  6E0B               	movwf	(??_atoi+1)^0,c
  2640  00168A  C008  FFF6         	movff	atoi@s,tblptrl
  2641  00168E                     	if	1	;There is more than 1 active tblptr byte
  2642  00168E  0E10               	movlw	high __smallconst
  2643  001690  6EF7               	movwf	tblptrh,c
  2644  001692                     	endif
  2645  001692                     	if	0	;tblptru may be non-zero
  2646  001692                     	endif
  2647  001692                     	if	0	;tblptru may be non-zero
  2648  001692                     	endif
  2649  001692  0008               	tblrd		*
  2650  001694  50F5               	movf	tablat,w,c
  2651  001696  6E0C               	movwf	(??_atoi+2)^0,c
  2652  001698  6A0D               	clrf	(??_atoi+3)^0,c
  2653  00169A  500A               	movf	??_atoi^0,w,c
  2654  00169C  260C               	addwf	(??_atoi+2)^0,f,c
  2655  00169E  500B               	movf	(??_atoi+1)^0,w,c
  2656  0016A0  220D               	addwfc	(??_atoi+3)^0,f,c
  2657  0016A2  500D               	movf	(??_atoi+3)^0,w,c
  2658  0016A4  E104               	bnz	u1050
  2659  0016A6  0E05               	movlw	5
  2660  0016A8  5C0C               	subwf	(??_atoi+2)^0,w,c
  2661  0016AA  A0D8               	btfss	status,0,c
  2662  0016AC  D002               	goto	l1996
  2663  0016AE                     u1050:
  2664  0016AE  0E00               	movlw	0
  2665  0016B0  6E14               	movwf	_atoi$1240^0,c
  2666  0016B2                     l1996:
  2667  0016B2  C014  F010         	movff	_atoi$1240,_atoi$1239
  2668  0016B6  6A11               	clrf	(_atoi$1239+1)^0,c
  2669  0016B8  5010               	movf	_atoi$1239^0,w,c
  2670  0016BA  1011               	iorwf	(_atoi$1239+1)^0,w,c
  2671  0016BC  B4D8               	btfsc	status,2,c
  2672  0016BE  D007               	goto	l2006
  2673  0016C0  D7D4               	goto	l1986
  2674  0016C2                     l2002:
  2675  0016C2  0E00               	movlw	0
  2676  0016C4  6E0F               	movwf	(atoi@neg+1)^0,c
  2677  0016C6  0E01               	movlw	1
  2678  0016C8  6E0E               	movwf	atoi@neg^0,c
  2679  0016CA                     l2004:
  2680  0016CA  2A08               	incf	atoi@s^0,f,c
  2681  0016CC  D02E               	goto	l2012
  2682  0016CE                     l2006:
  2683  0016CE  C008  FFF6         	movff	atoi@s,tblptrl
  2684  0016D2                     	if	1	;There is more than 1 active tblptr byte
  2685  0016D2  0E10               	movlw	high __smallconst
  2686  0016D4  6EF7               	movwf	tblptrh,c
  2687  0016D6                     	endif
  2688  0016D6                     	if	0	;tblptru may be non-zero
  2689  0016D6                     	endif
  2690  0016D6                     	if	0	;tblptru may be non-zero
  2691  0016D6                     	endif
  2692  0016D6  0008               	tblrd		*
  2693  0016D8  50F5               	movf	tablat,w,c
  2694  0016DA  6E0A               	movwf	??_atoi^0,c
  2695  0016DC  6A0B               	clrf	(??_atoi+1)^0,c
  2696                           
  2697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 1, Range of values is 0 to 0
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte            4     3 (average)
  2703                           ;	Chosen strategy is simple_byte
  2704  0016DE  500B               	movf	(??_atoi+1)^0,w,c
  2705  0016E0  0A00               	xorlw	0	; case 0
  2706  0016E2  A4D8               	btfss	status,2,c
  2707  0016E4  D022               	goto	l2012
  2708                           
  2709                           ; Switch size 1, requested type "simple"
  2710                           ; Number of cases is 2, Range of values is 43 to 45
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; simple_byte            7     4 (average)
  2714                           ;	Chosen strategy is simple_byte
  2715  0016E6  500A               	movf	??_atoi^0,w,c
  2716  0016E8  0A2B               	xorlw	43	; case 43
  2717  0016EA  B4D8               	btfsc	status,2,c
  2718  0016EC  D7EE               	goto	l2004
  2719  0016EE  0A06               	xorlw	6	; case 45
  2720  0016F0  B4D8               	btfsc	status,2,c
  2721  0016F2  D7E7               	goto	l2002
  2722  0016F4  D01A               	goto	l2012
  2723  0016F6                     l2008:
  2724  0016F6  C015  F001         	movff	atoi@n,___wmul@multiplier
  2725  0016FA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2726  0016FE  0E00               	movlw	0
  2727  001700  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2728  001702  0E0A               	movlw	10
  2729  001704  6E03               	movwf	___wmul@multiplicand^0,c
  2730  001706  ECF1  F00F         	call	___wmul	;wreg free
  2731  00170A  C008  FFF6         	movff	atoi@s,tblptrl
  2732  00170E                     	if	1	;There is more than 1 active tblptr byte
  2733  00170E  0E10               	movlw	high __smallconst
  2734  001710  6EF7               	movwf	tblptrh,c
  2735  001712                     	endif
  2736  001712                     	if	0	;tblptru may be non-zero
  2737  001712                     	endif
  2738  001712                     	if	0	;tblptru may be non-zero
  2739  001712                     	endif
  2740  001712  0008               	tblrd		*
  2741  001714  50F5               	movf	tablat,w,c
  2742  001716  5E01               	subwf	?___wmul^0,f,c
  2743  001718  0E00               	movlw	0
  2744  00171A  5A02               	subwfb	(?___wmul+1)^0,f,c
  2745  00171C  0E30               	movlw	48
  2746  00171E  2401               	addwf	?___wmul^0,w,c
  2747  001720  6E15               	movwf	atoi@n^0,c
  2748  001722  0E00               	movlw	0
  2749  001724  2002               	addwfc	(?___wmul+1)^0,w,c
  2750  001726  6E16               	movwf	(atoi@n+1)^0,c
  2751  001728  D7D0               	goto	l2004
  2752  00172A                     l2012:
  2753  00172A  0ED0               	movlw	208
  2754  00172C  6E0A               	movwf	??_atoi^0,c
  2755  00172E  0EFF               	movlw	255
  2756  001730  6E0B               	movwf	(??_atoi+1)^0,c
  2757  001732  C008  FFF6         	movff	atoi@s,tblptrl
  2758  001736                     	if	1	;There is more than 1 active tblptr byte
  2759  001736  0E10               	movlw	high __smallconst
  2760  001738  6EF7               	movwf	tblptrh,c
  2761  00173A                     	endif
  2762  00173A                     	if	0	;tblptru may be non-zero
  2763  00173A                     	endif
  2764  00173A                     	if	0	;tblptru may be non-zero
  2765  00173A                     	endif
  2766  00173A  0008               	tblrd		*
  2767  00173C  50F5               	movf	tablat,w,c
  2768  00173E  6E0C               	movwf	(??_atoi+2)^0,c
  2769  001740  6A0D               	clrf	(??_atoi+3)^0,c
  2770  001742  500A               	movf	??_atoi^0,w,c
  2771  001744  260C               	addwf	(??_atoi+2)^0,f,c
  2772  001746  500B               	movf	(??_atoi+1)^0,w,c
  2773  001748  220D               	addwfc	(??_atoi+3)^0,f,c
  2774  00174A  500D               	movf	(??_atoi+3)^0,w,c
  2775  00174C  E106               	bnz	u1070
  2776  00174E  0E0A               	movlw	10
  2777  001750  5C0C               	subwf	(??_atoi+2)^0,w,c
  2778  001752  B0D8               	btfsc	status,0,c
  2779  001754  D002               	goto	u1070
  2780  001756  0E01               	movlw	1
  2781  001758  D001               	goto	u1080
  2782  00175A                     u1070:
  2783  00175A  0E00               	movlw	0
  2784  00175C                     u1080:
  2785  00175C  6E12               	movwf	_atoi$1241^0,c
  2786  00175E  6A13               	clrf	(_atoi$1241+1)^0,c
  2787  001760  5012               	movf	_atoi$1241^0,w,c
  2788  001762  1013               	iorwf	(_atoi$1241+1)^0,w,c
  2789  001764  A4D8               	btfss	status,2,c
  2790  001766  D7C7               	goto	l2008
  2791  001768  500E               	movf	atoi@neg^0,w,c
  2792  00176A  100F               	iorwf	(atoi@neg+1)^0,w,c
  2793  00176C  A4D8               	btfss	status,2,c
  2794  00176E  D00D               	goto	l1094
  2795  001770  C015  F00A         	movff	atoi@n,??_atoi
  2796  001774  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2797  001778  1E0A               	comf	??_atoi^0,f,c
  2798  00177A  1E0B               	comf	(??_atoi+1)^0,f,c
  2799  00177C  4A0A               	infsnz	??_atoi^0,f,c
  2800  00177E  2A0B               	incf	(??_atoi+1)^0,f,c
  2801  001780  C00A  F008         	movff	??_atoi,?_atoi
  2802  001784  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2803  001788  0012               	return	
  2804  00178A                     l1094:
  2805  00178A  C015  F008         	movff	atoi@n,?_atoi
  2806  00178E  C016  F009         	movff	atoi@n+1,?_atoi+1
  2807  001792  0012               	return		;funcret
  2808  001794                     __end_of_atoi:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _isspace *****************
  2812 ;; Defined at:
  2813 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  c               2    0[COMRAM] int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2    0[COMRAM] int 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:        7 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_atoi
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text13
  2842  001EE6                     __ptext13:
  2843                           	callstack 0
  2844  001EE6                     _isspace:
  2845                           	callstack 25
  2846                           
  2847                           ;incstack = 0
  2848  001EE6  0E01               	movlw	1
  2849  001EE8  6E07               	movwf	_isspace$1257^0,c
  2850  001EEA  0E20               	movlw	32
  2851  001EEC  1801               	xorwf	isspace@c^0,w,c
  2852  001EEE  1002               	iorwf	(isspace@c+1)^0,w,c
  2853  001EF0  B4D8               	btfsc	status,2,c
  2854  001EF2  D014               	goto	l1944
  2855  001EF4  0EF7               	movlw	247
  2856  001EF6  6E03               	movwf	??_isspace^0,c
  2857  001EF8  0EFF               	movlw	255
  2858  001EFA  6E04               	movwf	(??_isspace+1)^0,c
  2859  001EFC  C001  F005         	movff	isspace@c,??_isspace+2
  2860  001F00  C002  F006         	movff	isspace@c+1,??_isspace+3
  2861  001F04  5003               	movf	??_isspace^0,w,c
  2862  001F06  2605               	addwf	(??_isspace+2)^0,f,c
  2863  001F08  5004               	movf	(??_isspace+1)^0,w,c
  2864  001F0A  2206               	addwfc	(??_isspace+3)^0,f,c
  2865  001F0C  5006               	movf	(??_isspace+3)^0,w,c
  2866  001F0E  E104               	bnz	u960
  2867  001F10  0E05               	movlw	5
  2868  001F12  5C05               	subwf	(??_isspace+2)^0,w,c
  2869  001F14  A0D8               	btfss	status,0,c
  2870  001F16  D002               	goto	l1944
  2871  001F18                     u960:
  2872  001F18  0E00               	movlw	0
  2873  001F1A  6E07               	movwf	_isspace$1257^0,c
  2874  001F1C                     l1944:
  2875  001F1C  C007  F001         	movff	_isspace$1257,?_isspace
  2876  001F20  6A02               	clrf	(?_isspace+1)^0,c
  2877  001F22  0012               	return		;funcret
  2878  001F24                     __end_of_isspace:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _isdigit *****************
  2882 ;; Defined at:
  2883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  c               2    0[COMRAM] int 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  2    0[COMRAM] int 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        6 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_vfpfcnvrt
  2908 ;;		_atoi
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text14
  2913  001F8A                     __ptext14:
  2914                           	callstack 0
  2915  001F8A                     _isdigit:
  2916                           	callstack 26
  2917                           
  2918                           ;incstack = 0
  2919  001F8A  0ED0               	movlw	208
  2920  001F8C  6E03               	movwf	??_isdigit^0,c
  2921  001F8E  0EFF               	movlw	255
  2922  001F90  6E04               	movwf	(??_isdigit+1)^0,c
  2923  001F92  C001  F005         	movff	isdigit@c,??_isdigit+2
  2924  001F96  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2925  001F9A  5003               	movf	??_isdigit^0,w,c
  2926  001F9C  2605               	addwf	(??_isdigit+2)^0,f,c
  2927  001F9E  5004               	movf	(??_isdigit+1)^0,w,c
  2928  001FA0  2206               	addwfc	(??_isdigit+3)^0,f,c
  2929  001FA2  5006               	movf	(??_isdigit+3)^0,w,c
  2930  001FA4  E106               	bnz	u930
  2931  001FA6  0E0A               	movlw	10
  2932  001FA8  5C05               	subwf	(??_isdigit+2)^0,w,c
  2933  001FAA  B0D8               	btfsc	status,0,c
  2934  001FAC  D002               	goto	u930
  2935  001FAE  0E01               	movlw	1
  2936  001FB0  D001               	goto	u940
  2937  001FB2                     u930:
  2938  001FB2  0E00               	movlw	0
  2939  001FB4                     u940:
  2940  001FB4  6E01               	movwf	?_isdigit^0,c
  2941  001FB6  6A02               	clrf	(?_isdigit+1)^0,c
  2942  001FB8  0012               	return		;funcret
  2943  001FBA                     __end_of_isdigit:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function ___wmul *****************
  2947 ;; Defined at:
  2948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  multiplier      2    0[COMRAM] unsigned int 
  2951 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  product         2    4[COMRAM] unsigned int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    0[COMRAM] unsigned int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, prodl, prodh
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:        6 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_atoi
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text15
  2978  001FE2                     __ptext15:
  2979                           	callstack 0
  2980  001FE2                     ___wmul:
  2981                           	callstack 25
  2982                           
  2983                           ;incstack = 0
  2984  001FE2  5001               	movf	___wmul@multiplier^0,w,c
  2985  001FE4  0203               	mulwf	___wmul@multiplicand^0,c
  2986  001FE6  CFF3 F005          	movff	prodl,___wmul@product
  2987  001FEA  CFF4 F006          	movff	prodh,___wmul@product+1
  2988  001FEE  5001               	movf	___wmul@multiplier^0,w,c
  2989  001FF0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2990  001FF2  50F3               	movf	243,w,c
  2991  001FF4  2606               	addwf	(___wmul@product+1)^0,f,c
  2992  001FF6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2993  001FF8  0203               	mulwf	___wmul@multiplicand^0,c
  2994  001FFA  50F3               	movf	243,w,c
  2995  001FFC  2606               	addwf	(___wmul@product+1)^0,f,c
  2996  001FFE  C005  F001         	movff	___wmul@product,?___wmul
  2997  002002  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2998  002006  0012               	return		;funcret
  2999  002008                     __end_of___wmul:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function ___lwdiv *****************
  3003 ;; Defined at:
  3004 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  dividend        2    9[COMRAM] unsigned int 
  3007 ;;  divisor         2   11[COMRAM] unsigned int 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  quotient        2   13[COMRAM] unsigned int 
  3010 ;;  counter         1   15[COMRAM] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  2    9[COMRAM] unsigned int 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;Total ram usage:        7 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    1
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text16
  3035  001D6C                     __ptext16:
  3036                           	callstack 0
  3037  001D6C                     ___lwdiv:
  3038                           	callstack 29
  3039                           
  3040                           ;incstack = 0
  3041  001D6C  0E00               	movlw	0
  3042  001D6E  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  3043  001D70  0E00               	movlw	0
  3044  001D72  6E0E               	movwf	___lwdiv@quotient^0,c
  3045  001D74  500C               	movf	___lwdiv@divisor^0,w,c
  3046  001D76  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3047  001D78  B4D8               	btfsc	status,2,c
  3048  001D7A  D01C               	goto	l808
  3049  001D7C  0E01               	movlw	1
  3050  001D7E  6E10               	movwf	___lwdiv@counter^0,c
  3051  001D80  D004               	goto	l2350
  3052  001D82                     l2348:
  3053  001D82  90D8               	bcf	status,0,c
  3054  001D84  360C               	rlcf	___lwdiv@divisor^0,f,c
  3055  001D86  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3056  001D88  2A10               	incf	___lwdiv@counter^0,f,c
  3057  001D8A                     l2350:
  3058  001D8A  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  3059  001D8C  D7FA               	goto	l2348
  3060  001D8E                     u1370:
  3061  001D8E  90D8               	bcf	status,0,c
  3062  001D90  360E               	rlcf	___lwdiv@quotient^0,f,c
  3063  001D92  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3064  001D94  500C               	movf	___lwdiv@divisor^0,w,c
  3065  001D96  5C0A               	subwf	___lwdiv@dividend^0,w,c
  3066  001D98  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3067  001D9A  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3068  001D9C  A0D8               	btfss	status,0,c
  3069  001D9E  D005               	goto	l2360
  3070  001DA0  500C               	movf	___lwdiv@divisor^0,w,c
  3071  001DA2  5E0A               	subwf	___lwdiv@dividend^0,f,c
  3072  001DA4  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3073  001DA6  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3074  001DA8  800E               	bsf	___lwdiv@quotient^0,0,c
  3075  001DAA                     l2360:
  3076  001DAA  90D8               	bcf	status,0,c
  3077  001DAC  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3078  001DAE  320C               	rrcf	___lwdiv@divisor^0,f,c
  3079  001DB0  2E10               	decfsz	___lwdiv@counter^0,f,c
  3080  001DB2  D7ED               	goto	u1370
  3081  001DB4                     l808:
  3082  001DB4  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  3083  001DB8  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3084  001DBC  0012               	return		;funcret
  3085  001DBE                     __end_of___lwdiv:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function ___llmod *****************
  3089 ;; Defined at:
  3090 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\llmod.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  dividend        4    0[COMRAM] unsigned long 
  3093 ;;  divisor         4    4[COMRAM] unsigned long 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  counter         1    8[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  4    0[COMRAM] unsigned long 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        9 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text17
  3120  001CA2                     __ptext17:
  3121                           	callstack 0
  3122  001CA2                     ___llmod:
  3123                           	callstack 29
  3124                           
  3125                           ;incstack = 0
  3126  001CA2  5005               	movf	___llmod@divisor^0,w,c
  3127  001CA4  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3128  001CA6  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  3129  001CA8  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  3130  001CAA  B4D8               	btfsc	status,2,c
  3131  001CAC  D024               	goto	l737
  3132  001CAE  0E01               	movlw	1
  3133  001CB0  6E09               	movwf	___llmod@counter^0,c
  3134  001CB2  D006               	goto	l2332
  3135  001CB4                     l2330:
  3136  001CB4  90D8               	bcf	status,0,c
  3137  001CB6  3605               	rlcf	___llmod@divisor^0,f,c
  3138  001CB8  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  3139  001CBA  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  3140  001CBC  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  3141  001CBE  2A09               	incf	___llmod@counter^0,f,c
  3142  001CC0                     l2332:
  3143  001CC0  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  3144  001CC2  D7F8               	goto	l2330
  3145  001CC4                     u1340:
  3146  001CC4  5005               	movf	___llmod@divisor^0,w,c
  3147  001CC6  5C01               	subwf	___llmod@dividend^0,w,c
  3148  001CC8  5006               	movf	(___llmod@divisor+1)^0,w,c
  3149  001CCA  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  3150  001CCC  5007               	movf	(___llmod@divisor+2)^0,w,c
  3151  001CCE  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  3152  001CD0  5008               	movf	(___llmod@divisor+3)^0,w,c
  3153  001CD2  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  3154  001CD4  A0D8               	btfss	status,0,c
  3155  001CD6  D008               	goto	l2338
  3156  001CD8  5005               	movf	___llmod@divisor^0,w,c
  3157  001CDA  5E01               	subwf	___llmod@dividend^0,f,c
  3158  001CDC  5006               	movf	(___llmod@divisor+1)^0,w,c
  3159  001CDE  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  3160  001CE0  5007               	movf	(___llmod@divisor+2)^0,w,c
  3161  001CE2  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  3162  001CE4  5008               	movf	(___llmod@divisor+3)^0,w,c
  3163  001CE6  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  3164  001CE8                     l2338:
  3165  001CE8  90D8               	bcf	status,0,c
  3166  001CEA  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  3167  001CEC  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  3168  001CEE  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  3169  001CF0  3205               	rrcf	___llmod@divisor^0,f,c
  3170  001CF2  2E09               	decfsz	___llmod@counter^0,f,c
  3171  001CF4  D7E7               	goto	u1340
  3172  001CF6                     l737:
  3173  001CF6  C001  F001         	movff	___llmod@dividend,?___llmod
  3174  001CFA  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3175  001CFE  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3176  001D02  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3177  001D06  0012               	return		;funcret
  3178  001D08                     __end_of___llmod:
  3179                           	callstack 0
  3180                           
  3181 ;; *************** function ___lldiv *****************
  3182 ;; Defined at:
  3183 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  dividend        4    9[COMRAM] unsigned long 
  3186 ;;  divisor         4   13[COMRAM] unsigned long 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  quotient        4   17[COMRAM] unsigned long 
  3189 ;;  counter         1   21[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  4    9[COMRAM] unsigned long 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:       13 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text18
  3214  001AA2                     __ptext18:
  3215                           	callstack 0
  3216  001AA2                     ___lldiv:
  3217                           	callstack 29
  3218                           
  3219                           ;incstack = 0
  3220  001AA2  0E00               	movlw	0
  3221  001AA4  6E12               	movwf	___lldiv@quotient^0,c
  3222  001AA6  0E00               	movlw	0
  3223  001AA8  6E13               	movwf	(___lldiv@quotient+1)^0,c
  3224  001AAA  0E00               	movlw	0
  3225  001AAC  6E14               	movwf	(___lldiv@quotient+2)^0,c
  3226  001AAE  0E00               	movlw	0
  3227  001AB0  6E15               	movwf	(___lldiv@quotient+3)^0,c
  3228  001AB2  500E               	movf	___lldiv@divisor^0,w,c
  3229  001AB4  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
  3230  001AB6  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
  3231  001AB8  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
  3232  001ABA  B4D8               	btfsc	status,2,c
  3233  001ABC  D02A               	goto	l344
  3234  001ABE  0E01               	movlw	1
  3235  001AC0  6E16               	movwf	___lldiv@counter^0,c
  3236  001AC2  D006               	goto	l2312
  3237  001AC4                     l2310:
  3238  001AC4  90D8               	bcf	status,0,c
  3239  001AC6  360E               	rlcf	___lldiv@divisor^0,f,c
  3240  001AC8  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
  3241  001ACA  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
  3242  001ACC  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
  3243  001ACE  2A16               	incf	___lldiv@counter^0,f,c
  3244  001AD0                     l2312:
  3245  001AD0  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
  3246  001AD2  D7F8               	goto	l2310
  3247  001AD4                     u1310:
  3248  001AD4  90D8               	bcf	status,0,c
  3249  001AD6  3612               	rlcf	___lldiv@quotient^0,f,c
  3250  001AD8  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
  3251  001ADA  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
  3252  001ADC  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
  3253  001ADE  500E               	movf	___lldiv@divisor^0,w,c
  3254  001AE0  5C0A               	subwf	___lldiv@dividend^0,w,c
  3255  001AE2  500F               	movf	(___lldiv@divisor+1)^0,w,c
  3256  001AE4  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
  3257  001AE6  5010               	movf	(___lldiv@divisor+2)^0,w,c
  3258  001AE8  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
  3259  001AEA  5011               	movf	(___lldiv@divisor+3)^0,w,c
  3260  001AEC  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
  3261  001AEE  A0D8               	btfss	status,0,c
  3262  001AF0  D009               	goto	l2322
  3263  001AF2  500E               	movf	___lldiv@divisor^0,w,c
  3264  001AF4  5E0A               	subwf	___lldiv@dividend^0,f,c
  3265  001AF6  500F               	movf	(___lldiv@divisor+1)^0,w,c
  3266  001AF8  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
  3267  001AFA  5010               	movf	(___lldiv@divisor+2)^0,w,c
  3268  001AFC  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
  3269  001AFE  5011               	movf	(___lldiv@divisor+3)^0,w,c
  3270  001B00  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
  3271  001B02  8012               	bsf	___lldiv@quotient^0,0,c
  3272  001B04                     l2322:
  3273  001B04  90D8               	bcf	status,0,c
  3274  001B06  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
  3275  001B08  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
  3276  001B0A  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
  3277  001B0C  320E               	rrcf	___lldiv@divisor^0,f,c
  3278  001B0E  2E16               	decfsz	___lldiv@counter^0,f,c
  3279  001B10  D7E1               	goto	u1310
  3280  001B12                     l344:
  3281  001B12  C012  F00A         	movff	___lldiv@quotient,?___lldiv
  3282  001B16  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
  3283  001B1A  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
  3284  001B1E  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
  3285  001B22  0012               	return		;funcret
  3286  001B24                     __end_of___lldiv:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _Timer1_Init_Default *****************
  3290 ;; Defined at:
  3291 ;;		line 31 in file "src/timer.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text19
  3320  002066                     __ptext19:
  3321                           	callstack 0
  3322  002066                     _Timer1_Init_Default:
  3323                           	callstack 29
  3324                           
  3325                           ;src/timer.c: 32:     T1CON = 0x80;
  3326                           
  3327                           ;incstack = 0
  3328  002066  0E80               	movlw	128
  3329  002068  6ECD               	movwf	205,c	;volatile
  3330                           
  3331                           ;src/timer.c: 33:     (PIE1bits.TMR1IE = 1u);
  3332  00206A  809D               	bsf	157,0,c	;volatile
  3333  00206C  0012               	return		;funcret
  3334  00206E                     __end_of_Timer1_Init_Default:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function _LCD_write_data_byte_4bit *****************
  3338 ;; Defined at:
  3339 ;;		line 126 in file "src/lcd_driver.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  data            1    wreg     unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  data            1    3[COMRAM] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        2 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    2
  3360 ;; This function calls:
  3361 ;;		_LCD_enable_toggle
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text20
  3368  001DBE                     __ptext20:
  3369                           	callstack 0
  3370  001DBE                     _LCD_write_data_byte_4bit:
  3371                           	callstack 28
  3372                           
  3373                           ;incstack = 0
  3374                           ;LCD_write_data_byte_4bit@data stored from wreg
  3375  001DBE  6E04               	movwf	LCD_write_data_byte_4bit@data^0,c
  3376                           
  3377                           ;src/lcd_driver.c: 128:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  3378  001DC0  0EFC               	movlw	252
  3379  001DC2  1694               	andwf	148,f,c	;volatile
  3380  001DC4  9295               	bcf	149,1,c	;volatile
  3381                           
  3382                           ;src/lcd_driver.c: 129:     (TRISD &= 0x0Fu);
  3383  001DC6  0E0F               	movlw	15
  3384  001DC8  1695               	andwf	149,f,c	;volatile
  3385                           
  3386                           ;src/lcd_driver.c: 130:     (LATCbits.LATC0 = 1u);
  3387  001DCA  808B               	bsf	139,0,c	;volatile
  3388                           
  3389                           ;src/lcd_driver.c: 131:     (LATCbits.LATC1 = 0u);
  3390  001DCC  928B               	bcf	139,1,c	;volatile
  3391                           
  3392                           ;src/lcd_driver.c: 134:     PORTD = (PORTD & 0x0F) | (data & 0xF0);
  3393  001DCE  C004  F003         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  3394  001DD2  0EF0               	movlw	240
  3395  001DD4  1603               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  3396  001DD6  5083               	movf	131,w,c	;volatile
  3397  001DD8  0B0F               	andlw	15
  3398  001DDA  1003               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  3399  001DDC  6E83               	movwf	131,c	;volatile
  3400                           
  3401                           ;src/lcd_driver.c: 135:     LCD_enable_toggle();
  3402  001DDE  ECFB  F00C         	call	_LCD_enable_toggle	;wreg free
  3403                           
  3404                           ;src/lcd_driver.c: 136:     PORTD = (PORTD & 0x0F) | ((data<<4) & 0xF0);
  3405  001DE2  C004  F003         	movff	LCD_write_data_byte_4bit@data,??_LCD_write_data_byte_4bit
  3406  001DE6  3A03               	swapf	??_LCD_write_data_byte_4bit^0,f,c
  3407  001DE8  0EF0               	movlw	240
  3408  001DEA  1603               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  3409  001DEC  0EF0               	movlw	240
  3410  001DEE  1603               	andwf	??_LCD_write_data_byte_4bit^0,f,c
  3411  001DF0  5083               	movf	131,w,c	;volatile
  3412  001DF2  0B0F               	andlw	15
  3413  001DF4  1003               	iorwf	??_LCD_write_data_byte_4bit^0,w,c
  3414  001DF6  6E83               	movwf	131,c	;volatile
  3415                           
  3416                           ;src/lcd_driver.c: 137:     LCD_enable_toggle();
  3417  001DF8  ECFB  F00C         	call	_LCD_enable_toggle	;wreg free
  3418                           
  3419                           ;src/lcd_driver.c: 139:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  3420  001DFC  0E82               	movlw	130
  3421  001DFE  6E03               	movwf	??_LCD_write_data_byte_4bit^0,c
  3422  001E00  0EDE               	movlw	222
  3423  001E02                     u1567:
  3424  001E02  2EE8               	decfsz	wreg,f,c
  3425  001E04  D7FE               	bra	u1567
  3426  001E06  2E03               	decfsz	??_LCD_write_data_byte_4bit^0,f,c
  3427  001E08  D7FC               	bra	u1567
  3428  001E0A  0012               	return		;funcret
  3429  001E0C                     __end_of_LCD_write_data_byte_4bit:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _LCD_set_cursor_position *****************
  3433 ;; Defined at:
  3434 ;;		line 500 in file "src/lcd_driver.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  line            1    wreg     unsigned char 
  3437 ;;  pos_on_line     1    4[COMRAM] unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  line            1    6[COMRAM] unsigned char 
  3440 ;;  ddram_addr      1    5[COMRAM] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      unsigned char 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3450 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;Total ram usage:        3 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    3
  3457 ;; This function calls:
  3458 ;;		_LCD_write_instr_byte_4bit
  3459 ;;		_LCD_write_instr_byte_8bit
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text21
  3466  001D08                     __ptext21:
  3467                           	callstack 0
  3468  001D08                     _LCD_set_cursor_position:
  3469                           	callstack 27
  3470                           
  3471                           ;incstack = 0
  3472                           ;LCD_set_cursor_position@line stored from wreg
  3473  001D08  6E07               	movwf	LCD_set_cursor_position@line^0,c
  3474                           
  3475                           ;src/lcd_driver.c: 502:     if(line > 2u || pos_on_line > 2u * 16u){
  3476  001D0A  0E03               	movlw	3
  3477  001D0C  6007               	cpfslt	LCD_set_cursor_position@line^0,c
  3478  001D0E  0012               	return	
  3479  001D10  0E20               	movlw	32
  3480  001D12  6405               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  3481  001D14  D001               	goto	l2260
  3482  001D16  0012               	return	
  3483  001D18                     l2260:
  3484                           
  3485                           ;src/lcd_driver.c: 511:         if(line == 1u && pos_on_line < 16u){
  3486  001D18  0407               	decf	LCD_set_cursor_position@line^0,w,c
  3487  001D1A  A4D8               	btfss	status,2,c
  3488  001D1C  D005               	goto	l2266
  3489  001D1E  0E10               	movlw	16
  3490  001D20  6005               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  3491  001D22  D002               	goto	l2266
  3492                           
  3493                           ;src/lcd_driver.c: 512:             ddram_addr = 0x00u + pos_on_line - 1;
  3494  001D24  0405               	decf	LCD_set_cursor_position@pos_on_line^0,w,c
  3495  001D26  D012               	goto	L1
  3496  001D28                     l2266:
  3497  001D28  0E02               	movlw	2
  3498  001D2A  1807               	xorwf	LCD_set_cursor_position@line^0,w,c
  3499  001D2C  A4D8               	btfss	status,2,c
  3500  001D2E  D006               	goto	l2272
  3501  001D30  0E10               	movlw	16
  3502  001D32  6005               	cpfslt	LCD_set_cursor_position@pos_on_line^0,c
  3503  001D34  D003               	goto	l2272
  3504                           
  3505                           ;src/lcd_driver.c: 515:             ddram_addr = 0x40u + pos_on_line - 1;
  3506  001D36  5005               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  3507  001D38  0F3F               	addlw	63
  3508  001D3A  D008               	goto	L1
  3509  001D3C                     l2272:
  3510  001D3C  0407               	decf	LCD_set_cursor_position@line^0,w,c
  3511  001D3E  A4D8               	btfss	status,2,c
  3512  001D40  0012               	return	
  3513  001D42  0E10               	movlw	16
  3514  001D44  6405               	cpfsgt	LCD_set_cursor_position@pos_on_line^0,c
  3515  001D46  0012               	return	
  3516                           
  3517                           ;src/lcd_driver.c: 518:             ddram_addr = 0x40u + pos_on_line - 16 - 1;
  3518  001D48  5005               	movf	LCD_set_cursor_position@pos_on_line^0,w,c
  3519  001D4A  0F2F               	addlw	47
  3520  001D4C                     L1:
  3521  001D4C  6E06               	movwf	LCD_set_cursor_position@ddram_addr^0,c
  3522                           
  3523                           ;src/lcd_driver.c: 525:     if(DISP_BIT_MODE == MODE_4BIT){
  3524                           
  3525                           ;src/lcd_driver.c: 520:         } else{
  3526  001D4E  5079               	movf	_DISP_BIT_MODE^0,w,c
  3527  001D50  A4D8               	btfss	status,2,c
  3528  001D52  D005               	goto	l2282
  3529                           
  3530                           ;src/lcd_driver.c: 526:         LCD_write_instr_byte_4bit(0x80u | ddram_addr);
  3531  001D54  5006               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  3532  001D56  0980               	iorlw	128
  3533  001D58  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3534                           
  3535                           ;src/lcd_driver.c: 527:     } else{
  3536  001D5C  D004               	goto	l2284
  3537  001D5E                     l2282:
  3538                           
  3539                           ;src/lcd_driver.c: 528:         LCD_write_instr_byte_8bit(0x80u | ddram_addr);
  3540  001D5E  5006               	movf	LCD_set_cursor_position@ddram_addr^0,w,c
  3541  001D60  0980               	iorlw	128
  3542  001D62  ECDD  F00F         	call	_LCD_write_instr_byte_8bit
  3543  001D66                     l2284:
  3544                           
  3545                           ;src/lcd_driver.c: 531:     address_counter = ddram_addr;
  3546  001D66  C006  F09A         	movff	LCD_set_cursor_position@ddram_addr,_address_counter
  3547  001D6A  0012               	return		;funcret
  3548  001D6C                     __end_of_LCD_set_cursor_position:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _LCD_clear_display *****************
  3552 ;; Defined at:
  3553 ;;		line 427 in file "src/lcd_driver.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      unsigned char 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;Total ram usage:        1 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    3
  3574 ;; This function calls:
  3575 ;;		_LCD_write_instr_byte_4bit
  3576 ;;		_LCD_write_instr_byte_8bit
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text22
  3583  002008                     __ptext22:
  3584                           	callstack 0
  3585  002008                     _LCD_clear_display:
  3586                           	callstack 27
  3587                           
  3588                           ;src/lcd_driver.c: 428:     if(DISP_BIT_MODE == MODE_4BIT){
  3589                           
  3590                           ;incstack = 0
  3591  002008  5079               	movf	_DISP_BIT_MODE^0,w,c
  3592  00200A  A4D8               	btfss	status,2,c
  3593  00200C  D004               	goto	l2250
  3594                           
  3595                           ;src/lcd_driver.c: 429:         LCD_write_instr_byte_4bit(0x01u);
  3596  00200E  0E01               	movlw	1
  3597  002010  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3598                           
  3599                           ;src/lcd_driver.c: 430:     } else{
  3600  002014  D003               	goto	l2252
  3601  002016                     l2250:
  3602                           
  3603                           ;src/lcd_driver.c: 431:         LCD_write_instr_byte_8bit(0x01u);
  3604  002016  0E01               	movlw	1
  3605  002018  ECDD  F00F         	call	_LCD_write_instr_byte_8bit
  3606  00201C                     l2252:
  3607                           
  3608                           ;src/lcd_driver.c: 434:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  3609  00201C  0E82               	movlw	130
  3610  00201E  6E05               	movwf	??_LCD_clear_display^0,c
  3611  002020  0EDE               	movlw	222
  3612  002022                     u1577:
  3613  002022  2EE8               	decfsz	wreg,f,c
  3614  002024  D7FE               	bra	u1577
  3615  002026  2E05               	decfsz	??_LCD_clear_display^0,f,c
  3616  002028  D7FC               	bra	u1577
  3617  00202A  0012               	return		;funcret
  3618  00202C                     __end_of_LCD_clear_display:
  3619                           	callstack 0
  3620                           
  3621 ;; *************** function _LCD_write_instr_byte_8bit *****************
  3622 ;; Defined at:
  3623 ;;		line 200 in file "src/lcd_driver.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  instr           1    wreg     unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  instr           1    3[COMRAM] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;Total ram usage:        2 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    2
  3644 ;; This function calls:
  3645 ;;		_LCD_enable_toggle
  3646 ;; This function is called by:
  3647 ;;		_LCD_clear_display
  3648 ;;		_LCD_set_cursor_position
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text23
  3653  001FBA                     __ptext23:
  3654                           	callstack 0
  3655  001FBA                     _LCD_write_instr_byte_8bit:
  3656                           	callstack 27
  3657                           
  3658                           ;incstack = 0
  3659                           ;LCD_write_instr_byte_8bit@instr stored from wreg
  3660  001FBA  6E04               	movwf	LCD_write_instr_byte_8bit@instr^0,c
  3661                           
  3662                           ;src/lcd_driver.c: 202:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  3663  001FBC  0EFC               	movlw	252
  3664  001FBE  1694               	andwf	148,f,c	;volatile
  3665  001FC0  9295               	bcf	149,1,c	;volatile
  3666                           
  3667                           ;src/lcd_driver.c: 203:     (TRISD = 0x00u);
  3668  001FC2  0E00               	movlw	0
  3669  001FC4  6E95               	movwf	149,c	;volatile
  3670                           
  3671                           ;src/lcd_driver.c: 204:     (LATCbits.LATC0 = 0u);
  3672  001FC6  908B               	bcf	139,0,c	;volatile
  3673                           
  3674                           ;src/lcd_driver.c: 205:     (LATCbits.LATC1 = 0u);
  3675  001FC8  928B               	bcf	139,1,c	;volatile
  3676                           
  3677                           ;src/lcd_driver.c: 208:     PORTD = instr;
  3678  001FCA  C004  FF83         	movff	LCD_write_instr_byte_8bit@instr,3971	;volatile
  3679                           
  3680                           ;src/lcd_driver.c: 209:     LCD_enable_toggle();
  3681  001FCE  ECFB  F00C         	call	_LCD_enable_toggle	;wreg free
  3682                           
  3683                           ;src/lcd_driver.c: 211:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  3684  001FD2  0E82               	movlw	130
  3685  001FD4  6E03               	movwf	??_LCD_write_instr_byte_8bit^0,c
  3686  001FD6  0EDE               	movlw	222
  3687  001FD8                     u1587:
  3688  001FD8  2EE8               	decfsz	wreg,f,c
  3689  001FDA  D7FE               	bra	u1587
  3690  001FDC  2E03               	decfsz	??_LCD_write_instr_byte_8bit^0,f,c
  3691  001FDE  D7FC               	bra	u1587
  3692  001FE0  0012               	return		;funcret
  3693  001FE2                     __end_of_LCD_write_instr_byte_8bit:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _LCD_Init_ECE376 *****************
  3697 ;; Defined at:
  3698 ;;		line 224 in file "src/lcd_driver.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    3
  3719 ;; This function calls:
  3720 ;;		_LCD_write_instr_byte_4bit
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text24
  3727  001794                     __ptext24:
  3728                           	callstack 0
  3729  001794                     _LCD_Init_ECE376:
  3730                           	callstack 27
  3731                           
  3732                           ;src/lcd_driver.c: 227:     PORTC = 0x00; PORTD = 0x00;
  3733                           
  3734                           ;incstack = 0
  3735  001794  0E00               	movlw	0
  3736  001796  6E82               	movwf	130,c	;volatile
  3737  001798  0E00               	movlw	0
  3738  00179A  6E83               	movwf	131,c	;volatile
  3739                           
  3740                           ;src/lcd_driver.c: 229:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  3741  00179C  0EFC               	movlw	252
  3742  00179E  1694               	andwf	148,f,c	;volatile
  3743  0017A0  9295               	bcf	149,1,c	;volatile
  3744                           
  3745                           ;src/lcd_driver.c: 230:     (TRISD |= 0xF0u);
  3746  0017A2  0EF0               	movlw	240
  3747  0017A4  1295               	iorwf	149,f,c	;volatile
  3748                           
  3749                           ;src/lcd_driver.c: 234:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  3750  0017A6  0ECB               	movlw	203
  3751  0017A8  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  3752  0017AA  0EEC               	movlw	236
  3753  0017AC  6E05               	movwf	??_LCD_Init_ECE376^0,c
  3754  0017AE  0E84               	movlw	132
  3755  0017B0                     u1597:
  3756  0017B0  2EE8               	decfsz	wreg,f,c
  3757  0017B2  D7FE               	bra	u1597
  3758  0017B4  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  3759  0017B6  D7FC               	bra	u1597
  3760  0017B8  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  3761  0017BA  D7FA               	bra	u1597
  3762  0017BC  D000               	nop2	
  3763                           
  3764                           ;src/lcd_driver.c: 235:     _delay((unsigned long)((4000)*(40000000u/4000.0)));
  3765  0017BE  0ECB               	movlw	203
  3766  0017C0  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  3767  0017C2  0EEC               	movlw	236
  3768  0017C4  6E05               	movwf	??_LCD_Init_ECE376^0,c
  3769  0017C6  0E84               	movlw	132
  3770  0017C8                     u1607:
  3771  0017C8  2EE8               	decfsz	wreg,f,c
  3772  0017CA  D7FE               	bra	u1607
  3773  0017CC  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  3774  0017CE  D7FC               	bra	u1607
  3775  0017D0  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  3776  0017D2  D7FA               	bra	u1607
  3777  0017D4  D000               	nop2	
  3778                           
  3779                           ;src/lcd_driver.c: 236:     _delay((unsigned long)((2000)*(40000000u/4000.0)));
  3780  0017D6  0E66               	movlw	102
  3781  0017D8  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  3782  0017DA  0E76               	movlw	118
  3783  0017DC  6E05               	movwf	??_LCD_Init_ECE376^0,c
  3784  0017DE  0EC1               	movlw	193
  3785  0017E0                     u1617:
  3786  0017E0  2EE8               	decfsz	wreg,f,c
  3787  0017E2  D7FE               	bra	u1617
  3788  0017E4  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  3789  0017E6  D7FC               	bra	u1617
  3790  0017E8  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  3791  0017EA  D7FA               	bra	u1617
  3792  0017EC  F000               	nop	
  3793                           
  3794                           ;src/lcd_driver.c: 241:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  3795  0017EE  0E06               	movlw	6
  3796  0017F0  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  3797  0017F2  0E13               	movlw	19
  3798  0017F4  6E05               	movwf	??_LCD_Init_ECE376^0,c
  3799  0017F6  0EAE               	movlw	174
  3800  0017F8                     u1627:
  3801  0017F8  2EE8               	decfsz	wreg,f,c
  3802  0017FA  D7FE               	bra	u1627
  3803  0017FC  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  3804  0017FE  D7FC               	bra	u1627
  3805  001800  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  3806  001802  D7FA               	bra	u1627
  3807                           
  3808                           ;src/lcd_driver.c: 242:     LCD_write_instr_byte_4bit(0x30u);
  3809  001804  0E30               	movlw	48
  3810  001806  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3811                           
  3812                           ;src/lcd_driver.c: 243:     _delay((unsigned long)((5)*(40000000u/4000.0)));
  3813  00180A  0E41               	movlw	65
  3814  00180C  6E05               	movwf	??_LCD_Init_ECE376^0,c
  3815  00180E  0EEE               	movlw	238
  3816  001810                     u1637:
  3817  001810  2EE8               	decfsz	wreg,f,c
  3818  001812  D7FE               	bra	u1637
  3819  001814  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  3820  001816  D7FC               	bra	u1637
  3821  001818  D000               	nop2	
  3822                           
  3823                           ;src/lcd_driver.c: 244:     LCD_write_instr_byte_4bit(0x30u);
  3824  00181A  0E30               	movlw	48
  3825  00181C  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3826                           
  3827                           ;src/lcd_driver.c: 245:     _delay((unsigned long)((150)*(40000000u/4000000.0)));
  3828  001820  0ED6               	movlw	214
  3829  001822                     u1647:
  3830  001822  D000               	nop2	
  3831  001824  D000               	nop2	
  3832  001826  2EE8               	decfsz	wreg,f,c
  3833  001828  D7FC               	bra	u1647
  3834  00182A  D000               	nop2	
  3835                           
  3836                           ;src/lcd_driver.c: 246:     LCD_write_instr_byte_4bit(0x30u);
  3837  00182C  0E30               	movlw	48
  3838  00182E  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3839                           
  3840                           ;src/lcd_driver.c: 248:     LCD_write_instr_byte_4bit(0x28u);
  3841  001832  0E28               	movlw	40
  3842  001834  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3843                           
  3844                           ;src/lcd_driver.c: 249:     LCD_write_instr_byte_4bit(0x0Eu);
  3845  001838  0E0E               	movlw	14
  3846  00183A  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3847                           
  3848                           ;src/lcd_driver.c: 250:     LCD_write_instr_byte_4bit(0x01u);
  3849  00183E  0E01               	movlw	1
  3850  001840  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3851                           
  3852                           ;src/lcd_driver.c: 251:     LCD_write_instr_byte_4bit(0x06u);
  3853  001844  0E06               	movlw	6
  3854  001846  EC06  F00F         	call	_LCD_write_instr_byte_4bit
  3855                           
  3856                           ;src/lcd_driver.c: 253:     _delay((unsigned long)((100)*(40000000u/4000.0)));
  3857  00184A  0E06               	movlw	6
  3858  00184C  6E06               	movwf	(??_LCD_Init_ECE376+1)^0,c
  3859  00184E  0E13               	movlw	19
  3860  001850  6E05               	movwf	??_LCD_Init_ECE376^0,c
  3861  001852  0EAE               	movlw	174
  3862  001854                     u1657:
  3863  001854  2EE8               	decfsz	wreg,f,c
  3864  001856  D7FE               	bra	u1657
  3865  001858  2E05               	decfsz	??_LCD_Init_ECE376^0,f,c
  3866  00185A  D7FC               	bra	u1657
  3867  00185C  2E06               	decfsz	(??_LCD_Init_ECE376+1)^0,f,c
  3868  00185E  D7FA               	bra	u1657
  3869                           
  3870                           ;src/lcd_driver.c: 256:     CURRENT_DISP = QAPASS_EBAY;
  3871  001860  0E00               	movlw	0
  3872  001862  6E7A               	movwf	_CURRENT_DISP^0,c
  3873                           
  3874                           ;src/lcd_driver.c: 257:     DISP_BIT_MODE = MODE_4BIT;
  3875  001864  0E00               	movlw	0
  3876  001866  6E79               	movwf	_DISP_BIT_MODE^0,c
  3877                           
  3878                           ;src/lcd_driver.c: 258:     init_complete = 0x01u;
  3879  001868  0E01               	movlw	1
  3880  00186A  6E78               	movwf	_init_complete^0,c
  3881                           
  3882                           ;src/lcd_driver.c: 259:     current_entry_mode = 0x06u;
  3883  00186C  0E06               	movlw	6
  3884  00186E  6E7C               	movwf	_current_entry_mode^0,c
  3885                           
  3886                           ;src/lcd_driver.c: 260:     current_disp_ctrl = 0x0Eu;
  3887  001870  0E0E               	movlw	14
  3888  001872  6E7E               	movwf	_current_disp_ctrl^0,c
  3889                           
  3890                           ;src/lcd_driver.c: 261:     current_func_set = 0x28u;
  3891  001874  0E28               	movlw	40
  3892  001876  6E7B               	movwf	_current_func_set^0,c
  3893  001878  0012               	return		;funcret
  3894  00187A                     __end_of_LCD_Init_ECE376:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _LCD_write_instr_byte_4bit *****************
  3898 ;; Defined at:
  3899 ;;		line 175 in file "src/lcd_driver.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  instr           1    wreg     unsigned char 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  instr           1    3[COMRAM] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        2 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    2
  3920 ;; This function calls:
  3921 ;;		_LCD_enable_toggle
  3922 ;; This function is called by:
  3923 ;;		_LCD_Init_ECE376
  3924 ;;		_LCD_clear_display
  3925 ;;		_LCD_set_cursor_position
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text25
  3930  001E0C                     __ptext25:
  3931                           	callstack 0
  3932  001E0C                     _LCD_write_instr_byte_4bit:
  3933                           	callstack 27
  3934                           
  3935                           ;incstack = 0
  3936                           ;LCD_write_instr_byte_4bit@instr stored from wreg
  3937  001E0C  6E04               	movwf	LCD_write_instr_byte_4bit@instr^0,c
  3938                           
  3939                           ;src/lcd_driver.c: 177:     TRISC &= 0xFC; TRISD &= ~(1u << 1);
  3940  001E0E  0EFC               	movlw	252
  3941  001E10  1694               	andwf	148,f,c	;volatile
  3942  001E12  9295               	bcf	149,1,c	;volatile
  3943                           
  3944                           ;src/lcd_driver.c: 178:     (TRISD &= 0x0Fu);
  3945  001E14  0E0F               	movlw	15
  3946  001E16  1695               	andwf	149,f,c	;volatile
  3947                           
  3948                           ;src/lcd_driver.c: 179:     (LATCbits.LATC0 = 0u);
  3949  001E18  908B               	bcf	139,0,c	;volatile
  3950                           
  3951                           ;src/lcd_driver.c: 180:     (LATCbits.LATC1 = 0u);
  3952  001E1A  928B               	bcf	139,1,c	;volatile
  3953                           
  3954                           ;src/lcd_driver.c: 183:     PORTD = (PORTD & 0x0F) | (instr & 0xF0);
  3955  001E1C  C004  F003         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  3956  001E20  0EF0               	movlw	240
  3957  001E22  1603               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  3958  001E24  5083               	movf	131,w,c	;volatile
  3959  001E26  0B0F               	andlw	15
  3960  001E28  1003               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  3961  001E2A  6E83               	movwf	131,c	;volatile
  3962                           
  3963                           ;src/lcd_driver.c: 184:     LCD_enable_toggle();
  3964  001E2C  ECFB  F00C         	call	_LCD_enable_toggle	;wreg free
  3965                           
  3966                           ;src/lcd_driver.c: 185:     PORTD = (PORTD & 0x0F) | ((instr<<4) & 0xF0);
  3967  001E30  C004  F003         	movff	LCD_write_instr_byte_4bit@instr,??_LCD_write_instr_byte_4bit
  3968  001E34  3A03               	swapf	??_LCD_write_instr_byte_4bit^0,f,c
  3969  001E36  0EF0               	movlw	240
  3970  001E38  1603               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  3971  001E3A  0EF0               	movlw	240
  3972  001E3C  1603               	andwf	??_LCD_write_instr_byte_4bit^0,f,c
  3973  001E3E  5083               	movf	131,w,c	;volatile
  3974  001E40  0B0F               	andlw	15
  3975  001E42  1003               	iorwf	??_LCD_write_instr_byte_4bit^0,w,c
  3976  001E44  6E83               	movwf	131,c	;volatile
  3977                           
  3978                           ;src/lcd_driver.c: 186:     LCD_enable_toggle();
  3979  001E46  ECFB  F00C         	call	_LCD_enable_toggle	;wreg free
  3980                           
  3981                           ;src/lcd_driver.c: 188:     _delay((unsigned long)((10)*(40000000u/4000.0)));
  3982  001E4A  0E82               	movlw	130
  3983  001E4C  6E03               	movwf	??_LCD_write_instr_byte_4bit^0,c
  3984  001E4E  0EDE               	movlw	222
  3985  001E50                     u1667:
  3986  001E50  2EE8               	decfsz	wreg,f,c
  3987  001E52  D7FE               	bra	u1667
  3988  001E54  2E03               	decfsz	??_LCD_write_instr_byte_4bit^0,f,c
  3989  001E56  D7FC               	bra	u1667
  3990  001E58  0012               	return		;funcret
  3991  001E5A                     __end_of_LCD_write_instr_byte_4bit:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _LCD_enable_toggle *****************
  3995 ;; Defined at:
  3996 ;;		line 45 in file "src/lcd_driver.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        2 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_LCD_write_data_byte_4bit
  4021 ;;		_LCD_write_instr_byte_4bit
  4022 ;;		_LCD_write_instr_byte_8bit
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text26
  4027  0019F6                     __ptext26:
  4028                           	callstack 0
  4029  0019F6                     _LCD_enable_toggle:
  4030                           	callstack 28
  4031                           
  4032                           ;src/lcd_driver.c: 46:     switch(CURRENT_DISP){
  4033                           
  4034                           ;incstack = 0
  4035  0019F6  D040               	goto	l2054
  4036  0019F8                     l66:
  4037                           
  4038                           ;src/lcd_driver.c: 49:             (LATDbits.LATD1 = 0u);
  4039  0019F8  928C               	bcf	140,1,c	;volatile
  4040                           
  4041                           ;src/lcd_driver.c: 50:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4042  0019FA  0E06               	movlw	6
  4043  0019FC                     u1677:
  4044  0019FC  2EE8               	decfsz	wreg,f,c
  4045  0019FE  D7FE               	bra	u1677
  4046  001A00  D000               	nop2	
  4047                           
  4048                           ;src/lcd_driver.c: 51:             (LATDbits.LATD1 = 1u);
  4049  001A02  828C               	bsf	140,1,c	;volatile
  4050                           
  4051                           ;src/lcd_driver.c: 52:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4052  001A04  0E06               	movlw	6
  4053  001A06                     u1687:
  4054  001A06  2EE8               	decfsz	wreg,f,c
  4055  001A08  D7FE               	bra	u1687
  4056  001A0A  D000               	nop2	
  4057                           
  4058                           ;src/lcd_driver.c: 53:             (LATDbits.LATD1 = 0u);
  4059  001A0C  928C               	bcf	140,1,c	;volatile
  4060                           
  4061                           ;src/lcd_driver.c: 54:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4062  001A0E  0E06               	movlw	6
  4063  001A10                     u1697:
  4064  001A10  2EE8               	decfsz	wreg,f,c
  4065  001A12  D7FE               	bra	u1697
  4066  001A14  D000               	nop2	
  4067                           
  4068                           ;src/lcd_driver.c: 55:             break;
  4069  001A16  0012               	return	
  4070  001A18                     l68:
  4071                           
  4072                           ;src/lcd_driver.c: 58:             (LATDbits.LATD1 = 0u);
  4073  001A18  928C               	bcf	140,1,c	;volatile
  4074                           
  4075                           ;src/lcd_driver.c: 59:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  4076  001A1A  0E03               	movlw	3
  4077  001A1C                     u1707:
  4078  001A1C  2EE8               	decfsz	wreg,f,c
  4079  001A1E  D7FE               	bra	u1707
  4080  001A20  F000               	nop	
  4081                           
  4082                           ;src/lcd_driver.c: 60:             (LATDbits.LATD1 = 1u);
  4083  001A22  828C               	bsf	140,1,c	;volatile
  4084                           
  4085                           ;src/lcd_driver.c: 61:             _delay((unsigned long)((1u)*(40000000u/4000000.0)));
  4086  001A24  0E03               	movlw	3
  4087  001A26                     u1717:
  4088  001A26  2EE8               	decfsz	wreg,f,c
  4089  001A28  D7FE               	bra	u1717
  4090  001A2A  F000               	nop	
  4091                           
  4092                           ;src/lcd_driver.c: 62:             (LATDbits.LATD1 = 0u);
  4093  001A2C  928C               	bcf	140,1,c	;volatile
  4094                           
  4095                           ;src/lcd_driver.c: 63:             _delay((unsigned long)((100u)*(40000000u/4000000.0)))
      +                          ;
  4096  001A2E  0EC8               	movlw	200
  4097  001A30                     u1727:
  4098  001A30  D000               	nop2	
  4099  001A32  2EE8               	decfsz	wreg,f,c
  4100  001A34  D7FD               	bra	u1727
  4101                           
  4102                           ;src/lcd_driver.c: 64:             break;
  4103  001A36  0012               	return	
  4104  001A38                     l69:
  4105                           
  4106                           ;src/lcd_driver.c: 67:             (LATDbits.LATD1 = 0u);
  4107  001A38  928C               	bcf	140,1,c	;volatile
  4108                           
  4109                           ;src/lcd_driver.c: 68:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4110  001A3A  0E06               	movlw	6
  4111  001A3C                     u1737:
  4112  001A3C  2EE8               	decfsz	wreg,f,c
  4113  001A3E  D7FE               	bra	u1737
  4114  001A40  D000               	nop2	
  4115                           
  4116                           ;src/lcd_driver.c: 69:             (LATDbits.LATD1 = 1u);
  4117  001A42  828C               	bsf	140,1,c	;volatile
  4118                           
  4119                           ;src/lcd_driver.c: 70:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4120  001A44  0E06               	movlw	6
  4121  001A46                     u1747:
  4122  001A46  2EE8               	decfsz	wreg,f,c
  4123  001A48  D7FE               	bra	u1747
  4124  001A4A  D000               	nop2	
  4125                           
  4126                           ;src/lcd_driver.c: 71:             (LATDbits.LATD1 = 0u);
  4127  001A4C  928C               	bcf	140,1,c	;volatile
  4128                           
  4129                           ;src/lcd_driver.c: 72:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4130  001A4E  0E06               	movlw	6
  4131  001A50                     u1757:
  4132  001A50  2EE8               	decfsz	wreg,f,c
  4133  001A52  D7FE               	bra	u1757
  4134  001A54  D000               	nop2	
  4135                           
  4136                           ;src/lcd_driver.c: 73:             break;
  4137  001A56  0012               	return	
  4138  001A58                     l70:
  4139                           
  4140                           ;src/lcd_driver.c: 76:             (LATDbits.LATD1 = 0u);
  4141  001A58  928C               	bcf	140,1,c	;volatile
  4142                           
  4143                           ;src/lcd_driver.c: 77:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4144  001A5A  0E06               	movlw	6
  4145  001A5C                     u1767:
  4146  001A5C  2EE8               	decfsz	wreg,f,c
  4147  001A5E  D7FE               	bra	u1767
  4148  001A60  D000               	nop2	
  4149                           
  4150                           ;src/lcd_driver.c: 78:             (LATDbits.LATD1 = 1u);
  4151  001A62  828C               	bsf	140,1,c	;volatile
  4152                           
  4153                           ;src/lcd_driver.c: 79:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4154  001A64  0E06               	movlw	6
  4155  001A66                     u1777:
  4156  001A66  2EE8               	decfsz	wreg,f,c
  4157  001A68  D7FE               	bra	u1777
  4158  001A6A  D000               	nop2	
  4159                           
  4160                           ;src/lcd_driver.c: 80:             (LATDbits.LATD1 = 0u);
  4161  001A6C  928C               	bcf	140,1,c	;volatile
  4162                           
  4163                           ;src/lcd_driver.c: 81:             _delay((unsigned long)((2u)*(40000000u/4000000.0)));
  4164  001A6E  0E06               	movlw	6
  4165  001A70                     u1787:
  4166  001A70  2EE8               	decfsz	wreg,f,c
  4167  001A72  D7FE               	bra	u1787
  4168  001A74  D000               	nop2	
  4169                           
  4170                           ;src/lcd_driver.c: 82:             break;
  4171  001A76  0012               	return	
  4172  001A78                     l2054:
  4173  001A78  507A               	movf	_CURRENT_DISP^0,w,c
  4174  001A7A  6E01               	movwf	??_LCD_enable_toggle^0,c
  4175  001A7C  6A02               	clrf	(??_LCD_enable_toggle+1)^0,c
  4176                           
  4177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4178                           ; Switch size 1, requested type "simple"
  4179                           ; Number of cases is 1, Range of values is 0 to 0
  4180                           ; switch strategies available:
  4181                           ; Name         Instructions Cycles
  4182                           ; simple_byte            4     3 (average)
  4183                           ;	Chosen strategy is simple_byte
  4184  001A7E  5002               	movf	(??_LCD_enable_toggle+1)^0,w,c
  4185  001A80  0A00               	xorlw	0	; case 0
  4186  001A82  A4D8               	btfss	status,2,c
  4187  001A84  0012               	return	
  4188                           
  4189                           ; Switch size 1, requested type "simple"
  4190                           ; Number of cases is 4, Range of values is 0 to 3
  4191                           ; switch strategies available:
  4192                           ; Name         Instructions Cycles
  4193                           ; simple_byte           13     7 (average)
  4194                           ;	Chosen strategy is simple_byte
  4195  001A86  5001               	movf	??_LCD_enable_toggle^0,w,c
  4196  001A88  0A00               	xorlw	0	; case 0
  4197  001A8A  B4D8               	btfsc	status,2,c
  4198  001A8C  D7B5               	goto	l66
  4199  001A8E  0A01               	xorlw	1	; case 1
  4200  001A90  B4D8               	btfsc	status,2,c
  4201  001A92  D7C2               	goto	l68
  4202  001A94  0A03               	xorlw	3	; case 2
  4203  001A96  B4D8               	btfsc	status,2,c
  4204  001A98  D7CF               	goto	l69
  4205  001A9A  0A01               	xorlw	1	; case 3
  4206  001A9C  A4D8               	btfss	status,2,c
  4207  001A9E  0012               	return	
  4208  001AA0  D7DB               	goto	l70
  4209  001AA2                     __end_of_LCD_enable_toggle:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function _CCP2_Capture_Init_Default *****************
  4213 ;; Defined at:
  4214 ;;		line 71 in file "src/ccp.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;Total ram usage:        0 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    1
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_main
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text27
  4243  00204E                     __ptext27:
  4244                           	callstack 0
  4245  00204E                     _CCP2_Capture_Init_Default:
  4246                           	callstack 29
  4247                           
  4248                           ;src/ccp.c: 72:     (CCP2CON = 0x5);
  4249                           
  4250                           ;incstack = 0
  4251  00204E  0E05               	movlw	5
  4252  002050  6EBA               	movwf	186,c	;volatile
  4253                           
  4254                           ;src/ccp.c: 73:     (T3CON &= ~0x48);
  4255  002052  0EB7               	movlw	183
  4256  002054  16B1               	andwf	177,f,c	;volatile
  4257                           
  4258                           ;src/ccp.c: 74:     (PIE2bits.CCP2IE = 1u);
  4259  002056  80A0               	bsf	160,0,c	;volatile
  4260  002058  0012               	return		;funcret
  4261  00205A                     __end_of_CCP2_Capture_Init_Default:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _CCP1_Capture_Init_Default *****************
  4265 ;; Defined at:
  4266 ;;		line 66 in file "src/ccp.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text28
  4295  00205A                     __ptext28:
  4296                           	callstack 0
  4297  00205A                     _CCP1_Capture_Init_Default:
  4298                           	callstack 29
  4299                           
  4300                           ;src/ccp.c: 67:     (CCP1CON = 0x5);
  4301                           
  4302                           ;incstack = 0
  4303  00205A  0E05               	movlw	5
  4304  00205C  6EBD               	movwf	189,c	;volatile
  4305                           
  4306                           ;src/ccp.c: 68:     (T3CON &= ~0x48);
  4307  00205E  0EB7               	movlw	183
  4308  002060  16B1               	andwf	177,f,c	;volatile
  4309                           
  4310                           ;src/ccp.c: 69:     (PIE1bits.CCP1IE = 1u);
  4311  002062  849D               	bsf	157,2,c	;volatile
  4312  002064  0012               	return		;funcret
  4313  002066                     __end_of_CCP1_Capture_Init_Default:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _isr *****************
  4317 ;; Defined at:
  4318 ;;		line 160 in file "ece376_hw9_ccp_capt.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		Interrupt level 2
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	intcode
  4346  000008                     __pintcode:
  4347                           	callstack 0
  4348  000008                     _isr:
  4349                           	callstack 22
  4350                           
  4351                           ;incstack = 0
  4352  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4353  00000A  EDD2  F00D         	call	int_func,f	;refresh shadow registers
  4354                           
  4355                           	psect	intcode_body
  4356  001BA4                     __pintcode_body:
  4357                           	callstack 22
  4358  001BA4                     int_func:
  4359                           	callstack 22
  4360  001BA4  0006               	pop		; remove dummy address from shadow register refresh
  4361                           
  4362                           ;ece376_hw9_ccp_capt.c: 166:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  4363  001BA6  B09E               	btfsc	158,0,c	;volatile
  4364  001BA8  A09D               	btfss	157,0,c	;volatile
  4365  001BAA  D009               	goto	i2l2372
  4366                           
  4367                           ;ece376_hw9_ccp_capt.c: 167:         elapsed_time += 0x10000u;
  4368  001BAC  0E00               	movlw	0
  4369  001BAE  266C               	addwf	_elapsed_time^0,f,c	;volatile
  4370  001BB0  0E00               	movlw	0
  4371  001BB2  226D               	addwfc	(_elapsed_time+1)^0,f,c	;volatile
  4372  001BB4  0E01               	movlw	1
  4373  001BB6  226E               	addwfc	(_elapsed_time+2)^0,f,c	;volatile
  4374  001BB8  0E00               	movlw	0
  4375  001BBA  226F               	addwfc	(_elapsed_time+3)^0,f,c	;volatile
  4376                           
  4377                           ;ece376_hw9_ccp_capt.c: 169:         (PIR1bits.TMR1IF = 0u);
  4378  001BBC  909E               	bcf	158,0,c	;volatile
  4379  001BBE                     i2l2372:
  4380                           
  4381                           ;ece376_hw9_ccp_capt.c: 177:     if(PIR1bits.CCP1IF && PIE1bits.CCP1IE){
  4382  001BBE  B49E               	btfsc	158,2,c	;volatile
  4383  001BC0  A49D               	btfss	157,2,c	;volatile
  4384  001BC2  D01D               	goto	i2l2384
  4385                           
  4386                           ;ece376_hw9_ccp_capt.c: 178:         time2 = elapsed_time + (uint32_t) CCPR1;
  4387  001BC4  50BE               	movf	190,w,c	;volatile
  4388  001BC6  246C               	addwf	_elapsed_time^0,w,c	;volatile
  4389  001BC8  0100               	movlb	0	; () banked
  4390  001BCA  6F8A               	movwf	_time2& (0+255),b	;volatile
  4391  001BCC  50BF               	movf	191,w,c	;volatile
  4392  001BCE  206D               	addwfc	(_elapsed_time+1)^0,w,c	;volatile
  4393  001BD0  6F8B               	movwf	(_time2+1)& (0+255),b	;volatile
  4394  001BD2  0E00               	movlw	0
  4395  001BD4  206E               	addwfc	(_elapsed_time+2)^0,w,c	;volatile
  4396  001BD6  6F8C               	movwf	(_time2+2)& (0+255),b	;volatile
  4397  001BD8  0E00               	movlw	0
  4398  001BDA  206F               	addwfc	(_elapsed_time+3)^0,w,c	;volatile
  4399  001BDC  6F8D               	movwf	(_time2+3)& (0+255),b	;volatile
  4400                           
  4401                           ;ece376_hw9_ccp_capt.c: 179:         reaction_time = time2 - time1;
  4402  001BDE  518E               	movf	_time1& (0+255),w,b	;volatile
  4403  001BE0  5D8A               	subwf	_time2& (0+255),w,b	;volatile
  4404  001BE2  6E68               	movwf	_reaction_time^0,c	;volatile
  4405  001BE4  518F               	movf	(_time1+1)& (0+255),w,b	;volatile
  4406  001BE6  598B               	subwfb	(_time2+1)& (0+255),w,b	;volatile
  4407  001BE8  6E69               	movwf	(_reaction_time+1)^0,c	;volatile
  4408  001BEA  5190               	movf	(_time1+2)& (0+255),w,b	;volatile
  4409  001BEC  598C               	subwfb	(_time2+2)& (0+255),w,b	;volatile
  4410  001BEE  6E6A               	movwf	(_reaction_time+2)^0,c	;volatile
  4411  001BF0  5191               	movf	(_time1+3)& (0+255),w,b	;volatile
  4412  001BF2  598D               	subwfb	(_time2+3)& (0+255),w,b	;volatile
  4413  001BF4  6E6B               	movwf	(_reaction_time+3)^0,c	;volatile
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;ece376_hw9_ccp_capt.c: 181:   game_done_flag = 0x01u;
  4417  001BF6  0E01               	movlw	1
  4418  001BF8  6E76               	movwf	_game_done_flag^0,c	;volatile
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;ece376_hw9_ccp_capt.c: 182:         T1CON &= ~0x01;
  4422  001BFA  90CD               	bcf	205,0,c	;volatile
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;ece376_hw9_ccp_capt.c: 185:   (PIR1bits.CCP1IF = 0u);
  4426  001BFC  949E               	bcf	158,2,c	;volatile
  4427  001BFE                     i2l2384:
  4428                           
  4429                           ;ece376_hw9_ccp_capt.c: 192:     if(PIR2bits.CCP2IF && PIE2bits.CCP2IE){
  4430  001BFE  B0A1               	btfsc	161,0,c	;volatile
  4431  001C00  A0A0               	btfss	160,0,c	;volatile
  4432  001C02  D00E               	goto	i2l283
  4433                           
  4434                           ;ece376_hw9_ccp_capt.c: 193:         time1 = elapsed_time + (uint32_t) CCPR2;
  4435  001C04  50BB               	movf	187,w,c	;volatile
  4436  001C06  246C               	addwf	_elapsed_time^0,w,c	;volatile
  4437  001C08  0100               	movlb	0	; () banked
  4438  001C0A  6F8E               	movwf	_time1& (0+255),b	;volatile
  4439  001C0C  50BC               	movf	188,w,c	;volatile
  4440  001C0E  206D               	addwfc	(_elapsed_time+1)^0,w,c	;volatile
  4441  001C10  6F8F               	movwf	(_time1+1)& (0+255),b	;volatile
  4442  001C12  0E00               	movlw	0
  4443  001C14  206E               	addwfc	(_elapsed_time+2)^0,w,c	;volatile
  4444  001C16  6F90               	movwf	(_time1+2)& (0+255),b	;volatile
  4445  001C18  0E00               	movlw	0
  4446  001C1A  206F               	addwfc	(_elapsed_time+3)^0,w,c	;volatile
  4447  001C1C  6F91               	movwf	(_time1+3)& (0+255),b	;volatile
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;ece376_hw9_ccp_capt.c: 196:   (PIR2bits.CCP2IF = 0u);
  4451  001C1E  90A1               	bcf	161,0,c	;volatile
  4452  001C20                     i2l283:
  4453  001C20  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4454  001C22  0011               	retfie		f
  4455  001C24                     __end_of_isr:
  4456                           	callstack 0
  4457                           
  4458                           	psect	rparam
  4459  0000                     
  4460                           	psect	temp
  4461  00007F                     btemp:
  4462                           	callstack 0
  4463  00007F                     	ds	1
  4464  0000                     int$flags	set	btemp
  4465  0000                     wtemp8	set	btemp+1
  4466  0000                     ttemp5	set	btemp+1
  4467  0000                     ttemp6	set	btemp+4
  4468  0000                     ttemp7	set	btemp+8
  4469                           
  4470                           	psect	idloc
  4471                           
  4472                           ;Config register IDLOC0 @ 0x200000
  4473                           ;	unspecified, using default values
  4474  200000                     	org	2097152
  4475  200000  FF                 	db	255
  4476                           
  4477                           ;Config register IDLOC1 @ 0x200001
  4478                           ;	unspecified, using default values
  4479  200001                     	org	2097153
  4480  200001  FF                 	db	255
  4481                           
  4482                           ;Config register IDLOC2 @ 0x200002
  4483                           ;	unspecified, using default values
  4484  200002                     	org	2097154
  4485  200002  FF                 	db	255
  4486                           
  4487                           ;Config register IDLOC3 @ 0x200003
  4488                           ;	unspecified, using default values
  4489  200003                     	org	2097155
  4490  200003  FF                 	db	255
  4491                           
  4492                           ;Config register IDLOC4 @ 0x200004
  4493                           ;	unspecified, using default values
  4494  200004                     	org	2097156
  4495  200004  FF                 	db	255
  4496                           
  4497                           ;Config register IDLOC5 @ 0x200005
  4498                           ;	unspecified, using default values
  4499  200005                     	org	2097157
  4500  200005  FF                 	db	255
  4501                           
  4502                           ;Config register IDLOC6 @ 0x200006
  4503                           ;	unspecified, using default values
  4504  200006                     	org	2097158
  4505  200006  FF                 	db	255
  4506                           
  4507                           ;Config register IDLOC7 @ 0x200007
  4508                           ;	unspecified, using default values
  4509  200007                     	org	2097159
  4510  200007  FF                 	db	255
  4511                           
  4512                           	psect	config
  4513                           
  4514                           ; Padding undefined space
  4515  300000                     	org	3145728
  4516  300000  FF                 	db	255
  4517                           
  4518                           ;Config register CONFIG1H @ 0x300001
  4519                           ;	Oscillator Selection bits
  4520                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4521                           ;	Fail-Safe Clock Monitor Enable bit
  4522                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4523                           ;	Internal/External Oscillator Switchover bit
  4524                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4525  300001                     	org	3145729
  4526  300001  06                 	db	6
  4527                           
  4528                           ;Config register CONFIG2L @ 0x300002
  4529                           ;	Power-up Timer Enable bit
  4530                           ;	PWRT = OFF, PWRT disabled
  4531                           ;	Brown-out Reset Enable bits
  4532                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4533                           ;	Brown Out Reset Voltage bits
  4534                           ;	BORV = 3, Minimum setting
  4535  300002                     	org	3145730
  4536  300002  1F                 	db	31
  4537                           
  4538                           ;Config register CONFIG2H @ 0x300003
  4539                           ;	Watchdog Timer Enable bit
  4540                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4541                           ;	Watchdog Timer Postscale Select bits
  4542                           ;	WDTPS = 32768, 1:32768
  4543  300003                     	org	3145731
  4544  300003  1E                 	db	30
  4545                           
  4546                           ; Padding undefined space
  4547  300004                     	org	3145732
  4548  300004  FF                 	db	255
  4549                           
  4550                           ;Config register CONFIG3H @ 0x300005
  4551                           ;	CCP2 MUX bit
  4552                           ;	CCP2MX = PORTBE, CCP2 input/output is multiplexed with RB3
  4553                           ;	PORTB A/D Enable bit
  4554                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4555                           ;	Low-Power Timer1 Oscillator Enable bit
  4556                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4557                           ;	MCLR Pin Enable bit
  4558                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4559  300005                     	org	3145733
  4560  300005  80                 	db	128
  4561                           
  4562                           ;Config register CONFIG4L @ 0x300006
  4563                           ;	Stack Full/Underflow Reset Enable bit
  4564                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4565                           ;	Single-Supply ICSP Enable bit
  4566                           ;	LVP = OFF, Single-Supply ICSP disabled
  4567                           ;	Extended Instruction Set Enable bit
  4568                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4569                           ;	Background Debugger Enable bit
  4570                           ;	DEBUG = 0x1, unprogrammed default
  4571  300006                     	org	3145734
  4572  300006  81                 	db	129
  4573                           
  4574                           ; Padding undefined space
  4575  300007                     	org	3145735
  4576  300007  FF                 	db	255
  4577                           
  4578                           ;Config register CONFIG5L @ 0x300008
  4579                           ;	Code Protection bit
  4580                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4581                           ;	Code Protection bit
  4582                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4583                           ;	Code Protection bit
  4584                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4585                           ;	Code Protection bit
  4586                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4587  300008                     	org	3145736
  4588  300008  0F                 	db	15
  4589                           
  4590                           ;Config register CONFIG5H @ 0x300009
  4591                           ;	Boot Block Code Protection bit
  4592                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4593                           ;	Data EEPROM Code Protection bit
  4594                           ;	CPD = OFF, Data EEPROM not code-protected
  4595  300009                     	org	3145737
  4596  300009  C0                 	db	192
  4597                           
  4598                           ;Config register CONFIG6L @ 0x30000A
  4599                           ;	Write Protection bit
  4600                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4601                           ;	Write Protection bit
  4602                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4603                           ;	Write Protection bit
  4604                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4605                           ;	Write Protection bit
  4606                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4607  30000A                     	org	3145738
  4608  30000A  0F                 	db	15
  4609                           
  4610                           ;Config register CONFIG6H @ 0x30000B
  4611                           ;	Configuration Register Write Protection bit
  4612                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4613                           ;	Boot Block Write Protection bit
  4614                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4615                           ;	Data EEPROM Write Protection bit
  4616                           ;	WRTD = OFF, Data EEPROM not write-protected
  4617  30000B                     	org	3145739
  4618  30000B  E0                 	db	224
  4619                           
  4620                           ;Config register CONFIG7L @ 0x30000C
  4621                           ;	Table Read Protection bit
  4622                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4623                           ;	Table Read Protection bit
  4624                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4625                           ;	Table Read Protection bit
  4626                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4627                           ;	Table Read Protection bit
  4628                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4629  30000C                     	org	3145740
  4630  30000C  0F                 	db	15
  4631                           
  4632                           ;Config register CONFIG7H @ 0x30000D
  4633                           ;	Boot Block Table Read Protection bit
  4634                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4635  30000D                     	org	3145741
  4636  30000D  40                 	db	64
  4637                           tosu	equ	0xFFF
  4638                           tosh	equ	0xFFE
  4639                           tosl	equ	0xFFD
  4640                           stkptr	equ	0xFFC
  4641                           pclatu	equ	0xFFB
  4642                           pclath	equ	0xFFA
  4643                           pcl	equ	0xFF9
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           prodh	equ	0xFF4
  4649                           prodl	equ	0xFF3
  4650                           indf0	equ	0xFEF
  4651                           postinc0	equ	0xFEE
  4652                           postdec0	equ	0xFED
  4653                           preinc0	equ	0xFEC
  4654                           plusw0	equ	0xFEB
  4655                           fsr0h	equ	0xFEA
  4656                           fsr0l	equ	0xFE9
  4657                           wreg	equ	0xFE8
  4658                           indf1	equ	0xFE7
  4659                           postinc1	equ	0xFE6
  4660                           postdec1	equ	0xFE5
  4661                           preinc1	equ	0xFE4
  4662                           plusw1	equ	0xFE3
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           bsr	equ	0xFE0
  4666                           indf2	equ	0xFDF
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           preinc2	equ	0xFDC
  4670                           plusw2	equ	0xFDB
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    34
    Data        4
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    103     126
    BANK0           128      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> result_msg(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(COMRAM[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1130_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> result_msg(BANK0[17]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> result_msg(BANK0[17]), 

    sp__hex_to_bit_string	PTR unsigned char  size(1) Largest target is 9
		 -> hex_to_bit_string@bit_string(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->___lodiv
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    ___lwdiv->___llmod
    ___lldiv->___llmod
    _LCD_write_data_byte_4bit->_LCD_enable_toggle
    _LCD_set_cursor_position->_LCD_write_instr_byte_4bit
    _LCD_set_cursor_position->_LCD_write_instr_byte_8bit
    _LCD_clear_display->_LCD_write_instr_byte_4bit
    _LCD_clear_display->_LCD_write_instr_byte_8bit
    _LCD_write_instr_byte_8bit->_LCD_enable_toggle
    _LCD_Init_ECE376->_LCD_write_instr_byte_4bit
    _LCD_write_instr_byte_4bit->_LCD_enable_toggle

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   10234
                                             93 COMRAM    10    10      0
          _CCP1_Capture_Init_Default
          _CCP2_Capture_Init_Default
                    _LCD_Init_ECE376
                  _LCD_clear_display
            _LCD_set_cursor_position
           _LCD_write_data_byte_4bit
                _Timer1_Init_Default
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     8      8    7457
                                             77 COMRAM    16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    7104
                                             73 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    40      3    6743
                                             56 COMRAM    17    14      3
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                31    22      9    3759
                                             25 COMRAM    31    22      9
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     5      4    2709
                                             13 COMRAM     9     5      4
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1235
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              9 COMRAM     7     3      4
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     741
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     592
                                              9 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init_Default                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_data_byte_4bit                             2     2      0      44
                                              2 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor_position                              3     2      1     681
                                              4 COMRAM     3     2      1
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (1) _LCD_clear_display                                    1     1      0      66
                                              4 COMRAM     1     1      0
          _LCD_write_instr_byte_4bit
          _LCD_write_instr_byte_8bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_8bit                            2     2      0      22
                                              2 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (1) _LCD_Init_ECE376                                      2     2      0      44
                                              4 COMRAM     2     2      0
          _LCD_write_instr_byte_4bit
 ---------------------------------------------------------------------------------
 (2) _LCD_write_instr_byte_4bit                            2     2      0      44
                                              2 COMRAM     2     2      0
                  _LCD_enable_toggle
 ---------------------------------------------------------------------------------
 (2) _LCD_enable_toggle                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CCP2_Capture_Init_Default                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Capture_Init_Default                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Capture_Init_Default
   _CCP2_Capture_Init_Default
   _LCD_Init_ECE376
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
   _LCD_clear_display
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_set_cursor_position
     _LCD_write_instr_byte_4bit
       _LCD_enable_toggle
     _LCD_write_instr_byte_8bit
       _LCD_enable_toggle
   _LCD_write_data_byte_4bit
     _LCD_enable_toggle
   _Timer1_Init_Default
   ___lldiv
     ___llmod (ARG)
   ___llmod
   ___lwdiv
     ___llmod (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      55       5       66.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     67      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      34        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Nov 11 02:46:17 2021

        ?_CCP1_Capture_Init_Default 0001                                  l70 1A58  
                                l66 19F8                                  l68 1A18  
                                l69 1A38                 ___wmul@multiplicand 0003  
                               l344 1B12                                 l808 1DB4  
                               l737 1CF6                                 l755 1926  
                               l765 19D4                                 u821 1880  
                               u840 18B8                                 u930 1FB2  
                               u770 1B30                                 u940 1FB4  
                               u870 197A                                 u790 1B72  
                               u960 1F18                                 u980 14CA  
                               _pad 1C24                                 _isr 0008  
                               wreg 000FE8                  _current_entry_mode 007C  
         _CCP2_Capture_Init_Default 204E                                l1024 1C4A  
                              l2002 16C2                                l1034 14D4  
                              l2012 172A                                l2004 16CA  
                              l1036 14DC                                l2006 16CE  
                              l2008 16F6                                l2104 1474  
                              l2114 1490                                l2108 147E  
                              l2054 1A78                                l2310 1AC4  
                              l1094 178A                                l2312 1AD0  
                              l2080 137A                                l2250 2016  
                              l2322 1B04                                l2330 1CB4  
                              l2082 1382                                l2162 1EB0  
                              l2252 201C                                l2260 1D18  
                              l2332 1CC0                                l2164 1ECA  
                              l2350 1D8A                                l2078 1362  
                              l2502 1284                                l2272 1D3C  
                              l2360 1DAA                                l2282 1D5E  
                              l2266 1D28                                l2338 1CE8  
                              l2098 1444                                l2418 1060  
                              l2284 1D66                                l2348 1D82  
                              l1900 1976                                l2460 10DE  
                              l2444 10C0                                l1840 1B38  
                              l1920 1C54                                l1906 19BE  
                              l1850 1F64                                l1914 1C34  
                              l2474 1130                                l1860 2034  
                              l1924 1C68                                l1854 1F76  
                              l1918 1C42                                l1944 1F1C  
                              l1880 18B4                                l1928 1C8C  
                              l1960 1514                                l2488 1258  
                              l1890 1910                                l1858 2032  
                              l1970 15FC                                l1878 18A0  
                              ?_pad 000E                                l1986 166A  
                              l1898 1962                                l1996 16B2  
                              l1988 166C                                ?_isr 0001  
                              STR_1 1023                                u1010 1626  
                              u1011 1624                                u1020 1634  
                              u1030 1638                                u1050 16AE  
                              u1140 13B8                                u1310 1AD4  
                              u1070 175A                                u1150 13BA  
                              u1080 175C                                u1160 13C6  
                              u1340 1CC4                                u1370 1D8E  
                              u1517 108A                                u1607 17C8  
                              u1527 1106                                u1617 17E0  
                              u1537 1120                                u1707 1A1C  
                              u1627 17F8                                u1547 12A4  
                              u1717 1A26                                u1637 1810  
                              u1557 12BC                                u1727 1A30  
                              u1647 1822                                u1567 1E02  
                              u1737 1A3C                                u1657 1854  
                              u1577 2022                                u1747 1A46  
                              u1667 1E50                                u1587 1FD8  
                              u1757 1A50                                u1677 19FC  
                              u1597 17B0                                u1767 1A5C  
                              u1687 1A06                                u1777 1A66  
                              u1697 1A10                                u1787 1A70  
                              _dbuf 009B                                _atoi 1658  
                              _main 1036                                _prec 0072  
                              _nout 0092                                pad@i 0013  
                              pad@p 0010                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 0015  
                              fsr2l 000FD9                                btemp 007F  
                              _utoa 14B8                                prodh 000FF4  
                              prodl 000FF3                                start 000E  
                      ___param_bank 000000   __end_of_CCP1_Capture_Init_Default 2066  
                             ??_pad 0012                               ??_isr 0001  
           __end_of_LCD_Init_ECE376 187A                               ?_atoi 0008  
                             ?_main 0001                               _CCPR1 000FBE  
                             _CCPR2 000FBB                     __end_of___lldiv 1B24  
                             ?_utoa 001A                     __end_of___lodiv 1948  
                             _T1CON 000FCD                     __end_of___llmod 1D08  
                             _T3CON 000FB1                     __end_of___lomod 19F6  
      LCD_write_uint32_number@F2549 0080                     __end_of___lwdiv 1DBE  
                             i2l283 1C20                        vfpfcnvrt@fmt 003A  
                      vfpfcnvrt@llu 0040                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95   LCD_set_cursor_position@ddram_addr 0006  
          __end_of_result_msg_title 1023                               _flags 0074  
                             _fputc 1B24                               _fputs 1F5A  
                   __end_of_isdigit 1FBA                               _time1 008E  
                             _time2 008A                               atoi@n 0015  
                             pad@fp 000E                               atoi@s 0008  
                             _width 0070                               _putch 2072  
                             main@i 0064    __size_of_LCD_set_cursor_position 0064  
                   __end_of_isspace 1F24                               tablat 000FF5  
      LCD_write_data_byte_4bit@data 0004                               ttemp5 0080  
                             ttemp6 0083                               ttemp7 0087  
                             utoa@d 001B                               utoa@i 0037  
                             utoa@n 002F                               utoa@p 002B  
                             utoa@w 002D                               status 000FD8  
                             wtemp8 0080                     __end_of_sprintf 1F5A  
       LCD_set_cursor_position@line 0007                    ___lodiv@dividend 0001  
       __end_of_Timer1_Init_Default 206E                     __initialization 1E5A  
                      __end_of_atoi 1794                        __end_of_main 12E6  
                      __end_of_utoa 1658                              ??_atoi 000A  
                            ??_main 005E         ??_LCD_write_instr_byte_4bit 0003  
       ??_LCD_write_instr_byte_8bit 0003                              ??_utoa 0023  
                     __activetblptr 000002                    ___lodiv@quotient 0011  
                            _ADCON1 000FC1                              ?_fputc 0001  
                  ___llmod@dividend 0001                              ?_fputs 0009  
                            ?_putch 0001                              i2l2372 1BBE  
                            i2l2384 1BFE                      _start_game_msg 100F  
                      vfprintf@cfmt 004D                              ___wmul 1FE2  
                         ??___lldiv 0012                           ??___lodiv 0011  
                         ??___llmod 0009                           ??___lomod 0011  
                         ??___lwdiv 000E                    __end_of_init_msg 100F  
                            clear_0 1E80                              clear_1 1E8C  
                  ?_LCD_Init_ECE376 0001                              pad@buf 000F  
                            _strlen 202C    __end_of_LCD_write_data_byte_4bit 1E0C  
                            fputc@c 0001                              fputs@c 000B  
                            fputs@i 000C                        __pdataCOMRAM 007B  
                            fputs@s 0009                           ??_isdigit 0003  
                      __mediumconst 0000                           ??_isspace 0003  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                              putch@c 0001  
                  __end_of_vfprintf 1EE6                              utoa@fp 001A  
                         ??_sprintf 0056              __end_of_start_game_msg 101B  
                        __accesstop 0080             __end_of__initialization 1E92  
         _LCD_write_instr_byte_4bit 1E0C           _LCD_write_instr_byte_8bit 1FBA  
                     ___rparam_used 000001                      __pcstackCOMRAM 0001  
       ??_CCP1_Capture_Init_Default 0001                       __end_of_fputc 1BA4  
                     __end_of_fputs 1F8A                       __end_of_putch 2074  
                     _init_complete 0078             _LCD_set_cursor_position 1D08  
                           ??_fputc 0004                             ??_fputs 000B  
                           ??_putch 0001                          __pbssBANK0 0080  
                    _game_done_flag 0076                             ?___wmul 0001  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
                           ?_strlen 0001                  __size_of_vfpfcnvrt 01D2  
          _LCD_write_data_byte_4bit 1DBE           _CCP1_Capture_Init_Default 205A  
                  ___lomod@dividend 0001                             __Hparam 0000  
                           __Lparam 0000                             ___lldiv 1AA2  
                   __size_of___wmul 0026                             ___lodiv 187A  
                           ___llmod 1CA2                             ___lomod 1948  
                           ___lwdiv 1D6C                           ?_vfprintf 004A  
                      __psmallconst 1000                             __pcinit 1E5A  
                           __ramtop 1000                             __ptext0 1036  
                           __ptext1 1F24                             __ptext2 1EA0  
                           __ptext3 12E6                             __ptext4 14B8  
                           __ptext5 1C24                             __ptext6 202C  
                           __ptext7 1F5A                             __ptext8 1B24  
                           __ptext9 2072                     __size_of_strlen 0022  
                     _reaction_time 0068                        __size_of_pad 007E  
                           _isdigit 1F8A                        __size_of_isr 1C1C  
         ??_LCD_set_cursor_position 0006                             _isspace 1EE6  
                      _elapsed_time 006C                             atoi@neg 000E  
                           _sprintf 1F24                      __pintcode_body 1BA4  
              end_of_initialization 1E92                             fputc@fp 0003  
                     __Lmediumconst 0000                             int_func 1BA4  
                           fputs@fp 000A                     ___lldiv@divisor 000E  
                   ___lldiv@counter 0016                          _shift_mode 0077  
                 __end_of_vfpfcnvrt 14B8                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
      __size_of_Timer1_Init_Default 0008                          ??_vfprintf 004D  
                           strlen@a 0003                             strlen@s 0001  
                        _result_msg 00BB                           _PORTBbits 000F81  
LCD_set_cursor_position@pos_on_line 0005                     _address_counter 009A  
                      _CURRENT_DISP 007A                    _current_func_set 007B  
                 _LCD_clear_display 2008                         vfpfcnvrt@ap 003B  
                       vfpfcnvrt@fp 0039                      __end_of___wmul 2008  
                     __pidataCOMRAM 206E                  ?_LCD_clear_display 0001  
                    __end_of_strlen 204E                 start_initialization 1E5A  
                   ___lodiv@divisor 0009                     ___lodiv@counter 0019  
               ??_LCD_clear_display 0005                         __end_of_pad 1CA2  
                       __end_of_isr 1C24            __size_of_LCD_Init_ECE376 00E6  
                   ___llmod@divisor 0005                     ___llmod@counter 0009  
                       vfprintf@fmt 004B           __end_of_LCD_clear_display 202C  
                          ??___wmul 0005          ??_LCD_write_data_byte_4bit 0003  
                          ??_strlen 0003                         __pbssCOMRAM 0068  
                    _num_of_seconds 0098                           _atoi$1240 0014  
                         _atoi$1241 0012                           _atoi$1239 0010  
                         _main$1538 0060                    ___lwdiv@dividend 000A  
__size_of_CCP2_Capture_Init_Default 000C                           __pintcode 0008  
                         _disp_16x2 007D          ?_CCP2_Capture_Init_Default 0001  
                 _LCD_enable_toggle 19F6                            ?___lldiv 000A  
                          ?___lodiv 0001                            ?___llmod 0001  
                          ?___lomod 0001                            ?___lwdiv 000A  
                ?_LCD_enable_toggle 0001                   __size_of_vfprintf 0046  
                   ___lomod@divisor 0009                         __smallconst 1000  
                   ___lomod@counter 0011                            ?_isdigit 0001  
               ??_LCD_enable_toggle 0001                            ?_isspace 0001  
                  ___lwdiv@quotient 000E                            ?_sprintf 004E  
                    __size_of_fputc 0080                      __size_of_fputs 0030  
               _Timer1_Init_Default 2066                      __size_of_putch 0002  
                    ___wmul@product 0005                            _LATCbits 000F8B  
                          _LATDbits 000F8C                   ??_LCD_Init_ECE376 0005  
                          _PIE1bits 000F9D                            _PIE2bits 000FA0  
                     _DISP_BIT_MODE 0079           __end_of_LCD_enable_toggle 1AA2  
                          _PIR1bits 000F9E                            _PIR2bits 000FA1  
        __size_of_LCD_clear_display 0024                           _num_of_ms 0096  
                         _num_of_us 0094                ?_Timer1_Init_Default 0001  
 __end_of_CCP2_Capture_Init_Default 205A                           _vfpfcnvrt 12E6  
                         main@i_681 0065                           main@i_683 0066  
                         main@i_684 0067                   ___wmul@multiplier 0001  
    LCD_write_instr_byte_4bit@instr 0004                        _isspace$1257 0007  
                         copy_data0 1E6E      LCD_write_instr_byte_8bit@instr 0004  
                          __Hrparam 0000                          vfprintf@ap 004C  
                          __Lrparam 0000                          vfprintf@fp 004A  
             ??_Timer1_Init_Default 0001                    __size_of___lldiv 0082  
                  __size_of___lodiv 00CE                    __size_of___llmod 0066  
                  __size_of___lomod 00AE                          ?_vfpfcnvrt 0039  
                  __size_of___lwdiv 0052            ?_LCD_set_cursor_position 0005  
                        sprintf@fmt 004F                    __size_of_isdigit 0030  
                   ___lwdiv@divisor 000C                    __size_of_isspace 003E  
                   ___lwdiv@counter 0010                            __ptext10 1948  
                          __ptext11 187A                            __ptext20 1DBE  
                          __ptext12 1658                            __ptext21 1D08  
                          __ptext13 1EE6                            __ptext22 2008  
                          __ptext14 1F8A                            __ptext23 1FBA  
                          __ptext15 1FE2                            __ptext24 1794  
                          __ptext16 1D6C                            __ptext25 1E0C  
                          __ptext17 1CA2                            __ptext26 19F6  
                          __ptext18 1AA2                            __ptext27 204E  
                          __ptext19 2066                            __ptext28 205A  
                  __size_of_sprintf 0036                       __size_of_atoi 013C  
                     __size_of_main 02B0                            _init_msg 1001  
                     __size_of_utoa 01A0          __size_of_LCD_enable_toggle 00AC  
                  _result_msg_title 101B                            int$flags 007F  
                          _vfprintf 1EA0  __size_of_LCD_write_instr_byte_4bit 004E  
__size_of_LCD_write_instr_byte_8bit 0028          ?_LCD_write_instr_byte_4bit 0001  
        ?_LCD_write_instr_byte_8bit 0001                      _vfpfcnvrt$1221 0048  
                        _INTCONbits 000FF2                            isdigit@c 0001  
                          intlevel2 0000                           sprintf@ap 0058  
                          isspace@c 0001                    ___lldiv@dividend 000A  
   __end_of_LCD_set_cursor_position 1D6C         ??_CCP2_Capture_Init_Default 0001  
                       ??_vfpfcnvrt 003C         hex_to_bit_string@bit_string 00CC  
 __end_of_LCD_write_instr_byte_4bit 1E5A                            sprintf@f 0059  
                          sprintf@s 004E   __end_of_LCD_write_instr_byte_8bit 1FE2  
                  ___lldiv@quotient 0012                     _LCD_Init_ECE376 1794  
 __size_of_LCD_write_data_byte_4bit 004E           ?_LCD_write_data_byte_4bit 0001  
                 _current_disp_ctrl 007E  __size_of_CCP1_Capture_Init_Default 000C  
